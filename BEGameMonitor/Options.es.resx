<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="cbWallRemove.Text" xml:space="preserve">
    <value>Eliminar fondo al salir</value>
  </data>
  <data name="tabUpdates.Text" xml:space="preserve">
    <value>Actualizaciones</value>
  </data>
  <data name="rbEventSortBottom.Text" xml:space="preserve">
    <value>Eventos recientes abajo</value>
  </data>
  <data name="btnCheckEvents.Text" xml:space="preserve">
    <value>Comprobar nuevos eventos</value>
  </data>
  <data name="lblWiretapServer.Text" xml:space="preserve">
    <value>Servidor wiretap:</value>
  </data>
  <data name="cbFilterCountry.Text" xml:space="preserve">
    <value>País</value>
  </data>
  <data name="gbFreeMem.Text" xml:space="preserve">
    <value>Memoria libre</value>
  </data>
  <data name="lblWallZoomMax.Text" xml:space="preserve">
    <value>Max</value>
  </data>
  <data name="gbCheckEvents.Text" xml:space="preserve">
    <value>Comprobar nuevos eventos</value>
  </data>
  <data name="lblResetAllData.Text" xml:space="preserve">
    <value>Los metadatos del juego se almacenan localmente en su computadora y solamente se actualizan cuando se modifican para ahorrar ancho de banda.

Esto limpia los datos almacenados y los vuelve a descargar.</value>
  </data>
  <data name="tabMisc.Text" xml:space="preserve">
    <value>Varios</value>
  </data>
  <data name="cbFilterChokePoint.Text" xml:space="preserve">
    <value>Ciudad</value>
  </data>
  <data name="cbStartMinimised.Text" xml:space="preserve">
    <value>Iniciar minimizado</value>
  </data>
  <data name="cbRunOnStartup.Text" xml:space="preserve">
    <value>Ejecutar en arranque</value>
  </data>
  <data name="cbLoadFactoryData.Text" xml:space="preserve">
    <value>Cargar datos de fábricas al arrancar (+138kb)</value>
  </data>
  <data name="cbDockWindow.Text" xml:space="preserve">
    <value>Acoplar ventana de estado del juego a:</value>
  </data>
  <data name="lblAlwaysAlert.Text" xml:space="preserve">
    <value>Mostrar alertas siempre cuando:</value>
  </data>
  <data name="cbAlwaysAlertChokePointCaptured.Text" xml:space="preserve">
    <value>Una ciudad ha sido capturada</value>
  </data>
  <data name="lblAutoNext.Text" xml:space="preserve">
    <value>Mostrar evento siguiente tras:</value>
  </data>
  <data name="rbMapSize60.Text" xml:space="preserve">
    <value>Medio (60%)</value>
  </data>
  <data name="lnkMapPluginInfo.Text" xml:space="preserve">
    <value>Descargue e instale el Plugin del Mapa de Alta Resolución para permitir que se incremente el tamaño del mapa.</value>
  </data>
  <data name="lblMapInfo.Text" xml:space="preserve">
    <value>Si dispone de recursos suficientes puede incrementar el tamaño del mapa de juego para tener zoom adicional.</value>
  </data>
  <data name="cbPostponeIdle.Text" xml:space="preserve">
    <value>Ausente por más de:</value>
  </data>
  <data name="cbPlayAlertSound.Text" xml:space="preserve">
    <value>Reproducir sonido</value>
  </data>
  <data name="lblAlertDisplay.Text" xml:space="preserve">
    <value>Mostrar alertas emergentes en:</value>
  </data>
  <data name="btnDefaults.Text" xml:space="preserve">
    <value>Predeterminados</value>
  </data>
  <data name="cbAlwaysUseDefaultMapSize.Text" xml:space="preserve">
    <value>Utilizar siempre el tamaño predeterminado al jugar a Battleground Europe</value>
  </data>
  <data name="rbDockWindowRight.Text" xml:space="preserve">
    <value>Derecha</value>
  </data>
  <data name="cbWakeAfterPlay.Text" xml:space="preserve">
    <value>Despertarse automáticamente después</value>
  </data>
  <data name="tabMap.Text" xml:space="preserve">
    <value>Mapa</value>
  </data>
  <data name="lblWallZoomMin.Text" xml:space="preserve">
    <value>Min</value>
  </data>
  <data name="rbMapSize40.Text" xml:space="preserve">
    <value>Predeterminado (40%)</value>
  </data>
  <data name="cbWallOptions.Text" xml:space="preserve">
    <value>Opciones</value>
  </data>
  <data name="btnTestConn.Text" xml:space="preserve">
    <value>Probar conexión</value>
  </data>
  <data name="lblForceNoProxy.Text" xml:space="preserve">
    <value>(dejar en blanco para forzar sin proxy)</value>
  </data>
  <data name="lblMapSize.Text" xml:space="preserve">
    <value>Tamaño de mapa:</value>
  </data>
  <data name="cbShowAlerts.Text" xml:space="preserve">
    <value>Mostrar alertas</value>
  </data>
  <data name="rbUseCustomProxy.Text" xml:space="preserve">
    <value>Servidor proxy:</value>
  </data>
  <data name="lblWallOptions.Text" xml:space="preserve">
    <value>Opciones de mapa:</value>
  </data>
  <data name="rbPositionTop.Text" xml:space="preserve">
    <value>Arriba-derecha</value>
  </data>
  <data name="btnTestAlert.Text" xml:space="preserve">
    <value>Probar Alerta</value>
  </data>
  <data name="lblEventSort.Text" xml:space="preserve">
    <value>Orden de ordenación de eventos:</value>
  </data>
  <data name="cbAlertFilters.Text" xml:space="preserve">
    <value>Editar filtros</value>
  </data>
  <data name="tabLanguage.Text" xml:space="preserve">
    <value>Idioma</value>
  </data>
  <data name="cbCheckVersion.Text" xml:space="preserve">
    <value>Comprobar la última versión</value>
  </data>
  <data name="tabAlerts.Text" xml:space="preserve">
    <value>Alertas</value>
  </data>
  <data name="gbFilterBy.Text" xml:space="preserve">
    <value>Filtrar alertas por:</value>
  </data>
  <data name="cbSleepWhenPlay.Text" xml:space="preserve">
    <value>Dormir mientras juega a Battleground Europe</value>
  </data>
  <data name="rbDockWindowLeft.Text" xml:space="preserve">
    <value>Izquierda</value>
  </data>
  <data name="cbPostponeFullscreen.Text" xml:space="preserve">
    <value>Pantalla completa</value>
  </data>
  <data name="rbMapSize80.Text" xml:space="preserve">
    <value>Grande (80%)</value>
  </data>
  <data name="lblMemUsage.Text" xml:space="preserve">
    <value>Uso de memoria</value>
  </data>
  <data name="tabStartup.Text" xml:space="preserve">
    <value>Arranque</value>
  </data>
  <data name="cbSleepWhenIdle.Text" xml:space="preserve">
    <value>Dormir en ausencia:</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Opciones</value>
  </data>
  <data name="cbShowWallpaper.Text" xml:space="preserve">
    <value>Establecer mapa como fondo de escritorio de windows</value>
  </data>
  <data name="cbFilterEventType.Text" xml:space="preserve">
    <value>Tipo de evento</value>
  </data>
  <data name="gbSleepMode.Text" xml:space="preserve">
    <value>Modo Dormir</value>
  </data>
  <data name="btnResetAllData.Text" xml:space="preserve">
    <value>Resetear todos los datos del juego</value>
  </data>
  <data name="lblWallZoom.Text" xml:space="preserve">
    <value>Zoom:</value>
  </data>
  <data name="rbMapSize100.Text" xml:space="preserve">
    <value>Máximo (100%)</value>
  </data>
  <data name="rbEventSortTop.Text" xml:space="preserve">
    <value>Eventos recientes arriba</value>
  </data>
  <data name="lblAlertPosition.Text" xml:space="preserve">
    <value>Posición:</value>
  </data>
  <data name="lblWallUpdate.Text" xml:space="preserve">
    <value>Actualizar cada:</value>
  </data>
  <data name="btnApplyWallpaper.Text" xml:space="preserve">
    <value>Aplicar</value>
  </data>
  <data name="lblPostponeAlerts.Text" xml:space="preserve">
    <value>Posponer alertas mientras:</value>
  </data>
  <data name="rbPositionBottom.Text" xml:space="preserve">
    <value>Abajo-derecha</value>
  </data>
  <data name="btnOK.Text" xml:space="preserve">
    <value>Aceptar</value>
  </data>
  <data name="gbResetAllData.Text" xml:space="preserve">
    <value>Resetear todos los datos del juego</value>
  </data>
  <data name="btnCancel.Text" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="rbUseIEProxy.Text" xml:space="preserve">
    <value>Utilizar la configuración de proxy de IE</value>
  </data>
  <data name="tabNetwork.Text" xml:space="preserve">
    <value>Red</value>
  </data>
  <data name="lblGameStatusDisplay.Text" xml:space="preserve">
    <value>Mostrar la ventana de estado del juego en:</value>
  </data>
  <data name="cbAlwaysAlertUnderAttack.Text" xml:space="preserve">
    <value>Una ciudad es atacada por primera vez</value>
  </data>
  <data name="lblCheckEvents.Text" xml:space="preserve">
    <value>BEGM consulta dinámicamente los eventos nuevos del juego al servidor Wiretap cada 1 - 15 minutos, dependiendo del tipo de evento.

Utilice esto para forzar una comprobación manual inmediata de eventos.</value>
  </data>
  <data name="itmChokePointSelectAll.Text" xml:space="preserve">
    <value>Seleccionar Todo</value>
  </data>
  <data name="itmChokePointClearAll.Text" xml:space="preserve">
    <value>Limpiar Todo</value>
  </data>
</root>
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Xiperware.WiretapAPI</name>
    </assembly>
    <members>
        <member name="T:Xiperware.WiretapAPI.GameState">
            <summary>
            The GameState class encapsulates all information to do with the current state of the
            game. This includes all Countrys, ChokePoints and their Facility's, etc.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameState.Countries">
            <summary>
            An array of all Countrys, indexed by country id.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameState.Ranks">
            <summary>
            An array of all player Ranks, indexed by rank level.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameState.ChokePoints">
            <summary>
            An array of all ChokePoints, indexed by chokepoint id.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameState.Facilities">
            <summary>
            An array of all Facilitys, indexed by facility id.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameState.Bridges">
            <summary>
            An array of all Bridges, indexed by chokepoint id.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameState.HCUnits">
            <summary>
            A hash of all HCUnits, keyed by unit id.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameState.Factories">
            <summary>
            A hash of all Factorys, keyed by facility id.
            </summary>
            <remarks>Factorys also appear in the Facility array.</remarks>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameState.Links">
            <summary>
            A hash of all ChokePoint Links, keyed by both cp ids.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameState.Firebases">
            <summary>
            A hash of all Firebases, keyed by facility id.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameState.Squads">
            <summary>
            A hash of all Squads, keyed by squad id.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameState.MapCells">
            <summary>
            A hash of cells on the map, keyed by x/y Point in game meters.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameState.Servers">
            <summary>
            A hash of game server instances, keyed by server id.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameState.MoveResults">
            <summary>
            An array of all Move Results, indexed by id.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameState.VehicleCategories">
            <summary>
            An array of Vehicle Categories, indexed by id.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameState.VehicleClasses">
            <summary>
            An array of Vehicle Classes, indexed by id.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameState.Vehicles">
            <summary>
            An array of Vehicles, indexed by vehicle id.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameState.Toes">
            <summary>
            A hash of all Toes, keyed by toe code.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameState.ServerParams">
            <summary>
            A hash of all ww2 config items, keyed by item name.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameState.MapCellSize">
            <summary>
            Gets the cell width of the deathmap data, as defined in the xml.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameState.AlliedFrontline">
            <summary>
            The current Allied frontline.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameState.AxisFrontline">
            <summary>
            The current Axis frontline.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameState.AllCPs">
            <summary>
            A list of both normal and dummy ChokePoints.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameState.Events">
            <summary>
            The collection of events related to this game state, or null if not tracking events.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.GameState.#ctor">
            <summary>
            Create a new Wiretap object.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameState.Wiretap">
            <summary>
            Gets or sets the wiretap object currently being used to update this game state, if any.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameState.TopHCUnit">
            <summary>
            The top-level HCUnit that contains all other HCUnits.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameState.ValidChokePoints">
            <summary>
            An enumerable collection of valid (non-null) ChokePoints.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.GameState.GenerateCPData">
            <summary>
            Generate additional ChokePoint data (nearby cps, dummy cps, frontlines, alt).
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.GameState.Cleanup">
            <summary>
            Remove references to local game objects.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.GameState.GenerateNearbyChokePoints(System.Collections.Generic.IList{Xiperware.WiretapAPI.ChokePoint},System.Collections.Generic.IList{Xiperware.WiretapAPI.ChokePoint})">
            <summary>
            Calculate the neighbouring ChokePoints for each cp.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.GameState.GenerateDummyChokePoints">
            <summary>
            Generate a list of "dummy cps" that surround the outline of normal cps (used for frontline).
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.GameState.AddAltitudeData">
            <summary>
            Populate the cp.AltitudeMeters property for each ChokePoint.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.GameState.UpdateActivityLevels">
            <summary>
            Updates the activity level for each cp based on recent nearby deaths and captures.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.GameState.PruneHCUnitMoveHistory">
            <summary>
            Prunes the move history for all HCUnits.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.GameState.UpdateFrontlines">
            <summary>
            Updates the pair of frontlines to match current cp ownership.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.GameState.OpenFirebases">
            <summary>
            Checks each firebase pair and makes sure each active link has an open firebase.
            </summary>
            <returns>A list of firebases that have been opened.</returns>
        </member>
        <member name="T:Xiperware.WiretapAPI.Data">
            <summary>
            A generic class for storing static data used by WW2 Online.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Data.GetAltitudes(System.Int32)">
            <summary>
            Gets data for the average altitude of each chokepoint. 
            </summary>
            <remarks>
            Data extracted from http://www.battlegroundtools.com/documents/Altitudes-128.pdf
            by FOGABAN, used with permission.
            </remarks>
            <param name="minLength">Minimum length of array.</param>
            <returns>An array of altitude heights in meters, indexed by cp id.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Data.GetRanks">
            <summary>
            Gets rank data by parsing the embedded ranklist xml.
            </summary>
            <remarks>
            Ranklist provided by KFS1: http://ww2.kfs.org/ranklist.xml
            </remarks>
            <returns>An array of Rank objects.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Data.GetCountryBorders">
            <summary>
            Gets country border data by parsing embedded files of lat/long degree polygons.
            </summary>
            <remarks>
            Data provided by PSU's Digital Chart of the World Server based on NIMA's 'Vector
            Map Level 0' data. http://www.maproom.psu.edu/dcw/.
            </remarks>
            <returns>A list of CountryBorder's.</returns>
        </member>
        <member name="T:Xiperware.WiretapAPI.Frontline">
            <summary>
            A frontline between friendly territory and "no-mans-land".
            </summary>
            <remarks>
            Generating a pair of frontlines from a list of chokepoints is non-trivial and
            took several attempts and rewrites to come up with an algorithm that was
            sufficiently robust.
            The method used here expands a polygon to create a hull that contains all friendly
            towns, then creates a line along the hull edge where it is near the enemy.
            </remarks>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.#ctor(Xiperware.WiretapAPI.Side)">
            <summary>
            Create a new Frontline object (assign cps later).
            </summary>
            <param name="side">The Side this frontline surrounds.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.#ctor(Xiperware.WiretapAPI.Side,System.Collections.Generic.IList{Xiperware.WiretapAPI.ChokePoint})">
            <summary>
            Create a new Frontline object.
            </summary>
            <param name="side">The Side this frontline surrounds.</param>
            <param name="allChokepoints">A list of all ChokePoints to be used in calculating this frontline (normal and dummy CPs).</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.Frontline.Hulls">
            <summary>
            List of hulls (each a list of ChokePoints).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Frontline.Lines">
            <summary>
            List of frontlines (each a list of Points, units are game world octets).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Frontline.EnemyLinks">
            <summary>
            List of enemy links (Points are in pairs, units are game world octets).
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.SetChokePointList(System.Collections.Generic.IList{Xiperware.WiretapAPI.ChokePoint})">
            <summary>
            Assign the list of all ChokePoints (normal and dummy) used in the
            calculation of this frontline.
            </summary>
            <param name="allChokepoints">The list of ChokePoints to assign.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.Update">
            <summary>
            Regenerate this frontline.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.Update(System.Collections.Generic.List{System.Collections.Generic.List{Xiperware.WiretapAPI.ChokePoint}})">
            <summary>
            Regenerate this frontline, taking into account the given enemy
            frontline (avoid intersecting, going too close).
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.Cleanup">
            <summary>
            Remove references to local game objects.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.ResetData">
            <summary>
            Reset internal data to prepare for regenerating frontlines.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.CreateHulls">
            <summary>
            Create one or more hulls that encapsulates all friendly cps.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.StartHull">
            <summary>
            Creates a new hull from the todo list.
            </summary>
            <returns>An initial 3-node hull, or null if no more starting hulls.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.GetNewStartingPoint">
            <summary>
            Gets a new starting node from the todo list.
            </summary>
            <returns>The chokepoint or null if no more are left.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.GetInitialTriangle(Xiperware.WiretapAPI.ChokePoint)">
            <summary>
            Attempts to create an initial 3-node triangle starting with the given cp.
            </summary>
            <param name="cpStart">The node to start at.</param>
            <returns></returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.RefineHull(System.Int32)">
            <summary>
            Takes an initial hull and "inflates" it to fill the available area of
            friendly cps using a combination of various algorithms.
            </summary>
            <param name="iHull">The index of the hull to refine.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.TryMergeExpand(System.Collections.Generic.IList{Xiperware.WiretapAPI.ChokePoint},System.Int32)">
            <summary>
            Attempt to move a point on the hull further out.
            </summary>
            <param name="hull">The hull to act upon.</param>
            <param name="i1">The index of the starting node.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.TryMergeTri(System.Collections.Generic.IList{Xiperware.WiretapAPI.ChokePoint},System.Int32)">
            <summary>
            Attempt to merge an inward triangle.
            </summary>
            <param name="hull">The hull to act upon.</param>
            <param name="i1">The index of the starting node.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.TryMergeQuad(System.Collections.Generic.IList{Xiperware.WiretapAPI.ChokePoint},System.Int32)">
            <summary>
            Attempt to merge an inward quad.
            </summary>
            <param name="hull">The hull to act upon.</param>
            <param name="i1">The index of the starting node.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.TryExpand(System.Collections.Generic.IList{Xiperware.WiretapAPI.ChokePoint},System.Int32)">
            <summary>
            Attempt to add a new point.
            </summary>
            <param name="hull">The hull to act upon.</param>
            <param name="i1">The index of the starting node.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.TryMerge(System.Collections.Generic.List{Xiperware.WiretapAPI.ChokePoint},System.Int32)">
            <summary>
            Attempts to merge an inward polygon (4+ points).
            </summary>
            <param name="hull">The hull to act upon.</param>
            <param name="i1">The index of the starting node.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.TrySplit(System.Collections.Generic.List{Xiperware.WiretapAPI.ChokePoint},System.Int32,System.Collections.Generic.List{Xiperware.WiretapAPI.ChokePoint}@)">
            <summary>
            Attempts to split the polygon into two when it folds around a pocket back on itself.
            </summary>
            <param name="hull">The hull to act upon.</param>
            <param name="i1">The index of the starting node.</param>
            <param name="subHull">The hull to populate with the inner "subhull" if found.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.CreateLines">
            <summary>
            Create frontlines from the hulls.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.GetNodeLitUp(Xiperware.WiretapAPI.ChokePoint)">
            <summary>
            Gets whether a hull node should be "lit up" (part of a line).
            </summary>
            <param name="cp">The ChokePoint node.</param>
            <returns>True if should be part of a line.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.IsHullChokePoint(Xiperware.WiretapAPI.ChokePoint)">
            <summary>
            Checks if the given ChokePoint is part of a hull.
            </summary>
            <param name="cp">The ChokePoint to test.</param>
            <returns>True if exists in any friendly hull.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.IsEnemy(Xiperware.WiretapAPI.ChokePoint)">
            <summary>
            Checks if the given ChokePoint is an enemy (draw hull).
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.IsEnemy2(Xiperware.WiretapAPI.ChokePoint)">
            <summary>
            Checks if the given ChokePoint is an enemy (light up hull).
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.IntersectsWithHull(Xiperware.WiretapAPI.ChokePoint,Xiperware.WiretapAPI.ChokePoint)">
            <summary>
            Tests whether a line segment would intersect with a specific hull (or enemy).
            </summary>
            <param name="cp1">The chokepoint at the start of the line segment.</param>
            <param name="cp2">The chokepoint at the end of the line segment.</param>
            <returns>True if the line segment cp1-cp2 intersects with the given hull, or if provided, any enemy hull.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.IntersectsWithFriendlyHull(Xiperware.WiretapAPI.ChokePoint,Xiperware.WiretapAPI.ChokePoint)">
            <summary>
            Tests whether a line segment would intersect with a friendly hull.
            </summary>
            <param name="cp1">The chokepoint at the start of the line segment.</param>
            <param name="cp2">The chokepoint at the end of the line segment.</param>
            <returns>True if the line segment cp1-cp2 intersects with any friendly hull.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.IntersectsWithEnemyHull(Xiperware.WiretapAPI.ChokePoint,Xiperware.WiretapAPI.ChokePoint)">
            <summary>
            Tests whether a line segment would intersect with an enemy hull (if provided).
            </summary>
            <param name="cp1">The chokepoint at the start of the line segment.</param>
            <param name="cp2">The chokepoint at the end of the line segment.</param>
            <returns>True if the line segment cp1-cp2 intersects with any enemy hull.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.HullIntersect(System.Collections.Generic.IList{Xiperware.WiretapAPI.ChokePoint},System.Drawing.Point[])">
            <summary>
            Tests whether a line segment would intersect with a hull.
            </summary>
            <remarks>Used internally by IntersectsWithHull() and IntersectsWithAnyHull().</remarks>
            <param name="hull">The chokepoint hull to test.</param>
            <param name="lines">An array of Points in game meters that make up the line(s) to test.</param>
            <returns>True if the line segment pt1-pt2 intersects with the given hull.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.GetChokePointsWithinPoly(System.Collections.Generic.IList{Xiperware.WiretapAPI.ChokePoint})">
            <summary>
            Gets any ChokePoints within a polygon.
            </summary>
            <param name="polyCPs">A series of ChokePoints that make up a polygon.</param>
            <returns>Any ChokePoints found to lie within the given polygon.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.GetChokePointsWithinPoly(Xiperware.WiretapAPI.ChokePoint[])">
            <summary>
            Gets any ChokePoints within a polygon.
            </summary>
            <param name="polyCPs">A series of ChokePoints that make up a polygon.</param>
            <returns>Any ChokePoints found to lie within the given polygon.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.GetChokePointsWithinPoly(System.Drawing.Point[])">
            <summary>
            Gets any ChokePoints within a polygon.
            </summary>
            <param name="poly">A series of Points in game meters that make up a polygon.</param>
            <returns>Any ChokePoints found to lie within the given polygon.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.IsChokePointsWithinPoly(System.Drawing.Point[])">
            <summary>
            Checks if any ChokePoints are within a polygon.
            </summary>
            <param name="poly">A series of Points in game meters that make up a polygon.</param>
            <returns>True when the first cp is found.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.GetChokePointsWithinPoly(System.Boolean,System.Drawing.Point[])">
            <summary>
            Gets any ChokePoints within a polygon.
            </summary>
            <param name="onlyFirst">Only return the first cp.</param>
            <param name="poly">A series of Points in game meters that make up a polygon.</param>
            <returns>Any ChokePoints found to lie within the given polygon.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.IsSegmentConcave(System.Collections.Generic.IList{Xiperware.WiretapAPI.ChokePoint},System.Int32,System.Int32)">
            <summary>
            Tests whether the given segment of a hull is concave.
            </summary>
            <param name="hull">The chokepoint hull to test.</param>
            <param name="start">The index of the first node in the segment.</param>
            <param name="end">The index of the last node in the segment (may wrap around index 0).</param>
            <returns>True if the segment as a whole is concave.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.IntersectsEnemyLink(Xiperware.WiretapAPI.ChokePoint,Xiperware.WiretapAPI.ChokePoint)">
            <summary>
            Tests whether a line segment would intersect with an enemy link.
            </summary>
            <param name="cp1">The chokepoint at the start of the line segment.</param>
            <param name="cp2">The chokepoint at the end of the line segment.</param>
            <returns>True if the line segment cp1-cp2 crosses an enemy link.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.LineTooClose(Xiperware.WiretapAPI.ChokePoint,Xiperware.WiretapAPI.ChokePoint,Xiperware.WiretapAPI.ChokePoint,Xiperware.WiretapAPI.ChokePoint)">
            <summary>
            Check if the proposed frontline segment is too close to another cp or enemy frontline.
            </summary>
            <param name="cp0">The ChokePoint before the start of the line.</param>
            <param name="cp1">The ChokePoint at the start of the line.</param>
            <param name="cp2">The ChokePoint at the end of the line.</param>
            <param name="cp3">The ChokePoint after the end of the line.</param>
            <returns>True if there is a cp or enemy frontline nearby.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.GetCollisionPoly(Xiperware.WiretapAPI.ChokePoint,Xiperware.WiretapAPI.ChokePoint,Xiperware.WiretapAPI.ChokePoint,Xiperware.WiretapAPI.ChokePoint,System.Boolean)">
            <summary>
            Creates a polygon between two cps covering an area that needs to be checked
            for "collisions" with other frontlines, cps, etc.
            </summary>
            <param name="cp0">The ChokePoint before the start of the line.</param>
            <param name="cp1">The ChokePoint at the start of the line.</param>
            <param name="cp2">The ChokePoint at the end of the line.</param>
            <param name="cp3">The ChokePoint after the end of the line.</param>
            <param name="friendly"></param>
            <returns>A list of Point's in game meters.</returns>
            <remarks>Enable DEBUG_FRONTLINE and select a frontline cp on the map to see the poly.</remarks>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.FriendlyNearLine(Xiperware.WiretapAPI.ChokePoint,Xiperware.WiretapAPI.ChokePoint,Xiperware.WiretapAPI.ChokePoint,Xiperware.WiretapAPI.ChokePoint)">
            <summary>
            Check if the proposed frontline segment is too close to another cp.
            </summary>
            <param name="cp0">The ChokePoint before the start of the line.</param>
            <param name="cp1">The ChokePoint at the start of the line.</param>
            <param name="cp2">The ChokePoint at the end of the line.</param>
            <param name="cp3">The ChokePoint after the end of the line.</param>
            <returns>True if there is a cp nearby.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.EnemyNearLine(Xiperware.WiretapAPI.ChokePoint,Xiperware.WiretapAPI.ChokePoint,Xiperware.WiretapAPI.ChokePoint,Xiperware.WiretapAPI.ChokePoint)">
            <summary>
            Check if the proposed frontline segment is too close to the enemy.
            </summary>
            <param name="cp0">The ChokePoint before the start of the line.</param>
            <param name="cp1">The ChokePoint at the start of the line.</param>
            <param name="cp2">The ChokePoint at the end of the line.</param>
            <param name="cp3">The ChokePoint after the end of the line.</param>
            <returns>True if there is an enemy cp or frontline nearby.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Frontline.AngleTooSharp(Xiperware.WiretapAPI.ChokePoint[])">
            <summary>
            Check if any angles in the proposed frontline segment are too sharp.
            </summary>
            <param name="cps">The ChokePoints to test (grouped into threes, eg, 012, 123, 234, etc).</param>
            <returns>True if any of the angles are less than 25deg.</returns>
        </member>
        <member name="T:Xiperware.WiretapAPI.WW2">
            <summary>
            A class for storing constant game settings.
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.WW2.BRIGADE_MOVEMENT_DELAY_FRONTLINE">
            <summary>
            The time in minutes a hcunit must remain deployed after moving to a frontline cp.
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.WW2.BRIGADE_MOVEMENT_DELAY_NONFRONTLINE">
            <summary>
            The time in minutes a hcunit must remain deployed after moving to a non frontline cp.
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.WW2.BRIGADE_ROUTED_DELAY">
            <summary>
            The time in minutes a hcunit must spend in training after being routed before
            being able to be deployed on map again.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.Side">
            <summary>
            The two opposing sides in game.
            </summary>
            <remarks>Any inactive countries are Side.None.</remarks>
        </member>
        <member name="T:Xiperware.WiretapAPI.Branch">
            <summary>
            The three military branches.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.MoveType">
            <summary>
            The way a HCUnit is allowed to move.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.ChokePointType">
            <summary>
            The types of ChokePoints used internally by CRS.
            </summary>
            <remarks>The only type used is Bridge, to separate them from ChokePoints.</remarks>
        </member>
        <member name="T:Xiperware.WiretapAPI.FacilityType">
            <summary>
            The types of Facilitys used internally by CRS.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.HCUnitLevel">
            <summary>
            The five levels of the HC hierarchy.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.FirebaseState">
            <summary>
            The possible states of each firebase pair.
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.FirebaseState.Inactive">
            <summary>
            Chokepoints have same owner/controller.
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.FirebaseState.Offensive">
            <summary>
            Chokepoints have different owning sides.
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.FirebaseState.Defensive">
            <summary>
            Chokepoints have different controlling sides.
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.FirebaseState.Brigade">
            <summary>
            Chokepoints have same owner/controller, one is frontline with no deployed
            hcunits, the other with an army brigade.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.ServerPopulation">
            <summary>
            The abstracted levels of player population on a server.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.ServerState">
            <summary>
            The states a game server can be in.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.ActivityLevel">
            <summary>
            The level of player activity around a chokepoint.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.HCUnitMoveState">
            <summary>
            The states a hcunit move request can be in.
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.HCUnitMoveState.Unknown">
            <summary>
            Unknown state.
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.HCUnitMoveState.RequestFailed">
            <summary>
            Request made and failed.
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.HCUnitMoveState.Pending">
            <summary>
            Request made and succeeded, waiting for completion attempt.
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.HCUnitMoveState.CompletionFailed">
            <summary>
            Request successful, completion attempt failed.
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.HCUnitMoveState.Success">
            <summary>
            Request successful, completion successful.
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.HCUnitMoveState.Cancelled">
            <summary>
            Request successful, but another request made before completion attempted.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.AccessLevel">
            <summary>
            Vehicle access level.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.QuadID">
            <summary>
            A four-integer identifier.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.QuadID.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Create a new QuadID with the given values.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.QuadID.FromString(System.String)">
            <summary>
            Create a new empty QuadID
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.QuadID.ToString">
            <summary>
            Provides a string representation of this object.
            </summary>
            <returns>eg, 1.2.3.4</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.QuadID.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object value.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if obj is the same Country.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.QuadID.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.QuadID.op_Equality(Xiperware.WiretapAPI.QuadID,Xiperware.WiretapAPI.QuadID)">
            <summary>
            Support for the == operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.QuadID.op_Inequality(Xiperware.WiretapAPI.QuadID,Xiperware.WiretapAPI.QuadID)">
            <summary>
            Support for the != operator.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.FactoryTick">
            <summary>
            A structure to store information about a single, per-factory, tick.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.FactoryTick.#ctor(System.DateTime,System.Int32,System.Int32)">
            <summary>
            Create a new FactoryTick.
            </summary>
            <param name="stamp">The date/time of the FactoryTick.</param>
            <param name="damage">The percent damage of the Factory during the FactoryTick (0 = healthy, 100 = damaged).</param>
            <param name="rdp">0 or 1, depending if the Factory contributed to RDP during the FactoryTick.</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryTick.TimeStamp">
            <summary>
            The date/time of this FactoryTick.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryTick.Damage">
            <summary>
            The percent damage of the Factory during this FactoryTick.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryTick.RDP">
            <summary>
            The number of resource points (0 or 1) the Factory produced during this FactoryTick.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.SideCount">
            <summary>
            A structure for holding a count for both sides.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.SideCount.#ctor(System.Int32,System.Int32)">
            <summary>
            Create a new SideCount with the given values.
            </summary>
            <param name="allied">The Allied value.</param>
            <param name="axis">The Axis value.</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.SideCount.Allied">
            <summary>
            The count for the Allied side.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.SideCount.Axis">
            <summary>
            The count for the Axis side.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.SideCount.Total">
            <summary>
            The total count for all sides.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.SideCount.Add(Xiperware.WiretapAPI.SideCount)">
            <summary>
            Increments this object by the given SideCount.
            </summary>
            <param name="other">The side count to add.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.SideCount.Add(System.Int32,System.Int32)">
            <summary>
            Increments this object by the given values.
            </summary>
            <param name="allied">The allied count to add.</param>
            <param name="axis">The axis count to add.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.SideCount.ToString">
            <summary>
            Provides a string representation of this object.
            </summary>
            <returns>The allied/axis counts.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.SideCount.op_Implicit(Xiperware.WiretapAPI.SideCount)~Xiperware.WiretapAPI.SideCountF">
            <summary>
            Support for implicit conversion to SideCountF.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.SideCountF">
            <summary>
            A structure for holding a count for both sides.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.SideCountF.#ctor(System.Single,System.Single)">
            <summary>
            Create a new SideCountF with the given values.
            </summary>
            <param name="allied">The Allied value.</param>
            <param name="axis">The Axis value.</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.SideCountF.Allied">
            <summary>
            The count for the Allied side.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.SideCountF.Axis">
            <summary>
            The count for the Axis side.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.SideCountF.Total">
            <summary>
            The total count for all sides.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.SideCountF.Add(Xiperware.WiretapAPI.SideCountF)">
            <summary>
            Increments this object by the given SideCount.
            </summary>
            <param name="other">The side count to add.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.SideCountF.Add(System.Single,System.Single)">
            <summary>
            Increments this object by the given values.
            </summary>
            <param name="allied">The allied count to add.</param>
            <param name="axis">The axis count to add.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.SideCountF.ToString">
            <summary>
            Provides a string representation of this object.
            </summary>
            <returns>The allied/axis counts.</returns>
        </member>
        <member name="T:Xiperware.WiretapAPI.SupplyLevel">
            <summary>
            A structure for holding the per-cycle supply levels for a particular vehicle.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.SupplyLevel.#ctor(System.Int32)">
            <summary>
            Create a new supply list.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.SupplyLevel.#ctor(System.Int32,System.String,System.Int32)">
            <summary>
            Create a new supply list.
            </summary>
            <param name="start">The starting vehicle count in cycle 0.</param>
            <param name="adjustments">Any adjustments to future cycles.</param>
            <param name="cycleCount">The number of cycles to fill out.</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.SupplyLevel.Cycle">
            <summary>
            Gets the supply level for a specific cycle.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.SupplyLevel.ToString">
            <summary>
            Provides a string representation of this object.
            </summary>
            <returns>A comma separated list of values.</returns>
        </member>
        <member name="T:Xiperware.WiretapAPI.Rank">
            <summary>
            A structure that contains player rank levels and the names used in each branch/country.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Rank.#ctor(System.Int32,System.String,System.String[0:,0:])">
            <summary>
            Create a new Rank.
            </summary>
            <param name="id">The unique rank identifier.</param>
            <param name="type">The rank type (enlisted, officer, command, staff).</param>
            <param name="names">A two dimensional array of rank names, keyed by country and branch.</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.Rank.Name">
            <summary>
            Gets the name used by this rank in the given country and branch (rank.Name[country,branch] = "rankname").
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Rank.Code">
            <summary>
            Gets the rank code for this rank (eg, E1, O9, C14, R23).
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Rank.ToString">
            <summary>
            Provides a string representation of this object.
            </summary>
            <returns>The name used by the british army.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Rank.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object value.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if obj is the same Rank.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Rank.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The rank id.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Rank.op_Equality(Xiperware.WiretapAPI.Rank,Xiperware.WiretapAPI.Rank)">
            <summary>
            Support for the == operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Rank.op_Inequality(Xiperware.WiretapAPI.Rank,Xiperware.WiretapAPI.Rank)">
            <summary>
            Support for the != operator.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.CountryBorder">
            <summary>
            A structure for storing country border data, and converting to map pixels.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.CountryBorder.#ctor(System.String,System.Drawing.PointF,System.Collections.Generic.List{System.Drawing.PointF[]})">
            <summary>
            Create a new CountryBorder.
            </summary>
            <param name="countryName">The country name (should match Language.Enum_CountryName_...).</param>
            <param name="center">A PointF in decimal degrees for the position of the name label.</param>
            <param name="borders">A list of polygon arrays in decimal degrees.</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.CountryBorder.CountryName">
            <summary>
            The name of the country.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.CountryBorder.GetCenter(Xiperware.WiretapAPI.MapMetrics)">
            <summary>
            Gets the center point in map pixels.
            </summary>
            <param name="mm">The MapMetrics object used for the conversion.</param>
            <returns>A PointF in map pixels.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.CountryBorder.GetBorders(Xiperware.WiretapAPI.MapMetrics)">
            <summary>
            Gets a list of polygons in map pixels that make up the country border (cached).
            </summary>
            <param name="mm">The MapMetrics object used for the conversion.</param>
            <returns>A list of Point[] arrays in map pixels.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.CountryBorder.ToString">
            <summary>
            Provides a string representation of this object.
            </summary>
            <returns>The country name.</returns>
        </member>
        <member name="T:Xiperware.WiretapAPI.Country">
            <summary>
            A structure to store information about one of the countries used in game.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Country.#ctor(System.Int32,System.String,System.String,System.String,Xiperware.WiretapAPI.Side)">
            <summary>
            Create a new Country.
            </summary>
            <param name="id">The unique Country id.</param>
            <param name="abbr">The two-letter Country abbreviation.</param>
            <param name="name">The Country's name (eg, "Germany").</param>
            <param name="demonym">The name of the Country's people (eg, "German") (can be multiple values separated by a comma).</param>
            <param name="side">Allied/Axis</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.Country.None">
            <summary>
            Get a Country object that represents "No Country".
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Country.ID">
            <summary>
            The unique Country identifier.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Country.Abbr">
            <summary>
            The two-letter abbreviation of the Country.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Country.Name">
            <summary>
            The name of the Country.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Country.Demonym">
            <summary>
            The word describing the Countrys people.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Country.Side">
            <summary>
            The side this Country belongs to.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Country.CurrentRDPCycle">
            <summary>
            The RDP cycle currently being used (-1 if not loaded).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Country.NextRDPCycle">
            <summary>
            The RDP cycle currently in production (0 if not loaded).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Country.RDPGoal">
            <summary>
            The current RDP goal in points (-1 if not loaded).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Country.RDPPrevCyclePoints">
            <summary>
            The total number of RDP points in all previous cycles.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Country.IsActive">
            <summary>
            If this Country is currently used in game.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Country.CountryFlag">
            <summary>
            The flag for this Country.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Country.BrigadeFlag">
            <summary>
            The flag for this Country's brigade.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Country.SetRDPState(System.Int32)">
            <summary>
            Sets or updates the RDP stats for this Country.
            </summary>
            <param name="cycle">The number of the current in-use RDP cycle.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.Country.SetRDPState(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets or updates the RDP stats for this Country.
            </summary>
            <param name="cycle">The number of the current in-use RDP cycle.</param>
            <param name="goal">The number of RDP points to reach to complete the cycle.</param>
            <param name="prevCyclePoints">The total points for all previous cycles.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.Country.ToString">
            <summary>
            Provides a string representation of this object.
            </summary>
            <returns>The Country name.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Country.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object value.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if obj is the same Country.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Country.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The Country id.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Country.op_Equality(Xiperware.WiretapAPI.Country,Xiperware.WiretapAPI.Country)">
            <summary>
            Support for the == operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Country.op_Inequality(Xiperware.WiretapAPI.Country,Xiperware.WiretapAPI.Country)">
            <summary>
            Support for the != operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Country.CompareTo(Xiperware.WiretapAPI.Country)">
            <summary>
            Compare this object with another Country object.
            </summary>
            <param name="other">The other Country to compare with.</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Country.CompareTo(System.Object)">
            <summary>
            Compare this object with another Country object.
            </summary>
            <param name="obj">The other Country to compare with.</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="T:Xiperware.WiretapAPI.ChokePoint">
            <summary>
            A ChokePoint is a town that can be attacked &amp; captured to move the front line.
            </summary>
            <remarks>Doesn't include Bridges.</remarks>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePoint.#ctor(System.Int32,System.String,Xiperware.WiretapAPI.ChokePointType,Xiperware.WiretapAPI.Country,System.Drawing.Point,Xiperware.WiretapAPI.GameEventCollection)">
            <summary>
            Create a new ChokePoint.
            </summary>
            <param name="id">The unique ChokePoint id.</param>
            <param name="name">The name of the ChokePoint.</param>
            <param name="type">The type of ChokePoint.</param>
            <param name="origCountry">The Country that owns the ChokePoint at the start of the campaign.</param>
            <param name="locationOctets">The location of the ChokePoint in game world octets.</param>
            <param name="eventTracker">The event collection to use to track game events for this ChokePoint (may be null).</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.ID">
            <summary>
            The unique ChokePoint identifier.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.Name">
            <summary>
            The ChokePoint name.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.Type">
            <summary>
            The type of this ChokePoint (eg, Generic, Bridge, ...)
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.OriginalCountry">
            <summary>
            The Country that originally owns this ChokePoint at the beginning of a campaign.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.LocationOctets">
            <summary>
            The coordinates of the ChokePoint on the map in game world octets.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.Location">
            <summary>
            The coordinates of the ChokePoint on the map in game world meters.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.EventTracker">
            <summary>
            The event collection to use to track game events for this ChokePoint (or null if not tracked).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.Events">
            <summary>
            An iterator for all Game Events related to this ChokePoint.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.AltitudeMeters">
            <summary>
            The average altitude of this town in meters.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.AltitudeFeet">
            <summary>
            The average altitude of this town in feet.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.Owner">
            <summary>
            Set or get the Country that currently owns this ChokePoint.
            </summary>
            <remarks>The owner is the last Country that owned all Facilities in the ChokePoint.</remarks>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.Controller">
            <summary>
            The Country that currently controls this ChokePoint.
            </summary>
            <remarks>The controller is the last Country that owned all Armybases in the ChokePoint.</remarks>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.HasAO">
            <summary>
            Gets whether this ChokePoint currently has an Attack Objective placed on it.
            May be set to false to clear the AO.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.AttackingHCUnit">
            <summary>
            Gets the HCUnit that placed the AO on this cp (null when no AO).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.IsContested">
            <summary>
            Gets whether the ChokePoint is currently contested.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.ContestedRecently">
            <summary>
            Gets whether this ChokePoint has been contested in the past two hours.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.Activity">
            <summary>
            The level of player activity around this ChokePoint.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.Facilities">
            <summary>
            A list of all Facilities in this ChokePoint.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.Firebases">
            <summary>
            A list of all Firebases attached to this ChokePoint.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.Links">
            <summary>
            A list of all Links attached to this ChokePoint.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.Depots">
            <summary>
            A list of all Depots in this ChokePoint.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.DeployedHCUnits">
            <summary>
            A list of all HCUnits deployed in this ChokePoint.
            </summary>
            <remarks>
            Only returns units of the same side as the cp owner, enemy units can be present
            in this.hcunits if they haven't been kicked out yet due to 5 minute delay.
            </remarks>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.LinkedChokePoints">
            <summary>
            A list of all linked neighbouring ChokePoints.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.NearbyChokePoints">
            <summary>
            A list of all neighbouring ChokePoints.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.IsTraining">
            <summary>
            True if one of the three training cp's.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.LastOwnerChanged">
            <summary>
            The last time the ChokePoint was captured (if known).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.LastControllerChanged">
            <summary>
            The last time control was lost or regained (if known).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.LastContestedChanged">
            <summary>
            The last time the ChokePoint was contested or regained (if known).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.LastAOChanged">
            <summary>
            The last time an AO was placed or withdrawn (if known).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.PercentOwnership">
            <summary>
            Gets the current percentage of friendly facilities, weighted by 'importance'.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.IsFrontline">
            <summary>
            True if linked to an enemy Chokepoint.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.AttackFrom">
            <summary>
            Gets a hash of ChokePoint:percent values of where the current attack is coming from.
            </summary>
            <remarks>Should always be empty if no AO.</remarks>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.HasSpawnableHCUnit">
            <summary>
            True if this ChokePoint has a friendly deployed brigade, excluding paras
            (required for spawnable depot).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.HasArmyBrigade">
            <summary>
            True if this ChokePoint has a friendly deployed army brigade (excluding paras).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.HasAirUnit">
            <summary>
            True if this ChokePoint has a friendly deployed air brigade/division.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.HasNavyUnit">
            <summary>
            True if this ChokePoint has a friendly deployed navy brigade/division.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.HasArmybase">
            <summary>
            True if this ChokePoint contains an airfield facility.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.HasAirbase">
            <summary>
            True if this ChokePoint contains an airfield facility.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.HasNavalbase">
            <summary>
            True if this ChokePoint contains a docks facility.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.FlagImage">
            <summary>
            Generate a flag image for the ChokePoint, showing owner, controller &amp; contested state.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.FlagTooltip">
            <summary>
            A tooltip for the ChokePoints flag image.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.ActivityImage">
            <summary>
            Gets the led graph image for the current activity level.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePoint.HasEnemySpawnable">
            <summary>
            True if the enemy own a spawnable depot.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePoint.AddNearCP(Xiperware.WiretapAPI.ChokePoint)">
            <summary>
            Adds the given ChokePoint from the list of NearbyChokePoints.
            </summary>
            <param name="cp">The ChokePoint to add.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePoint.RemoveNearCP(Xiperware.WiretapAPI.ChokePoint)">
            <summary>
            Removes the given ChokePoint from the list of NearbyChokePoints.
            </summary>
            <param name="cp">The ChokePoint to remove.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePoint.AddFacility(Xiperware.WiretapAPI.Facility)">
            <summary>
            Associate a Facility with this ChokePoint.
            </summary>
            <param name="facility">The new Facility to associate.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePoint.AddFirebase(Xiperware.WiretapAPI.Firebase)">
            <summary>
            Associate a Firebase with this ChokePoint.
            </summary>
            <param name="firebase">The new Firebase to associate.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePoint.AddLink(Xiperware.WiretapAPI.SupplyLink)">
            <summary>
            Associate a cp link with this ChokePoint.
            </summary>
            <param name="link">The new SupplyLink to associate.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePoint.SetInitState(Xiperware.WiretapAPI.Country)">
            <summary>
            Set the initial state of this ChokePoint.
            </summary>
            <param name="owner">The Country that currently owns the ChokePoint.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePoint.SetInitState(Xiperware.WiretapAPI.Country,Xiperware.WiretapAPI.Country)">
            <summary>
            Set the initial state of this ChokePoint.
            </summary>
            <param name="owner">The Country that currently owns the ChokePoint.</param>
            <param name="controller">The Country that currently controls the ChokePoint.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePoint.SetInitState(Xiperware.WiretapAPI.Country,Xiperware.WiretapAPI.Country,Xiperware.WiretapAPI.HCUnit)">
            <summary>
            Set the initial state of this ChokePoint.
            </summary>
            <param name="owner">The Country that currently owns the ChokePoint.</param>
            <param name="controller">The Country that currently controls the ChokePoint.</param>
            <param name="aoHCUnit">The HCUnit that placed the AO (null if no AO).</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePoint.SetNewOwner(System.DateTime,Xiperware.WiretapAPI.Country)">
            <summary>
            Set a new owner for this ChokePoint when all facilities in the cp have been captured.
            </summary>
            <remarks>Raises the ChokePointCapturedGameEvent.</remarks>
            <param name="time">The time the capture event occurred.</param>
            <param name="newOwner">The new owning Country.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePoint.SetNewController(System.DateTime,Xiperware.WiretapAPI.Country,System.Boolean)">
            <summary>
            Set a new controller for this ChokePoint when all abs in the cp have been captured.
            </summary>
            <param name="time">The time the capture event occurred.</param>
            <param name="newController">The new controlling Country.</param>
            <param name="raiseEvent">True if the ChokePointControllerChangedGameEvent should be raised.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePoint.SetNewAOState(System.DateTime,Xiperware.WiretapAPI.HCUnit)">
            <summary>
            Sets a new AO state for this ChokePoint.
            </summary>
            <param name="time">The time the AO change occurred.</param>
            <param name="aoHCUnit">The HCUnit that placed the AO, or null if AO withdrawn.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePoint.AddHCUnit(Xiperware.WiretapAPI.HCUnit)">
            <summary>
            Add a HCUnit to the list of units deployed at this ChokePoint.
            </summary>
            <param name="hcunit">The HCUnit that is deployed at this ChokePoint.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePoint.RemoveHCUnit(Xiperware.WiretapAPI.HCUnit)">
            <summary>
            Remove a HCUnit to the list of units deployed at this ChokePoint.
            </summary>
            <param name="hcunit">The HCUnit that is no longer deployed at this ChokePoint.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePoint.UndeployBranch(Xiperware.WiretapAPI.Branch)">
            <summary>
            Removes any hcunits of the specified branch from the currently deployed list.
            </summary>
            <param name="branch">The branch to undeploy.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePoint.AllBasesCaptured(Xiperware.WiretapAPI.Branch)">
            <summary>
            Checks whether the enemy has captured all bases in this ChokePoint.
            </summary>
            <param name="branch">The type of base to check.</param>
            <returns>True if all bases are owned by the enemy, false if one or more are friendly or none exist.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePoint.GetNearbyBridges(Xiperware.WiretapAPI.Bridge[])">
            <summary>
            Returns a list of Bridges that are within a 5km radius of this ChokePoint.
            </summary>
            <param name="bridges">An array of bridges to search.</param>
            <returns>Readonly list of Bridges (cached).</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePoint.Uncontest">
            <summary>
            Forcibly uncontests this ChokePoint by changing the owner of any enemy child
            facilities to newOwner (default: cp owner).
            </summary>
            <remarks>Doesn't raise any events.</remarks>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePoint.Uncontest(Xiperware.WiretapAPI.Country)">
            <summary>
            Forcibly uncontests this ChokePoint by changing the owner of any enemy child
            facilities to newOwner (default: cp owner).
            </summary>
            <remarks>Doesn't raise any events.</remarks>
            <param name="newOwner">The Country to set facilities to.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePoint.IsLinked(Xiperware.WiretapAPI.ChokePoint)">
            <summary>
            Tests whether this ChokePoint is linked to another ChokePoint.
            </summary>
            <param name="cp">The other cp to test.</param>
            <returns>True if the cps are linked to each other.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePoint.IsNear(Xiperware.WiretapAPI.ChokePoint)">
            <summary>
            Tests whether this ChokePoint is near another ChokePoint.
            </summary>
            <param name="cp">The other cp to test.</param>
            <returns>True if the cps are near each other.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePoint.AddCaptureFrom(System.DateTime,Xiperware.WiretapAPI.ChokePoint)">
            <summary>
            Add a new data point to calculate where captures are originating from.
            </summary>
            <param name="time">The time the capture occurred (must be local time).</param>
            <param name="cp">The ChokePoint the capturing player's brigade is deployed at.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePoint.CanMoveUnitTo(Xiperware.WiretapAPI.ChokePoint)">
            <summary>
            Check if currently allowed to perform a manual hcunit move to the given linked
            ChokePoint.
            </summary>
            <param name="linkCP">The linked cp to test.</param>
            <returns>True if allowed to move, false if not (enemy controlled, firebase, depot on link).</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePoint.GetFirebaseTo(Xiperware.WiretapAPI.ChokePoint)">
            <summary>
            Gets the outbound Firebase that is near the given linked ChokePoint.
            </summary>
            <param name="linkCP">The linked ChokePoint.</param>
            <returns>The Firebase nearest linkCP.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePoint.GetFirebaseFrom(Xiperware.WiretapAPI.ChokePoint)">
            <summary>
            Gets the inbound Firebase that is near this ChokePoint.
            </summary>
            <param name="linkCP">The linked ChokePoint.</param>
            <returns>The Firebase nearest this cp.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePoint.IsNearPoint(System.Drawing.Point)">
            <summary>
            Checks if this ChokePoint is near a point, used to calc activity levels.
            </summary>
            <param name="refPoint">The reference Point in game world meters.</param>
            <returns>True if this cp or any of it's open firebases are nearby.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePoint.CalcBounds">
            <summary>
            Calculates the bounds of the CP marker and all facilities.
            </summary>
            <returns>A Rectangle in game world meters.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePoint.Cleanup">
            <summary>
            Remove any circular references to allow garbage collection.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePoint.ToString">
            <summary>
            Provides a string representation of this object.
            </summary>
            <returns>The ChokePoint name.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePoint.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object value.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if obj is the same ChokePoint.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePoint.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The ChokePoint id.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePoint.op_Equality(Xiperware.WiretapAPI.ChokePoint,Xiperware.WiretapAPI.ChokePoint)">
            <summary>
            Support for the == operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePoint.op_Inequality(Xiperware.WiretapAPI.ChokePoint,Xiperware.WiretapAPI.ChokePoint)">
            <summary>
            Support for the != operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePoint.CompareTo(Xiperware.WiretapAPI.ChokePoint)">
            <summary>
            Compare this object with another ChokePoint object.
            </summary>
            <param name="other">The other ChokePoint to compare with.</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="E:Xiperware.WiretapAPI.ChokePoint.OwnerChanged">
            <summary>
            The ChokePoint's owner has changed to a new Country.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePoint.OnOwnerChanged">
            <summary>
            Raises the OwnerChanged event.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.SupplyLink">
            <summary>
            A SupplyLink represents the link between two adjacent ChokePoints.
            It contains the two CPs, their linked Depots, and any Firebases.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.SupplyLink.#ctor(Xiperware.WiretapAPI.Depot,Xiperware.WiretapAPI.Depot)">
            <summary>
            Create a new SupplyLink from a pair of linked Depots.
            </summary>
            <param name="depot1">The first Depot.</param>
            <param name="depot2">The second Depot.</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.SupplyLink.ID">
            <summary>
            The unique link identifier (generated from CP ids).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.SupplyLink.ChokePointA">
            <summary>
            The ChokePoint on the A end of the link.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.SupplyLink.ChokePointB">
            <summary>
            The ChokePoint on the B end of the link.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.SupplyLink.DepotA">
            <summary>
            The Depot on the A end of the link (in ChokePointA).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.SupplyLink.DepotB">
            <summary>
            The Depot on the B end of the link (in ChokePointB).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.SupplyLink.FirebaseA">
            <summary>
            The Firebase on the A end of the link (nearest ChokePointB).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.SupplyLink.FirebaseB">
            <summary>
            The Firebase on the B end of the link (nearest ChokePointA).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.SupplyLink.IsActive">
            <summary>
            Gets whether this link has active FBs.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.SupplyLink.IsFriendly">
            <summary>
            Gets whether this link is between friendly towns.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.SupplyLink.HasFirebases">
            <summary>
            Gets whether this link has firebases (not necessarily active).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.SupplyLink.OpenFirebase">
            <summary>
            Gets the currently open firebase, otherwise null.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.SupplyLink.State">
            <summary>
            Gets the current state of this link.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.SupplyLink.Owner">
            <summary>
            Gets the country that currently owns the Firebase pair, or Country.None if inactive.
            </summary>
            <remarks>Dynamically generated; the Wiretap owner is ignored.</remarks>
        </member>
        <member name="P:Xiperware.WiretapAPI.SupplyLink.NonOwner">
            <summary>
            Gets the country that currently *does not* owns the Firebase pair (aka, the owner of the inactive fb).
            </summary>
            <remarks>Dynamically generated; the Wiretap owner is ignored.</remarks>
        </member>
        <member name="P:Xiperware.WiretapAPI.SupplyLink.Side">
            <summary>
            Gets or sets the side that owns the Firebase pair.
            </summary>
            <remarks>Set to Side.None to toggle.</remarks>
        </member>
        <member name="M:Xiperware.WiretapAPI.SupplyLink.GetFirebaseFrom(Xiperware.WiretapAPI.ChokePoint)">
            <summary>
            Get the firebase away from the given cp.
            </summary>
            <param name="cp">The cp on one end of the link.</param>
            <returns>The far Firebase.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.SupplyLink.GetFirebaseTo(Xiperware.WiretapAPI.ChokePoint)">
            <summary>
            Get the firebase near to the given cp.
            </summary>
            <param name="cp">The cp on one end of the link.</param>
            <returns>The near Firebase.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.SupplyLink.Cleanup">
            <summary>
            Remove any circular references to allow garbage collection.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.SupplyLink.ToString">
            <summary>
            Provides a string representation of this object.
            </summary>
            <returns>"cpA - cpB"</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.SupplyLink.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object value.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if obj is the same SupplyLink.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.SupplyLink.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The Facility id.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.SupplyLink.op_Equality(Xiperware.WiretapAPI.SupplyLink,Xiperware.WiretapAPI.SupplyLink)">
            <summary>
            Support for the == operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.SupplyLink.op_Inequality(Xiperware.WiretapAPI.SupplyLink,Xiperware.WiretapAPI.SupplyLink)">
            <summary>
            Support for the != operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.SupplyLink.CompareTo(Xiperware.WiretapAPI.SupplyLink)">
            <summary>
            Compare this object with another SupplyLink object.
            </summary>
            <param name="other">The other SupplyLink to compare with.</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.SupplyLink.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through both cps in the link.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.SupplyLink.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through both cps in the link.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:Xiperware.WiretapAPI.Facility">
            <summary>
            A Facility is a captureable building within a ChokePoint. Only city-type facilities
            use this base class directly; the others have more specialised versions.
            </summary>
            <remarks>Doesn't include Firebases</remarks>
        </member>
        <member name="M:Xiperware.WiretapAPI.Facility.#ctor(System.Int32,System.String,Xiperware.WiretapAPI.ChokePoint,Xiperware.WiretapAPI.FacilityType,System.Drawing.Point,System.String)">
            <summary>
            Create a new Facility.
            </summary>
            <param name="id">The unique Facility id.</param>
            <param name="name">The name of the Facility.</param>
            <param name="cp">The ChokePoint this Facility belongs to.</param>
            <param name="type">The type of Facility.</param>
            <param name="location">The location of the Facility in game world meters.</param>
            <param name="rawName">The name of the Facility (direct from wiretap, no 'cleanup').</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.Facility.ID">
            <summary>
            The unique Facility identifier.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Facility.Name">
            <summary>
            The Facility name.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Facility.RawName">
            <summary>
            The raw Facility name (direct from wiretap, no 'cleanup').
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Facility.ChokePoint">
            <summary>
            The ChokePoint this Facility belongs to.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Facility.Type">
            <summary>
            The type of this Facility (eg, Armybase, Depot, City, ...)
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Facility.Location">
            <summary>
            The coordinates of the Facility on the map in game meters.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Facility.DrawLocation">
            <summary>
            The coordinates of the Facility on the map in game meters, including DrawOffset.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Facility.DrawOffset">
            <summary>
            An x,y offset to draw this facility in a better location (to avoid overlapping facilities).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Facility.Owner">
            <summary>
            Gets or sets the Country that currently owns this Facility.
            </summary>
            <remarks>Doesn't raise events, use SetCaptured() instead.</remarks>
        </member>
        <member name="P:Xiperware.WiretapAPI.Facility.LastOwnerChanged">
            <summary>
            The last time the Facility changed ownership.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Facility.LastCapper">
            <summary>
            The name of the last player to capture this Facility.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Facility.Icon">
            <summary>
            Get the facility icon associated with this FacilityType.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Facility.RadioTableUp">
            <summary>
            True is this Facility's capture table has been fully built (ie, radio up &amp; captureable).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Facility.SpawnableFacility">
            <summary>
            True if this type of Facility can be spawned from.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Facility.OwnerCanSpawn">
            <summary>
            True if the current owner of this Facility is allowed to spawn.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Facility.EnemySpawnable">
            <summary>
            True if this Facility is a Depot that satisfies the conditions that, if captured,
            will be spawnable by the enemy.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Facility.SetInitState(Xiperware.WiretapAPI.Country)">
            <summary>
            Set the initial owner of this Facility.
            </summary>
            <param name="owner">The Country that currently owns the Facility.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.Facility.SetCaptured(System.DateTime,Xiperware.WiretapAPI.Country,Xiperware.WiretapAPI.Country,System.String,Xiperware.WiretapAPI.HCUnit,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Applies a capture event to a Facility and updates the state of game objects.
            </summary>
            <remarks>Raises the relevant captured/under attack/regained/now own/control/etc game events.</remarks>
            <param name="time">The time the capture event occurred.</param>
            <param name="prevOwner">The previous owning Country.</param>
            <param name="newOwner">The new owning Country.</param>
            <param name="by">The name of the player that made the capture.</param>
            <param name="hcunit">The hcunit the player's mission originated from.</param>
            <param name="nowContested">True if the parent ChokePoint is now contested.</param>
            <param name="nowUncontested">True if the parent ChokePoint is no longer contested.</param>
            <param name="newCPController">True if the parent ChokePoint's controller has changed.</param>
            <param name="newCPOwner">True if the parent ChokePoint's owner has changed (ie, captured).</param>
            <param name="init">True if generating historical events (will not auto-remove AOs or HCUnits).</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.Facility.ResetCaptureTime">
            <summary>
            Resets the last capped time/player/squad for this Facility.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Facility.Cleanup">
            <summary>
            Remove any circular references to allow garbage collection.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Facility.ToString">
            <summary>
            Provides a string representation of this object.
            </summary>
            <returns>The Facility name.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Facility.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object value.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if obj is the same Facility.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Facility.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The Facility id.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Facility.op_Equality(Xiperware.WiretapAPI.Facility,Xiperware.WiretapAPI.Facility)">
            <summary>
            Support for the == operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Facility.op_Inequality(Xiperware.WiretapAPI.Facility,Xiperware.WiretapAPI.Facility)">
            <summary>
            Support for the != operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Facility.CompareTo(Xiperware.WiretapAPI.Facility)">
            <summary>
            Compare this object with another Facility object.
            </summary>
            <param name="other">The other Facility to compare with.</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="T:Xiperware.WiretapAPI.MilitaryFacility">
            <summary>
            A MilitaryFacility is either an Armybase, Airbase (airfield), or Navalbase (docks).
            They are different from normal Facilitys in their capture &amp; spawning behaviour.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.MilitaryFacility.#ctor(System.Int32,System.String,Xiperware.WiretapAPI.ChokePoint,Xiperware.WiretapAPI.FacilityType,System.Drawing.Point,System.String)">
            <summary>
            Create a new MilitaryFacility (ab/af/docks).
            </summary>
            <param name="id">The unique Facility id.</param>
            <param name="name">The name of the MilitaryFacility.</param>
            <param name="cp">The ChokePoint this MilitaryFacility belongs to.</param>
            <param name="type">The type of Facility (Airbase/Armybase/Navalbase).</param>
            <param name="location">The location of the MilitaryFacility in game world meters.</param>
            <param name="rawName">The name of the MilitaryFacility (direct from wiretap, no 'cleanup').</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.MilitaryFacility.RadioTableUp">
            <summary>
            True is this MilitaryFacility's capture table has been fully built (ie, radio up
            &amp; captureable).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.MilitaryFacility.OwnerCanSpawn">
            <summary>
            True if the current owner of this MilitaryFacility is allowed to spawn.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.MilitaryFacility.CompareTo(Xiperware.WiretapAPI.MilitaryFacility)">
            <summary>
            Compare this object with another MilitaryFacility object.
            </summary>
            <param name="other">The other MilitaryFacility to compare with.</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="T:Xiperware.WiretapAPI.Depot">
            <summary>
            A Depot is a specialised type of Facility that can have a link to another ChokePoint
            with Firebases in between. It also allows spawning in an enemy town if the appropriate
            conditions are met.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Depot.#ctor(System.Int32,System.String,Xiperware.WiretapAPI.ChokePoint,Xiperware.WiretapAPI.FacilityType,System.Drawing.Point,System.String)">
            <summary>
            Create a new Depot.
            </summary>
            <param name="id">The unique Facility id.</param>
            <param name="name">The name of the Depot.</param>
            <param name="cp">The ChokePoint this Depot belongs to.</param>
            <param name="type">FacilityType.Depot</param>
            <param name="location">The location of the Depot in game world meters.</param>
            <param name="rawName">The name of the Depot (direct from wiretap, no 'cleanup').</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.Depot.LinkedDepot">
            <summary>
            If this Depot is linked, the Depot on the other end of the link.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Depot.Firebase">
            <summary>
            If this Depot is linked, the outbound Firebase on the link (if any).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Depot.OwnerCanSpawn">
            <summary>
            True if the current owner of this Depot is allowed to spawn.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Depot.EnemySpawnable">
            <summary>
            True if this Depot satisfies the conditions that, if captured,
            will be spawnable by the enemy.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Depot.AddLink(Xiperware.WiretapAPI.Depot,Xiperware.WiretapAPI.Firebase)">
            <summary>
            Create a link between this Depot and another, optionally with a Firebase.
            </summary>
            <param name="linkedDepot">The Depot on the other end of the link.</param>
            <param name="firebase">The outbound Firebase on the link (may be null).</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.Depot.Cleanup">
            <summary>
            Remove any circular references to allow garbage collection.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Depot.CompareTo(Xiperware.WiretapAPI.Depot)">
            <summary>
            Compare this object with another Depot object.
            </summary>
            <param name="other">The other Depot to compare with.</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="T:Xiperware.WiretapAPI.Factory">
            <summary>
            A Factory is a specialised type of Facility that produces resource points that go
            towards completing an RDP cycle.
            </summary>
            <remarks>This doesn't include all FacilityType.Factory's.</remarks>
        </member>
        <member name="M:Xiperware.WiretapAPI.Factory.#ctor(System.Int32,System.String,Xiperware.WiretapAPI.ChokePoint,Xiperware.WiretapAPI.FacilityType,System.Drawing.Point,System.String)">
            <summary>
            Create a new Factory.
            </summary>
            <param name="id">The unique Facility id.</param>
            <param name="name">The name of the Factory.</param>
            <param name="cp">The ChokePoint this Factory belongs to.</param>
            <param name="type">FacilityType.Factory</param>
            <param name="location">The location of the Factory in game world meters.</param>
            <param name="rawName">The name of the Factory (direct from wiretap, no 'cleanup').</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.Factory.TotalProduced">
            <summary>
            Gets the total number of RDP points produced by this factory this campaign.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Factory.Ticks">
            <summary>
            A list of (up to) the past 24-hours worth of factory ticks (96).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Factory.CurrentHealth">
            <summary>
            The current health of the Factory (0 = damaged, 100 = healthy).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Factory.CurrentRDP">
            <summary>
            If the Factory is currently contributing to RDP.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Factory.OutputPercentCampaign">
            <summary>
            The percent of total possible output this Factory has produced this campaign.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Factory.OutputPercentPastDay">
            <summary>
            The percent of total possible output this Factory has produced for the past day.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Factory.Country">
            <summary>
            The Country this factory belongs to (not necessarily its current owner).
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Factory.SetInitState(System.DateTime,System.DateTime,System.Int32,System.Int32)">
            <summary>
            Set the initial state of this Factory.
            </summary>
            <param name="firstTick">The date/time of the first factory tick of the campaign.</param>
            <param name="lastTick">The date/time of the latest factory tick.</param>
            <param name="ticksTotal">The total number of ticks so far this campaign.</param>
            <param name="ticksProduced">The total number of ticks of which this Factory contributed to RDP.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.Factory.AddTick(Xiperware.WiretapAPI.FactoryTick)">
            <summary>
            Add the results of a new factory tick.
            </summary>
            <param name="tick">The FactoryTick to add.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.Factory.CompareTo(Xiperware.WiretapAPI.Factory)">
            <summary>
            Compare this object with another Factory object.
            </summary>
            <param name="other">The other Factory to compare with.</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="T:Xiperware.WiretapAPI.Firebase">
            <summary>
            A Firebase (or forward base) is a semi-permanent spawnable camp located on the
            outskirts of an enemy town (offensive), or a friendly town (defensive).
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Firebase.#ctor(System.Int32,System.String,Xiperware.WiretapAPI.ChokePoint,System.Drawing.Point,System.String)">
            <summary>
            Create a new Firebase.
            </summary>
            <param name="id">The unique Facility id.</param>
            <param name="name">The name of the Firebase.</param>
            <param name="cp">The ChokePoint this Firebase belongs to.</param>
            <param name="location">The location of the Firebase in game world meters.</param>
            <param name="rawName">The name of the Firebase (direct from wiretap, no 'cleanup').</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.Firebase.ID">
            <summary>
            The unique facility identifier.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Firebase.Name">
            <summary>
            The Firebase name.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Firebase.RawName">
            <summary>
            The raw Firebase name (direct from wiretap, no 'cleanup').
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Firebase.ChokePoint">
            <summary>
            The ChokePoint this Firebase belongs to (is furthest from).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Firebase.LinkedChokePoint">
            <summary>
            The ChokePoint this Firebase is located near.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Firebase.Depot">
            <summary>
            The Depot on the local side of the link (far).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Firebase.LinkedDepot">
            <summary>
            The Depot on the remote side of the link (near).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Firebase.Location">
            <summary>
            The coordinates of the Firebase on the map.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Firebase.LinkedFirebase">
            <summary>
            The equivalent partner to this Firebase.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Firebase.IsOpen">
            <summary>
            Sets or gets the current state of this Firebase (also updates the linked fb).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Firebase.Link">
            <summary>
            Gets the cp link object for this firebase.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Firebase.AddDepots(Xiperware.WiretapAPI.Depot,Xiperware.WiretapAPI.Depot)">
            <summary>
            Associate the two local/remote Depots with this Firebase.
            </summary>
            <param name="depot">The local Depot on the link (furthest from).</param>
            <param name="linkedDepot">The remote Depot on the link (closest to).</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.Firebase.AddLink(Xiperware.WiretapAPI.SupplyLink)">
            <summary>
            Associate the given cp link with this firebase.
            </summary>
            <param name="link">The SupplyLink this fb is a member of.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.Firebase.SetNewState(System.Boolean,Xiperware.WiretapAPI.Country)">
            <summary>
            Set a new Firebase state/owner and raise the appropriate event. Also updates the linked firebase.
            </summary>
            <param name="open">True is this fb is now open, false to close.</param>
            <param name="owner">The owner of the newly open firebase (ignored when closing a fb).</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.Firebase.Cleanup">
            <summary>
            Remove any circular references to allow garbage collection.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Firebase.ToString">
            <summary>
            Provides a string representation of this object.
            </summary>
            <returns>The Firebase name.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Firebase.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object value.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if obj is the same Firebase.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Firebase.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The Firebase id.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Firebase.op_Equality(Xiperware.WiretapAPI.Firebase,Xiperware.WiretapAPI.Firebase)">
            <summary>
            Support for the == operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Firebase.op_Inequality(Xiperware.WiretapAPI.Firebase,Xiperware.WiretapAPI.Firebase)">
            <summary>
            Support for the != operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Firebase.CompareTo(Xiperware.WiretapAPI.Firebase)">
            <summary>
            Compare this object with another Firebase object.
            </summary>
            <param name="other">The other Firebase to compare with.</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="T:Xiperware.WiretapAPI.Bridge">
            <summary>
            A Bridge is a river crossing that can be destroyed or repaired for strategic
            purposes.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Bridge.#ctor(System.Int32,System.String,System.Drawing.Point)">
            <summary>
            Create a new Bridge.
            </summary>
            <param name="id">The unique Bridge id.</param>
            <param name="name">The name of the Bridge.</param>
            <param name="location">The location of the Bridge in game world octets.</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.Bridge.ID">
            <summary>
            The unique Bridge identifier.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Bridge.Name">
            <summary>
            The ChokePoint name.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Bridge.AO">
            <summary>
            Sets or gets whether this ChokePoint currently has an Attack Objective placed on it.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Bridge.Location">
            <summary>
            The coordinates of the Bridge on the map.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Bridge.ToString">
            <summary>
            Provides a string representation of this object.
            </summary>
            <returns>The Bridge name.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Bridge.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object value.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if obj is the same Bridge.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Bridge.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The Bridge id.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Bridge.op_Equality(Xiperware.WiretapAPI.Bridge,Xiperware.WiretapAPI.Bridge)">
            <summary>
            Support for the == operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Bridge.op_Inequality(Xiperware.WiretapAPI.Bridge,Xiperware.WiretapAPI.Bridge)">
            <summary>
            Support for the != operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Bridge.CompareTo(Xiperware.WiretapAPI.Bridge)">
            <summary>
            Compare this object with another Bridge object.
            </summary>
            <param name="other">The other Bridge to compare with.</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="T:Xiperware.WiretapAPI.HCUnit">
            <summary>
            A High Command Unit is a unit in the order of battle hierarchy of each military branch.
            A division or one of its brigades must be deployed at a chokepoint to allow spawning.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnit.#ctor(System.Int32,Xiperware.WiretapAPI.HCUnitLevel,System.String,System.String,System.String,Xiperware.WiretapAPI.HCUnit,Xiperware.WiretapAPI.Country,Xiperware.WiretapAPI.Branch,Xiperware.WiretapAPI.MoveType,System.String,Xiperware.WiretapAPI.Toe)">
            <summary>
            Create a new HCUnit.
            </summary>
            <param name="id">The unique HCUnit id.</param>
            <param name="level">The level of the HCUnit.</param>
            <param name="shortName">The short name of the HCUnit.</param>
            <param name="nick">The short nick of the HCUnit.</param>
            <param name="title">The long title of the HCUnit.</param>
            <param name="parent">The parent HCUnit.</param>
            <param name="country">The Country the HCUnit belongs to.</param>
            <param name="branch">The Branch the HCUnit belongs to.</param>
            <param name="moveType">The way this HCUnit is allowed to move.</param>
            <param name="owner">The name of the commanding player.</param>
            <param name="toe">The Toe associated with this unit.</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnit.ID">
            <summary>
            The unique hcunit identifier.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnit.Level">
            <summary>
            The level of this HCUnit (Corps, Division, Brigade, etc...).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnit.ShortName">
            <summary>
            The short name of this HCUnit.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnit.Nick">
            <summary>
            The nick of this HCUnit.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnit.Title">
            <summary>
            The long title of this HCUnit.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnit.NickOrTitle">
            <summary>
            Returns the HCUnit title if it's within 21 chars, otherwise the nick.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnit.Country">
            <summary>
            The Country this HCUnit belongs to.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnit.Branch">
            <summary>
            The Branch this HCUnit belongs to.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnit.MoveType">
            <summary>
            The way this HCUnit moves.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnit.DefaultMoveType">
            <summary>
            The way this HCUnit moves (inital value).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnit.ParentUnit">
            <summary>
            This HCUnit's parent HCUnit.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnit.ChildUnits">
            <summary>
            A list of any child unit(s) that belong to this HCUnit.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnit.Owner">
            <summary>
            The name of the player current in command of this HCUnit.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnit.Toe">
            <summary>
            The TOE associated with this unit, or null if none.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnit.DeployedChokePoint">
            <summary>
            The ChokePoint this HCUnit is currently deployed in (null if routed).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnit.RoutedFromChokePoint">
            <summary>
            When routed, the last ChokePoint this HCUnit was deployed in (null if deployed or unavailable).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnit.IsDeployable">
            <summary>
            True if this unit is a deployable unit level (Division or Brigade).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnit.IsDeployed">
            <summary>
            If this HCUnit is currently deployed.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnit.DeployedTime">
            <summary>
            Time since this HCUnit was last moved (check HasLastMoved to see if available).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnit.HasLastMoved">
            <summary>
            Gets whether this HCUnit has a valid LastMovedTime.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnit.LastMovedTime">
            <summary>
            The date/time this HCUnit was last deployed (check HasLastMoved to see if available).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnit.LastMovedPlayer">
            <summary>
            The name of the player that last moved this HCUnit.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnit.NextMoveTime">
            <summary>
            The date/time this HCUnit is next allowed to move.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnit.CanMove">
            <summary>
            True if this HCUnit is allowed to move/deploy.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnit.NextMovePercent">
            <summary>
            Gets the percen
            
            
            
            
            
            
            
            e of deployed time remaining until the unit can move
            (0 = can move, 100 = just moved).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnit.MovePending">
            <summary>
            True if there is currently a pending move request.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnit.Moves">
            <summary>
            A list of all HCUnitMoves in the past 
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnit.Tooltip">
            <summary>
            Gets tooltip text about the units current deployment/last moved status.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnit.TooltipRedeploy">
            <summary>
            Gets tooltip text about how long until the unit can be redeployed.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnit.IsPara">
            <summary>
            True if this is one of the army paratroop brigades/divisions.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnit.CountryBranch">
            <summary>
            Get a string of this unit's country and branch (eg, "UK Army").
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnit.DivisionTitle">
            <summary>
            The title of this unit's Division (used for sorting).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnit.IsDefaultMoveType">
            <summary>
            True if this unit still has it's default MoveType.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnit.SetInitState(Xiperware.WiretapAPI.ChokePoint,System.DateTime,System.String,System.DateTime)">
            <summary>
            Set the initial state of this HCUnit.
            </summary>
            <param name="cp">The ChokePoint where the HCUnit is currently deployed.</param>
            <param name="lastMovedTime">The time the unit was last redeployed, otherwise DateTime.MinValue.</param>
            <param name="lastMovedPlayer">The player that performed the last move, otherwise "SYSTEM".</param>
            <param name="nextMoveTime">The time the unit is next allowed to move, otherwise DateTime.MinValue.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnit.AddMoveRequest(Xiperware.WiretapAPI.ChokePoint,Xiperware.WiretapAPI.ChokePoint,System.DateTime,System.String,Xiperware.WiretapAPI.HCUnitMoveResult)">
            <summary>
            Add a move request to this unit's move history.
            </summary>
            <param name="from">The ChokePoint the unit is to be moved from.</param>
            <param name="to">The ChokePoint the unit is to be moved to.</param>
            <param name="time">The time the request was made.</param>
            <param name="player">The name of the player that requested the move.</param>
            <param name="result">The result of the move request.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnit.AddMoveAttempt(Xiperware.WiretapAPI.ChokePoint,Xiperware.WiretapAPI.ChokePoint,System.DateTime,System.String,Xiperware.WiretapAPI.HCUnitMoveResult)">
            <summary>
            Add a completion attempt to this unit's move history.
            </summary>
            <param name="from">The ChokePoint the unit is to be moved from.</param>
            <param name="to">The ChokePoint the unit is to be moved to.</param>
            <param name="time">The time the completion attempt was made.</param>
            <param name="player">The name of the player that requested the move.</param>
            <param name="result">The result of the completion attempt.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnit.AddSystemMove(Xiperware.WiretapAPI.ChokePoint,Xiperware.WiretapAPI.ChokePoint,System.DateTime,Xiperware.WiretapAPI.HCUnitMoveResult)">
            <summary>
            Add a system move to this unit's move history.
            </summary>
            <param name="from">The ChokePoint the unit is to be moved from.</param>
            <param name="to">The ChokePoint the unit is to be moved to.</param>
            <param name="time">The time the move was made.</param>
            <param name="result">The result of the move (always successful).</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnit.CancelPendingMoves(System.DateTime)">
            <summary>
            Cancels any pending move requests for this HCUnit.
            </summary>
            <param name="time">The time the move should be listed as cancelled.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnit.PruneMoveHistory">
            <summary>
            Removes any entries from the move history older than 12 hours. Also cancels
            stale pending moves.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnit.Move(Xiperware.WiretapAPI.ChokePoint,Xiperware.WiretapAPI.ChokePoint,System.DateTime,System.String)">
            <summary>
            Move the HCUnit to another ChokePoint.
            </summary>
            <param name="from">The previously deployed ChokePoint.</param>
            <param name="to">The ChokePoint to move to (can be a training cp to undeploy).</param>
            <param name="time">The date/time the move occurred.</param>
            <param name="player">The name of the player that ordered the move.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnit.AddChild(Xiperware.WiretapAPI.HCUnit)">
            <summary>
            Associate another HCUnit as a child of this HCUnit.
            </summary>
            <param name="hcunit">The child HCUnit.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnit.GetDummyDivHQBrigade">
            <summary>
            Generates a dummy brigade called "Division HQ".
            </summary>
            <returns></returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnit.IsValidDest(Xiperware.WiretapAPI.ChokePoint)">
            <summary>
            Checks whether a ChokePoint is a currently valid deployment location.
            </summary>
            <param name="cp">The proposed destination ChokePoint.</param>
            <returns>True if the destination is valid.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnit.CanMoveTo(Xiperware.WiretapAPI.ChokePoint)">
            <summary>
            Checks if a HCUnit can be 'moved'.
            </summary>
            <remarks>The usual destination and movement rules apply (excluding timers).</remarks>
            <param name="cp">The proposed destination ChokePoint.</param>
            <returns>True if the move is allowed.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnit.Cleanup">
            <summary>
            Remove any circular references to allow garbage collection.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnit.ToString">
            <summary>
            Provides a string representation of this object.
            </summary>
            <returns>The HCUnit's long title.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnit.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object value.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if obj is the same HCUnit.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnit.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The HCUnit id.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnit.op_Equality(Xiperware.WiretapAPI.HCUnit,Xiperware.WiretapAPI.HCUnit)">
            <summary>
            Support for the == operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnit.op_Inequality(Xiperware.WiretapAPI.HCUnit,Xiperware.WiretapAPI.HCUnit)">
            <summary>
            Support for the != operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnit.CompareTo(Xiperware.WiretapAPI.HCUnit)">
            <summary>
            Compare this object with another HCUnit object.
            </summary>
            <param name="other">The other HCUnit to compare with.</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnit.CompareToName(Xiperware.WiretapAPI.HCUnit)">
            <summary>
            Compare this object with another HCUnit object by name.
            </summary>
            <param name="other">The other HCUnit to compare with.</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="T:Xiperware.WiretapAPI.Squad">
            <summary>
            A Squad is a self-managed group of players that choose to play together.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Squad.#ctor(System.Int32,System.String,System.String,System.String)">
            <summary>
            Create a new Squad.
            </summary>
            <param name="id">The unique id of the Squad.</param>
            <param name="handle">The short name of the Squad.</param>
            <param name="name">The full name of the Squad.</param>
            <param name="co">The name of the Squad's CO.</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.Squad.ID">
            <summary>
            The unique Squad identifier.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Squad.Handle">
            <summary>
            The short name of this Squad.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Squad.Name">
            <summary>
            The full name of this Squad.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Squad.CO">
            <summary>
            The player name of the Squad's current CO.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Squad.ToString">
            <summary>
            Provides a string representation of this object.
            </summary>
            <returns>The Squad's full name.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Squad.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object value.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if obj is the same Squad.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Squad.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Squad.op_Equality(Xiperware.WiretapAPI.Squad,Xiperware.WiretapAPI.Squad)">
            <summary>
            Support for the == operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Squad.op_Inequality(Xiperware.WiretapAPI.Squad,Xiperware.WiretapAPI.Squad)">
            <summary>
            Support for the != operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Squad.CompareTo(Xiperware.WiretapAPI.Squad)">
            <summary>
            Compare this object with another Squad object.
            </summary>
            <param name="other">The other Squad to compare with.</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="T:Xiperware.WiretapAPI.MapCell">
            <summary>
            A MapCell is a region on the map, currently 500x500m, that is used to store player deaths.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.MapCell.#ctor">
            <summary>
            Create a new MapCell.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.MapCell.Deaths">
            <summary>
            The total number of deaths that have occurred in this cell in the past 60 mins.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.MapCell.RecentDeaths">
            <summary>
            The total number of deaths that have occurred in this cell in the past 20 mins.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.MapCell.DeathsGrouped">
            <summary>
            The deaths that have occurred in the past 5-65 mins, grouped into 5 minute intervals.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.MapCell.AddCount(System.DateTime,System.Int32,System.Int32)">
            <summary>
            Add a death count to this cell.
            </summary>
            <param name="time">The time the deaths occurred.</param>
            <param name="allied">The number of allied deaths.</param>
            <param name="axis">The number of axis deaths.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.MapCell.Purge">
            <summary>
            Removes all entries older than an hour.
            </summary>
            <returns>True if no more entries left.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.MapCell.GetCellColour">
            <summary>
            Calculates the colour this cell should be displayed based on the number and age
            of the deaths it contains.
            </summary>
            <returns>A colour between yellow (lots of deaths) and white (few deaths), light (recent) and dark (old).</returns>
        </member>
        <member name="T:Xiperware.WiretapAPI.Server">
            <summary>
            A Server object represents an instance of a Battleground Europe game server cluster.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Server.#ctor(System.Int32,System.String,Xiperware.WiretapAPI.ServerState,System.String,Xiperware.WiretapAPI.ServerPopulation)">
            <summary>
            Create a new Server object.
            </summary>
            <param name="id">The arena id of the server.</param>
            <param name="name">The server name (should match Language.ServerName_...).</param>
            <param name="state">The initial ServerState.</param>
            <param name="stateInfo">The optional raw state info string.</param>
            <param name="population">The initial ServerPopulation.</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.Server.ID">
            <summary>
            The server arena id (used when launching playgate).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Server.Name">
            <summary>
            The server name.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Server.Population">
            <summary>
            The current server player population.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Server.State">
            <summary>
            The current server state (online, locked, etc).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Server.StateInfo">
            <summary>
            Gets a tooltip for the current server state.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Server.Online">
            <summary>
            True if the server is online and unlocked.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Server.Locked">
            <summary>
            True if the server is online and locked.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Server.Offline">
            <summary>
            True if the server if offline or closed.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Server.UpdateStatus(Xiperware.WiretapAPI.ServerState,System.String,Xiperware.WiretapAPI.ServerPopulation)">
            <summary>
            Update the state and population of this server.
            </summary>
            <param name="state">The current ServerState.</param>
            <param name="stateInfo">The optional raw state info string.</param>
            <param name="population">The current ServerPopulation.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.Server.LocaliseStateInfo(System.String)">
            <summary>
            Generates a localised string for the given raw stateinfo.
            </summary>
            <param name="stateInfo">The state info string.</param>
            <returns>A localised version of each component, if available.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Server.ToString">
            <summary>
            Provides a string representation of this object.
            </summary>
            <returns>The server name.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Server.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object value.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if obj is the same Server.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Server.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Server.op_Equality(Xiperware.WiretapAPI.Server,Xiperware.WiretapAPI.Server)">
            <summary>
            Support for the == operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Server.op_Inequality(Xiperware.WiretapAPI.Server,Xiperware.WiretapAPI.Server)">
            <summary>
            Support for the != operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Server.CompareTo(Xiperware.WiretapAPI.Server)">
            <summary>
            Compare this object with another Server object.
            </summary>
            <param name="other">The other Server to compare with.</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="T:Xiperware.WiretapAPI.VehicleCategory">
            <summary>
            A category of Vehicle (eg, Infantry, Ground Vehicle, Aircraft, etc).
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.VehicleCategory.#ctor(System.Int32,Xiperware.WiretapAPI.Branch,System.String,System.String)">
            <summary>
            Create a new VehicleCategory.
            </summary>
            <param name="id">The unique category identifier.</param>
            <param name="branch">The Branch the category is associated with.</param>
            <param name="abbr">The category two-letter abbreviation.</param>
            <param name="name">The category name (should match Language.Enum_VehicleCategory_...).</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.VehicleCategory.ID">
            <summary>
            The unique VehicleCategory identifier.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.VehicleCategory.Branch">
            <summary>
            The Branch associated with this category.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.VehicleCategory.Abbr">
            <summary>
            The category's two-letter abbreviation.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.VehicleCategory.Name">
            <summary>
            The category's name.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.VehicleCategory.ToString">
            <summary>
            Provides a string representation of this object.
            </summary>
            <returns>The category name.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.VehicleCategory.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object value.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if obj is the same VehicleCategory.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.VehicleCategory.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.VehicleCategory.op_Equality(Xiperware.WiretapAPI.VehicleCategory,Xiperware.WiretapAPI.VehicleCategory)">
            <summary>
            Support for the == operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.VehicleCategory.op_Inequality(Xiperware.WiretapAPI.VehicleCategory,Xiperware.WiretapAPI.VehicleCategory)">
            <summary>
            Support for the != operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.VehicleCategory.CompareTo(System.Object)">
            <summary>
            Compare this object with another VehicleCategory object.
            </summary>
            <param name="obj">The other VehicleCategory to compare with.</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.VehicleCategory.CompareTo(Xiperware.WiretapAPI.VehicleCategory)">
            <summary>
            Compare this object with another VehicleCategory object.
            </summary>
            <param name="other">The other VehicleCategory to compare with.</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="T:Xiperware.WiretapAPI.VehicleClass">
            <summary>
            A class of Vehicle (eg, Tank, Artillery, Truck, etc)
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.VehicleClass.#ctor(System.Int32,System.String,Xiperware.WiretapAPI.VehicleCategory)">
            <summary>
            Create a new VehicleClass.
            </summary>
            <param name="id">The unique class id.</param>
            <param name="name">The class name.</param>
            <param name="category">The category this class belongs to.</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.VehicleClass.ID">
            <summary>
            The unique class identifier.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.VehicleClass.Code">
            <summary>
            The class raw-code.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.VehicleClass.Name">
            <summary>
            The class friendly name.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.VehicleClass.Category">
            <summary>
            The category this class belongs to.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.VehicleClass.Cleanup">
            <summary>
            Remove any circular references to allow garbage collection.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.VehicleClass.ToString">
            <summary>
            Provides a string representation of this object.
            </summary>
            <returns>The class name.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.VehicleClass.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object value.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if obj is the same VehicleClass.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.VehicleClass.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.VehicleClass.op_Equality(Xiperware.WiretapAPI.VehicleClass,Xiperware.WiretapAPI.VehicleClass)">
            <summary>
            Support for the == operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.VehicleClass.op_Inequality(Xiperware.WiretapAPI.VehicleClass,Xiperware.WiretapAPI.VehicleClass)">
            <summary>
            Support for the != operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.VehicleClass.CompareTo(System.Object)">
            <summary>
            Compare this object with another VehicleClass object.
            </summary>
            <param name="obj">The other VehicleClass to compare with.</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.VehicleClass.CompareTo(Xiperware.WiretapAPI.VehicleClass)">
            <summary>
            Compare this object with another VehicleClass object.
            </summary>
            <param name="other">The other VehicleClass to compare with.</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="T:Xiperware.WiretapAPI.Vehicle">
            <summary>
            A Vehicle represents a object that may be controlled by the player in game, such
            as tanks, aircraft, and infantry.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Vehicle.#ctor(System.Int32,Xiperware.WiretapAPI.Country,System.String,Xiperware.WiretapAPI.VehicleClass,Xiperware.WiretapAPI.Rank,Xiperware.WiretapAPI.Rank,System.Int32)">
            <summary>
            Creates a new Vehicle.
            </summary>
            <param name="id">The unique vehicle id.</param>
            <param name="country">The Country that uses this vehicle.</param>
            <param name="name">The vehicle name.</param>
            <param name="vehClass">The class this vehicle belongs to.</param>
            <param name="curRank">The current rank required to spawn the vehicle.</param>
            <param name="nextRank">The rank required next cycle (may be lower).</param>
            <param name="typeid">The internal veh id (last segment of quad).</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.Vehicle.ID">
            <summary>
            The unique vehicle identifier.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Vehicle.Country">
            <summary>
            The country that uses this vehicle.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Vehicle.Name">
            <summary>
            The vehicle name.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Vehicle.Class">
            <summary>
            The class this vehicle belongs to.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Vehicle.CurrentRank">
            <summary>
            The current rank required to spawn this vehicle.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Vehicle.NextRank">
            <summary>
            The rank required to spawn this vehicle in the next RDP cycle.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Vehicle.InternalID">
            <summary>
            The internal vehicle quad identifier.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Vehicle.DefaultAccessLevel">
            <summary>
            Get the default AccessLevel (public, or Buzzard for gm vehicles).
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Vehicle.GetCurrentRankName(Xiperware.WiretapAPI.Branch)">
            <summary>
            The name of the rank required as per this vehicle's country and branch.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Vehicle.GetNextRankName(Xiperware.WiretapAPI.Branch)">
            <summary>
            The name of the rank required next cycle as per this vehicle's country and branch.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Vehicle.Cleanup">
            <summary>
            Remove any circular references to allow garbage collection.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Vehicle.ToString">
            <summary>
            Provides a string representation of this object.
            </summary>
            <returns>The vehicle name.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Vehicle.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object value.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if obj is the same Vehicle.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Vehicle.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Vehicle.op_Equality(Xiperware.WiretapAPI.Vehicle,Xiperware.WiretapAPI.Vehicle)">
            <summary>
            Support for the == operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Vehicle.op_Inequality(Xiperware.WiretapAPI.Vehicle,Xiperware.WiretapAPI.Vehicle)">
            <summary>
            Support for the != operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Vehicle.CompareTo(Xiperware.WiretapAPI.Vehicle)">
            <summary>
            Compare this object with another Vehicle object.
            </summary>
            <param name="other">The other Vehicle to compare with.</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="T:Xiperware.WiretapAPI.ToeItem">
            <summary>
            An item in a TOE spawnlist (vehicle, count).
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.ToeItem.#ctor(Xiperware.WiretapAPI.Vehicle,System.Int32,Xiperware.WiretapAPI.AccessLevel,System.String)">
            <summary>
            Create a new ToeItem (first cycle only).
            </summary>
            <param name="vehicle">The vehicle this ToeItem represents.</param>
            <param name="cycleZeroQuantity">The starting cycle vehicle quantity.</param>
            <param name="access">The vehicle access level (default Public).</param>
            <param name="comment">A comment associated with thie ToeItem.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.ToeItem.#ctor(Xiperware.WiretapAPI.Vehicle,Xiperware.WiretapAPI.SupplyLevel)">
            <summary>
            Create a new ToeItem (multiple cycles).
            </summary>
            <param name="vehicle">The vehicle this ToeItem represents.</param>
            <param name="supply">The supply level for this vehicle.</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.ToeItem.Vehicle">
            <summary>
            The vehicle this ToeItem represents.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ToeItem.Supply">
            <summary>
            The supply level for this vehicle.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ToeItem.Access">
            <summary>
            The minimum access level required to spawn this vehicle.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ToeItem.Comment">
            <summary>
            Arbitrary user comment for this ToeItem instance.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ToeItem.CycleZeroQuantity">
            <summary>
            Gets or sets the starting quantity for this vehicle.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.ToeItem.Clone">
            <summary>
            Create a copy of this ToeItem object.
            </summary>
            <returns>A new ToeItem object.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.ToeItem.ToString">
            <summary>
            Provides a string representation of this object.
            </summary>
            <returns>The vehicle name.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.ToeItem.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object value.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if obj is the same ToeItem.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.ToeItem.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.ToeItem.op_Equality(Xiperware.WiretapAPI.ToeItem,Xiperware.WiretapAPI.ToeItem)">
            <summary>
            Support for the == operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.ToeItem.op_Inequality(Xiperware.WiretapAPI.ToeItem,Xiperware.WiretapAPI.ToeItem)">
            <summary>
            Support for the != operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.ToeItem.CompareTo(Xiperware.WiretapAPI.ToeItem)">
            <summary>
            Compare this object with another ToeItem object.
            </summary>
            <param name="other">The other ToeItem to compare with.</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="T:Xiperware.WiretapAPI.Toe">
            <summary>
            A TOE (Table of Organisation and Equipment) contains a list of vehicles and 
            their supply numbers for each RDP cycle, and is assigned to a hcunit.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Toe.#ctor(System.String,System.String,Xiperware.WiretapAPI.Country,Xiperware.WiretapAPI.Branch,Xiperware.WiretapAPI.VehicleClass,System.String)">
            <summary>
            Create a new Toe.
            </summary>
            <param name="code">The unique toe code.</param>
            <param name="name">The full name of the toe.</param>
            <param name="country">The country the toe belongs to.</param>
            <param name="branch">The branch the toe belongs to.</param>
            <param name="vehClass">The main vehicle class of this toe.</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.Toe.Code">
            <summary>
            The unique TOE code.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Toe.Name">
            <summary>
            The TOE's full name.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Toe.Country">
            <summary>
            The Country this TOE is associated with.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Toe.Branch">
            <summary>
            The main branch for this Toe (doen't affect contents).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Toe.Class">
            <summary>
            The main vehicle class of this Toe (doen't affect contents).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Toe.Supply">
            <summary>
            Gets the supply of all Vehicles in this Toe.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Toe.Item(Xiperware.WiretapAPI.Vehicle)">
            <summary>
            Gets supply for the given vehicle.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Toe.Vehicles">
            <summary>
            A list of all vehicles contained in this TOE.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Toe.Items">
            <summary>
            A list of all ToeItems contained in this Toe.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Toe.Comment">
            <summary>
            Arbitrary user comment for this Toe instance.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Toe.AddVehicle(Xiperware.WiretapAPI.Vehicle,System.Int32,System.String)">
            <summary>
            Add a vehicle and it's supply details to this TOE.
            </summary>
            <param name="vehicle">The vehicle to add.</param>
            <param name="start"></param>
            <param name="adjustments"></param>
        </member>
        <member name="M:Xiperware.WiretapAPI.Toe.Clone(System.Boolean)">
            <summary>
            Create a copy of this Toe object.
            </summary>
            <param name="includeSupply">If true, also include ToeItems.</param>
            <returns>A new Toe object.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Toe.Cleanup">
            <summary>
            Remove any circular references to allow garbage collection.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Toe.ToString">
            <summary>
            Provides a string representation of this object.
            </summary>
            <returns>The TOE name.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Toe.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object value.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if obj is the same Toe.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Toe.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Toe.op_Equality(Xiperware.WiretapAPI.Toe,Xiperware.WiretapAPI.Toe)">
            <summary>
            Support for the == operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Toe.op_Inequality(Xiperware.WiretapAPI.Toe,Xiperware.WiretapAPI.Toe)">
            <summary>
            Support for the != operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Toe.CompareTo(Xiperware.WiretapAPI.Toe)">
            <summary>
            Compare this object with another Toe object.
            </summary>
            <param name="other">The other Toe to compare with.</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="T:Xiperware.WiretapAPI.HCUnitMove">
            <summary>
            A HCUnitMove represents a brigade move request made by a high command player
            and it's associated completion attempt ~2.5mins later.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnitMove.#ctor(Xiperware.WiretapAPI.ChokePoint,Xiperware.WiretapAPI.ChokePoint,System.String,System.DateTime,Xiperware.WiretapAPI.HCUnitMoveResult)">
            <summary>
            Create a new HCUnitMove with the initial request details.
            </summary>
            <param name="from">The ChokePoint the unit is to be moved from.</param>
            <param name="to">The ChokePoint the unit is to be moved to.</param>
            <param name="player">The name of the player that requested the move.</param>
            <param name="requestTime">The time the request was made.</param>
            <param name="requestResult">The result of the move request.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnitMove.#ctor(Xiperware.WiretapAPI.ChokePoint,Xiperware.WiretapAPI.ChokePoint,System.DateTime,Xiperware.WiretapAPI.HCUnitMoveResult)">
            <summary>
            Create a new system HCUnitMove.
            </summary>
            <param name="from">The ChokePoint the unit is to be moved from.</param>
            <param name="to">The ChokePoint the unit is to be moved to.</param>
            <param name="time">The time the request was made.</param>
            <param name="result">The result of the move (always successful).</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitMove.State">
            <summary>
            The current state of this move request.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitMove.ReceivedTime">
            <summary>
            The time the initial request was received.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitMove.From">
            <summary>
            The ChokePoint the unit was moved from.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitMove.To">
            <summary>
            The ChokePoint the unit was moved to.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitMove.Player">
            <summary>
            The name of the player that requested the move.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitMove.RequestTime">
            <summary>
            The time the initial request was made.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitMove.CompletedTime">
            <summary>
            The time the unit was moved.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitMove.Time">
            <summary>
            The time of this event, based on state.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitMove.RequestResult">
            <summary>
            The result of the move request.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitMove.CompletedResult">
            <summary>
            The result of the completion attempt.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnitMove.IsMatch(Xiperware.WiretapAPI.ChokePoint,Xiperware.WiretapAPI.ChokePoint,System.String)">
            <summary>
            Checks to see if this is a pending request that matches the given details.
            Used to pair requests to completion attempts.
            </summary>
            <param name="from">The ChokePoint the unit is to be moved from.</param>
            <param name="to">The ChokePoint the unit is to be moved to.</param>
            <param name="player">The name of the player that requested the move.</param>
            <returns>True if this is the matching request.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnitMove.AddCompletion(System.DateTime,Xiperware.WiretapAPI.HCUnitMoveResult)">
            <summary>
            Adds completion details to a pending move request.
            </summary>
            <param name="completedTime">The time the completion attempt was made.</param>
            <param name="completedResult">The result of the completion attempt.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnitMove.Cancel">
            <summary>
            Cancels a pending request when another request has been made.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnitMove.Cancel(System.DateTime)">
            <summary>
            Cancels a pending request when another request has been made.
            </summary>
            <param name="time">The time the move was cancelled.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnitMove.Cleanup">
            <summary>
            Remove any circular references to allow garbage collection.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnitMove.ToString">
            <summary>
            Provides a string representation of this object.
            </summary>
            <returns>"From->To = Result"</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnitMove.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object value.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if obj is the same HCUnitMove.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnitMove.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnitMove.op_Equality(Xiperware.WiretapAPI.HCUnitMove,Xiperware.WiretapAPI.HCUnitMove)">
            <summary>
            Support for the == operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnitMove.op_Inequality(Xiperware.WiretapAPI.HCUnitMove,Xiperware.WiretapAPI.HCUnitMove)">
            <summary>
            Support for the != operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnitMove.CompareTo(Xiperware.WiretapAPI.HCUnitMove)">
            <summary>
            Compare this object with another HCUnitMove object.
            </summary>
            <param name="other">The other HCUnitMove to compare with.</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="T:Xiperware.WiretapAPI.HCUnitMoveResult">
            <summary>
            The result of a brigade move request.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnitMoveResult.#ctor(System.Int32,System.String)">
            <summary>
            Create a new HCUnitMoveResult.
            </summary>
            <param name="id">The move result id (should match Language.Enum_HCMoveResult_...).</param>
            <param name="desc">The move result description.</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitMoveResult.ID">
            <summary>
            The unique move result identifier.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitMoveResult.Description">
            <summary>
            The move result description.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnitMoveResult.ToString">
            <summary>
            Provides a string representation of this object.
            </summary>
            <returns>The move result description.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnitMoveResult.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object value.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if obj is the same HCUnitMoveResult.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnitMoveResult.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnitMoveResult.op_Equality(Xiperware.WiretapAPI.HCUnitMoveResult,Xiperware.WiretapAPI.HCUnitMoveResult)">
            <summary>
            Support for the == operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnitMoveResult.op_Inequality(Xiperware.WiretapAPI.HCUnitMoveResult,Xiperware.WiretapAPI.HCUnitMoveResult)">
            <summary>
            Support for the != operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnitMoveResult.CompareTo(Xiperware.WiretapAPI.HCUnitMoveResult)">
            <summary>
            Compare this object with another HCUnitMoveResult object.
            </summary>
            <param name="other">The other HCUnitMoveResult to compare with.</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="T:Xiperware.WiretapAPI.ServerParam">
            <summary>
            A entry in ww2online's server configuration.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.ServerParam.#ctor(System.String,System.String,System.String)">
            <summary>
            Create a new ServerParam.
            </summary>
            <param name="key">The item key.</param>
            <param name="value">The item value.</param>
            <param name="desc">The item long description.</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.ServerParam.Key">
            <summary>
            The full key of the config item.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ServerParam.Value">
            <summary>
            The value of the config item.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ServerParam.Description">
            <summary>
            The long description of the config item.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ServerParam.Section">
            <summary>
            The config item's section.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.ServerParam.ToString">
            <summary>
            Provides a string representation of this object.
            </summary>
            <returns>"key = value"</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.ServerParam.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object value.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>True if obj is the same ServerParam.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.ServerParam.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.ServerParam.op_Equality(Xiperware.WiretapAPI.ServerParam,Xiperware.WiretapAPI.ServerParam)">
            <summary>
            Support for the == operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.ServerParam.op_Inequality(Xiperware.WiretapAPI.ServerParam,Xiperware.WiretapAPI.ServerParam)">
            <summary>
            Support for the != operator.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.ServerParam.CompareTo(Xiperware.WiretapAPI.ServerParam)">
            <summary>
            Compare this object with another ServerParam object.
            </summary>
            <param name="other">The other ServerParam to compare with.</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="T:Xiperware.WiretapAPI.GameEventType">
            <summary>
            The category of GameEvent.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.ICaptureFacilityGameEvent">
            <summary>
            An interface for GameEvents that represent a facility capture.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ICaptureFacilityGameEvent.NewOwner">
            <summary>
            The Country that now owns the Facility.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.ICountryChangeGameEvent">
            <summary>
            An interface for GameEvents that have a from/to country.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ICountryChangeGameEvent.NewCountry">
            <summary>
            The Country after the change.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ICountryChangeGameEvent.PrevCountry">
            <summary>
            The Country before the change.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.IHCUnitGameEvent">
            <summary>
            An interface for hcunit-related GameEvents.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.IHCUnitGameEvent.HCUnit">
            <summary>
            Gets the HCUnit associated with this HCUnitGameEvent.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.IFactoryGameEvent">
            <summary>
            An interface for factory-related GameEvents.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.IFactoryGameEvent.Factory">
            <summary>
            Gets the Factory associated with this FactoryGameEvent.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.GameEvent">
            <summary>
            An abstract class that defines the common GameEvent properties that are then
            implemented by each event type.
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.GameEvent.syncEventReceivedTime">
            <summary>
            If true, the EventReceived timestamp will be set to the EventTime
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.GameEvent.#ctor(System.DateTime)">
            <summary>
            Base GameEvent constructor, used by child classes.
            </summary>
            <param name="eventTime">The time the event occurred (UTC if from wiretap and skew-correction required).</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameEvent.EventTime">
            <summary>
            The time the event occurred, in the users local time (skew corrected).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameEvent.EventReceived">
            <summary>
            The time the event was received, in the users local time.
            </summary>
            <remarks>As some of the xml feeds present delayed views of game data,
            this may be later than the event time.</remarks>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameEvent.Type">
            <summary>
            The event category this GameEvent belongs to.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameEvent.Title">
            <summary>
            The short event title to display to the user.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameEvent.Description">
            <summary>
            The long description of the event to display to the user.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameEvent.ChokePoints">
            <summary>
            One or more ChokePoints associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameEvent.Country">
            <summary>
            The Country associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameEvent.Icon">
            <summary>
            The icon associated with this type (and instance) of GameEvent.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameEvent.AlertIcon">
            <summary>
            The icon associated with this type (and instance) of GameEvent to display
            in the pop-up alert window.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.GameEvent.IncrementEventTime">
            <summary>
            Bump the GameEvent's event time up a millisecond.
            </summary>
            <remarks>Used to make it unique so duplicate times can be added to a sorted list.</remarks>
            <returns>The new DateTime (local, corrected).</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.GameEvent.ToString">
            <summary>
            Provides a string representation of this object.
            </summary>
            <returns>The event title.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.GameEvent.CompareTo(System.Object)">
            <summary>
            Compare this object with another GameEvent object.
            </summary>
            <remarks>Not generic so we can also compare subclasses of GameEvent.</remarks>
            <param name="obj">The other GameEvent to compare with.</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.GameEvent.CleanUp">
            <summary>
            Remove any circular references to allow garbage collection.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.FacilityCapturedGameEvent">
            <summary>
            Occurs when a player has captured a Facility.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.FacilityCapturedGameEvent.#ctor(System.DateTime,Xiperware.WiretapAPI.Facility,Xiperware.WiretapAPI.Country,Xiperware.WiretapAPI.Country,System.String)">
            <summary>
            Create a new FacilityCapturedGameEvent.
            </summary>
            <param name="eventTime">The time the event occurred.</param>
            <param name="facility">The Facility that was captured.</param>
            <param name="newOwner">The Country that now owns the Facility.</param>
            <param name="prevOwner">The Country that previously owned the Facility.</param>
            <param name="by">The name of the player that performed the capture.</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.FacilityCapturedGameEvent.Facility">
            <summary>
            The Facility that was captured. 
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FacilityCapturedGameEvent.NewOwner">
            <summary>
            The Country that now owns the Facility.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FacilityCapturedGameEvent.PrevOwner">
            <summary>
            The Country that previously owned the Facility.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FacilityCapturedGameEvent.CapturedBy">
            <summary>
            The name of the player that performed the capture.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FacilityCapturedGameEvent.Recaptured">
            <summary>
            True if this Facility now belongs to the ChokePoint owners side.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FacilityCapturedGameEvent.NewCountry">
            <summary>
            The Country after the change.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FacilityCapturedGameEvent.PrevCountry">
            <summary>
            The Country before the change.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FacilityCapturedGameEvent.Type">
            <summary>
            The event category this GameEvent belongs to.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FacilityCapturedGameEvent.Title">
            <summary>
            The short event title to display to the user.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FacilityCapturedGameEvent.Description">
            <summary>
            The long description of the event to display to the user. 
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FacilityCapturedGameEvent.ChokePoints">
            <summary>
            One or more ChokePoints associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FacilityCapturedGameEvent.Country">
            <summary>
            The Country associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FacilityCapturedGameEvent.Icon">
            <summary>
            The icon associated with this type (and instance) of GameEvent.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FacilityCapturedGameEvent.AlertIcon">
            <summary>
            The icon associated with this type (and instance) of GameEvent to display
            in the pop-up alert window.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.FacilityCapturedGameEvent.CleanUp">
            <summary>
            Remove any circular references to allow garbage collection.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.SpawnableDepotCapturedGameEvent">
            <summary>
            Occurs when the enemy has captured a spawnable Depot.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.SpawnableDepotCapturedGameEvent.#ctor(System.DateTime,Xiperware.WiretapAPI.Depot,Xiperware.WiretapAPI.Country,Xiperware.WiretapAPI.Country,System.String)">
            <summary>
            Create a new SpawnableDepotCapturedGameEvent.
            </summary>
            <param name="eventTime">The time the event occurred.</param>
            <param name="depot">The Depot that was captured.</param>
            <param name="newOwner">The Country that now owns the Depot.</param>
            <param name="prevOwner">The Country that previously owned the Depot.</param>
            <param name="by">The name of the player that performed the capture.</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.SpawnableDepotCapturedGameEvent.Depot">
            <summary>
            The Facility that was captured. 
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.SpawnableDepotCapturedGameEvent.NewOwner">
            <summary>
            The Country that now owns the Facility.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.SpawnableDepotCapturedGameEvent.PrevOwner">
            <summary>
            The Country that previously owned the Facility.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.SpawnableDepotCapturedGameEvent.CapturedBy">
            <summary>
            The name of the player that performed the capture.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.SpawnableDepotCapturedGameEvent.Recaptured">
            <summary>
            True if this Facility now belongs to the ChokePoint owners side.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.SpawnableDepotCapturedGameEvent.NewCountry">
            <summary>
            The Country after the change.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.SpawnableDepotCapturedGameEvent.PrevCountry">
            <summary>
            The Country before the change.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.SpawnableDepotCapturedGameEvent.Type">
            <summary>
            The event category this GameEvent belongs to.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.SpawnableDepotCapturedGameEvent.Title">
            <summary>
            The short event title to display to the user.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.SpawnableDepotCapturedGameEvent.Description">
            <summary>
            The long description of the event to display to the user. 
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.SpawnableDepotCapturedGameEvent.ChokePoints">
            <summary>
            One or more ChokePoints associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.SpawnableDepotCapturedGameEvent.Country">
            <summary>
            The Country associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.SpawnableDepotCapturedGameEvent.Icon">
            <summary>
            The icon associated with this type (and instance) of GameEvent.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.SpawnableDepotCapturedGameEvent.AlertIcon">
            <summary>
            The icon associated with this type (and instance) of GameEvent to display
            in the pop-up alert window.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.SpawnableDepotCapturedGameEvent.CleanUp">
            <summary>
            Remove any circular references to allow garbage collection.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.ChokePointCapturedGameEvent">
            <summary>
            Occurs when all Facilitys in a ChokePoint have been captured.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePointCapturedGameEvent.#ctor(System.DateTime,Xiperware.WiretapAPI.ChokePoint,Xiperware.WiretapAPI.Country,Xiperware.WiretapAPI.Country,System.DateTime)">
            <summary>
            Create a new ChokePointCapturedGameEvent.
            </summary>
            <param name="eventTime">The time the event occurred.</param>
            <param name="cp">The ChokePoint that was captured.</param>
            <param name="newOwner">The Country that now owns the ChokePoint.</param>
            <param name="prevOwner">The Country that previously owned the ChokePoint.</param>
            <param name="attackStarted">The DateTime the ChokePoint was initially contested (in local time).</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointCapturedGameEvent.ChokePoint">
            <summary>
            The ChokePoint that was captured.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointCapturedGameEvent.NewOwner">
            <summary>
            The Country that now owns the ChokePoint.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointCapturedGameEvent.PrevOwner">
            <summary>
            The Country that previously owned the ChokePoint.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointCapturedGameEvent.NewCountry">
            <summary>
            The Country after the change.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointCapturedGameEvent.PrevCountry">
            <summary>
            The Country before the change.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointCapturedGameEvent.Type">
            <summary>
            The event category this GameEvent belongs to.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointCapturedGameEvent.Title">
            <summary>
            The short event title to display to the user.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointCapturedGameEvent.Description">
            <summary>
            The long description of the event to display to the user. 
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointCapturedGameEvent.ChokePoints">
            <summary>
            One or more ChokePoints associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointCapturedGameEvent.Country">
            <summary>
            The Country associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointCapturedGameEvent.Icon">
            <summary>
            The icon associated with this type (and instance) of GameEvent.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointCapturedGameEvent.AlertIcon">
            <summary>
            The icon associated with this type (and instance) of GameEvent to display
            in the pop-up alert window.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePointCapturedGameEvent.CleanUp">
            <summary>
            Remove any circular references to allow garbage collection.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.ChokePointUnderAttackGameEvent">
            <summary>
            Occurs when a ChokePoint becomes contested due to a Facility being captured.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePointUnderAttackGameEvent.#ctor(System.DateTime,Xiperware.WiretapAPI.ChokePoint)">
            <summary>
            Create a new ChokePointUnderAttackGameEvent.
            </summary>
            <param name="eventTime">The time the event occurred.</param>
            <param name="cp">The ChokePoint that is under attack.</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointUnderAttackGameEvent.ChokePoint">
            <summary>
            The ChokePoint that is under attack.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointUnderAttackGameEvent.NewAttack">
            <summary>
            Wether or not this ChokePoint has been attacked recently.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointUnderAttackGameEvent.Type">
            <summary>
            The event category this GameEvent belongs to.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointUnderAttackGameEvent.Title">
            <summary>
            The short event title to display to the user.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointUnderAttackGameEvent.Description">
            <summary>
            The long description of the event to display to the user. 
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointUnderAttackGameEvent.ChokePoints">
            <summary>
            One or more ChokePoints associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointUnderAttackGameEvent.Country">
            <summary>
            The Country associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointUnderAttackGameEvent.Icon">
            <summary>
            The icon associated with this type (and instance) of GameEvent.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointUnderAttackGameEvent.AlertIcon">
            <summary>
            The icon associated with this type (and instance) of GameEvent to display
            in the pop-up alert window.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePointUnderAttackGameEvent.CleanUp">
            <summary>
            Remove any circular references to allow garbage collection.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.ChokePointRegainedGameEvent">
            <summary>
            Occurs when a ChokePoint becomes uncontested when the last enemy Facility is recaptured.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePointRegainedGameEvent.#ctor(System.DateTime,Xiperware.WiretapAPI.ChokePoint,System.DateTime)">
            <summary>
            Create a new ChokePointRegainedGameEvent.
            </summary>
            <param name="eventTime">The time the event occurred.</param>
            <param name="cp">The ChokePoint that has been regained.</param>
            <param name="attackStarted">The DateTime the ChokePoint was initially contested (in local time).</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointRegainedGameEvent.ChokePoint">
            <summary>
            The ChokePoint that has been regained.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointRegainedGameEvent.Type">
            <summary>
            The event category this GameEvent belongs to.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointRegainedGameEvent.Title">
            <summary>
            The short event title to display to the user.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointRegainedGameEvent.Description">
            <summary>
            The long description of the event to display to the user. 
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointRegainedGameEvent.ChokePoints">
            <summary>
            One or more ChokePoints associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointRegainedGameEvent.Country">
            <summary>
            The Country associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointRegainedGameEvent.Icon">
            <summary>
            The icon associated with this type (and instance) of GameEvent.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointRegainedGameEvent.AlertIcon">
            <summary>
            The icon associated with this type (and instance) of GameEvent to display
            in the pop-up alert window.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePointRegainedGameEvent.CleanUp">
            <summary>
            Remove any circular references to allow garbage collection.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.ChokePointControllerChangedGameEvent">
            <summary>
            Occurs when control of the ChokePoint has been lost or regained.
            </summary>
            <remarks>Doesn't occur upon ChokePoint capture, or in single-ab ChokePoints.</remarks>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePointControllerChangedGameEvent.#ctor(System.DateTime,Xiperware.WiretapAPI.ChokePoint,Xiperware.WiretapAPI.Country,Xiperware.WiretapAPI.Country)">
            <summary>
            Create a new ChokePointControllerChangedGameEvent.
            </summary>
            <param name="eventTime">The time the event occurred.</param>
            <param name="cp">The ChokePoint that has had control changed.</param>
            <param name="newController">The Country that now controls the ChokePoint.</param>
            <param name="prevController">The Country that previously controlled the ChokePoint.</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointControllerChangedGameEvent.ChokePoint">
            <summary>
            The ChokePoint that has had control changed.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointControllerChangedGameEvent.NewController">
            <summary>
            The Country that now controls the ChokePoint.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointControllerChangedGameEvent.PrevController">
            <summary>
            The Country that previously controlled the ChokePoint.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointControllerChangedGameEvent.NewCountry">
            <summary>
            The Country after the change.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointControllerChangedGameEvent.PrevCountry">
            <summary>
            The Country before the change.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointControllerChangedGameEvent.Type">
            <summary>
            The event category this GameEvent belongs to.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointControllerChangedGameEvent.Title">
            <summary>
            The short event title to display to the user.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointControllerChangedGameEvent.Description">
            <summary>
            The long description of the event to display to the user. 
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointControllerChangedGameEvent.ChokePoints">
            <summary>
            One or more ChokePoints associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointControllerChangedGameEvent.Country">
            <summary>
            The Country associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointControllerChangedGameEvent.Icon">
            <summary>
            The icon associated with this type (and instance) of GameEvent.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.ChokePointControllerChangedGameEvent.AlertIcon">
            <summary>
            The icon associated with this type (and instance) of GameEvent to display
            in the pop-up alert window.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.ChokePointControllerChangedGameEvent.CleanUp">
            <summary>
            Remove any circular references to allow garbage collection.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.AttackObjectiveChangedGameEvent">
            <summary>
            Occurs when an Attack Objective has been placed or withdrawn on a ChokePoint.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.AttackObjectiveChangedGameEvent.#ctor(System.DateTime,Xiperware.WiretapAPI.ChokePoint,Xiperware.WiretapAPI.HCUnit)">
            <summary>
            Create a new AttackObjectiveChangedGameEvent.
            </summary>
            <param name="eventTime">The time the event occurred.</param>
            <param name="cp">The ChokePoint the Attack Objective was changed on.</param>
            <param name="aoHCUnit">The HCUnit that placed the AO, or null if the AO was withdrawn.</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.AttackObjectiveChangedGameEvent.ChokePoint">
            <summary>
            The ChokePoint the Attack Objective was changed on.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.AttackObjectiveChangedGameEvent.AOPlaced">
            <summary>
            True if placed, false if withdrawn.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.AttackObjectiveChangedGameEvent.PlacedBy">
            <summary>
            The HCUnit that placed the AO (null if AO withdrawn).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.AttackObjectiveChangedGameEvent.Type">
            <summary>
            The event category this GameEvent belongs to.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.AttackObjectiveChangedGameEvent.Title">
            <summary>
            The short event title to display to the user.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.AttackObjectiveChangedGameEvent.Description">
            <summary>
            The long description of the event to display to the user. 
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.AttackObjectiveChangedGameEvent.ChokePoints">
            <summary>
            One or more ChokePoints associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.AttackObjectiveChangedGameEvent.Country">
            <summary>
            The Country associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.AttackObjectiveChangedGameEvent.Icon">
            <summary>
            The icon associated with this type (and instance) of GameEvent.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.AttackObjectiveChangedGameEvent.AlertIcon">
            <summary>
            The icon associated with this type (and instance) of GameEvent to display
            in the pop-up alert window.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.AttackObjectiveChangedGameEvent.CleanUp">
            <summary>
            Remove any circular references to allow garbage collection.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.FirebaseBlownGameEvent">
            <summary>
            Occurs when a Firebase has been blown by the enemy.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.FirebaseBlownGameEvent.#ctor(System.DateTime,Xiperware.WiretapAPI.Firebase)">
            <summary>
            Create a new FirebaseBlownGameEvent.
            </summary>
            <param name="eventTime">The time the event occurred.</param>
            <param name="fb">The firebase that is now closed.</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.FirebaseBlownGameEvent.Firebase">
            <summary>
            The Firebase that was blown and is now closed.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FirebaseBlownGameEvent.NewCountry">
            <summary>
            The Country after the change.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FirebaseBlownGameEvent.PrevCountry">
            <summary>
            The Country before the change.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FirebaseBlownGameEvent.Type">
            <summary>
            The event category this GameEvent belongs to.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FirebaseBlownGameEvent.Title">
            <summary>
            The short event title to display to the user.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FirebaseBlownGameEvent.Description">
            <summary>
            The long description of the event to display to the user. 
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FirebaseBlownGameEvent.ChokePoints">
            <summary>
            One or more ChokePoints associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FirebaseBlownGameEvent.Country">
            <summary>
            The Country associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FirebaseBlownGameEvent.Icon">
            <summary>
            The icon associated with this type (and instance) of GameEvent.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FirebaseBlownGameEvent.AlertIcon">
            <summary>
            The icon associated with this type (and instance) of GameEvent to display
            in the pop-up alert window.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.FirebaseBlownGameEvent.CleanUp">
            <summary>
            Remove any circular references to allow garbage collection.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.NewBrigadeFirebaseGameEvent">
            <summary>
            Occurs when a brigade firebase becomes active.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.NewBrigadeFirebaseGameEvent.#ctor(System.DateTime,Xiperware.WiretapAPI.Firebase)">
            <summary>
            Create a new NewBrigadeFirebaseGameEvent.
            </summary>
            <param name="eventTime">The time the event occurred.</param>
            <param name="fb">The brigade firebase that is now open.</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.NewBrigadeFirebaseGameEvent.Firebase">
            <summary>
            The Firebase that was blown and is now closed.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.NewBrigadeFirebaseGameEvent.Type">
            <summary>
            The event category this GameEvent belongs to.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.NewBrigadeFirebaseGameEvent.Title">
            <summary>
            The short event title to display to the user.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.NewBrigadeFirebaseGameEvent.Description">
            <summary>
            The long description of the event to display to the user. 
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.NewBrigadeFirebaseGameEvent.ChokePoints">
            <summary>
            One or more ChokePoints associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.NewBrigadeFirebaseGameEvent.Country">
            <summary>
            The Country associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.NewBrigadeFirebaseGameEvent.Icon">
            <summary>
            The icon associated with this type (and instance) of GameEvent.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.NewBrigadeFirebaseGameEvent.AlertIcon">
            <summary>
            The icon associated with this type (and instance) of GameEvent to display
            in the pop-up alert window.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.NewBrigadeFirebaseGameEvent.CleanUp">
            <summary>
            Remove any circular references to allow garbage collection.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.HCUnitMovedGameEvent">
            <summary>
            Occurs when a HCUnit has been redeployed by a HC player.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnitMovedGameEvent.#ctor(System.DateTime,Xiperware.WiretapAPI.HCUnit,Xiperware.WiretapAPI.ChokePoint,Xiperware.WiretapAPI.ChokePoint,System.String)">
            <summary>
            Create a new HCUnitMovedGameEvent.
            </summary>
            <param name="eventTime">The time the event occurred.</param>
            <param name="hcunit">The HCUnit that was redeployed.</param>
            <param name="from">The ChokePoint the unit was moved from.</param>
            <param name="to">The ChokePoint the unit was moved to.</param>
            <param name="player">The name of the player that ordered the move.</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitMovedGameEvent.HCUnit">
            <summary>
            The HCUnit that was redeployed.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitMovedGameEvent.MovedFrom">
            <summary>
            The ChokePoint the unit was moved from.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitMovedGameEvent.MovedTo">
            <summary>
            The ChokePoint the unit was moved to.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitMovedGameEvent.MovedBy">
            <summary>
            The name of the player that ordered the move.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitMovedGameEvent.Type">
            <summary>
            The event category this GameEvent belongs to.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitMovedGameEvent.Title">
            <summary>
            The short event title to display to the user.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitMovedGameEvent.Description">
            <summary>
            The long description of the event to display to the user. 
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitMovedGameEvent.ChokePoints">
            <summary>
            One or more ChokePoints associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitMovedGameEvent.Country">
            <summary>
            The Country associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitMovedGameEvent.Icon">
            <summary>
            The icon associated with this type (and instance) of GameEvent.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitMovedGameEvent.AlertIcon">
            <summary>
            The icon associated with this type (and instance) of GameEvent to display
            in the pop-up alert window.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnitMovedGameEvent.CleanUp">
            <summary>
            Remove any circular references to allow garbage collection.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.HCUnitDeployedGameEvent">
            <summary>
            Occurs when a HCUnit has been deployed from off-map.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnitDeployedGameEvent.#ctor(System.DateTime,Xiperware.WiretapAPI.HCUnit,Xiperware.WiretapAPI.ChokePoint)">
            <summary>
            Create a new HCUnitDeployedGameEvent.
            </summary>
            <param name="eventTime">The time the event occurred.</param>
            <param name="hcunit">The HCUnit that was deployed.</param>
            <param name="to">The ChokePoint the unit was moved to.</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitDeployedGameEvent.HCUnit">
            <summary>
            The HCUnit that was deployed.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitDeployedGameEvent.MovedTo">
            <summary>
            The ChokePoint the unit was moved to.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitDeployedGameEvent.Type">
            <summary>
            The event category this GameEvent belongs to.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitDeployedGameEvent.Title">
            <summary>
            The short event title to display to the user.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitDeployedGameEvent.Description">
            <summary>
            The long description of the event to display to the user. 
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitDeployedGameEvent.ChokePoints">
            <summary>
            One or more ChokePoints associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitDeployedGameEvent.Country">
            <summary>
            The Country associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitDeployedGameEvent.Icon">
            <summary>
            The icon associated with this type (and instance) of GameEvent.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitDeployedGameEvent.AlertIcon">
            <summary>
            The icon associated with this type (and instance) of GameEvent to display
            in the pop-up alert window.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnitDeployedGameEvent.CleanUp">
            <summary>
            Remove any circular references to allow garbage collection.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.HCUnitRetreatGameEvent">
            <summary>
            Occurs when a HCUnit has been kicked out of a ChokePoint when it has been captured
            by the enemy.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnitRetreatGameEvent.#ctor(System.DateTime,Xiperware.WiretapAPI.HCUnit,Xiperware.WiretapAPI.ChokePoint,Xiperware.WiretapAPI.ChokePoint)">
            <summary>
            Create a new HCUnitRetreatGameEvent.
            </summary>
            <param name="eventTime">The time the event occurred.</param>
            <param name="hcunit">The HCUnit that has fallen back.</param>
            <param name="from">The ChokePoint the unit has moved from.</param>
            <param name="to">The ChokePoint the unit has moved to.</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitRetreatGameEvent.HCUnit">
            <summary>
            The HCUnit that has fallen back.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitRetreatGameEvent.MovedFrom">
            <summary>
            The ChokePoint the unit has moved from.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitRetreatGameEvent.MovedTo">
            <summary>
            The ChokePoint the unit has moved to.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitRetreatGameEvent.Type">
            <summary>
            The event category this GameEvent belongs to.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitRetreatGameEvent.Title">
            <summary>
            The short event title to display to the user.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitRetreatGameEvent.Description">
            <summary>
            The long description of the event to display to the user. 
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitRetreatGameEvent.ChokePoints">
            <summary>
            One or more ChokePoints associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitRetreatGameEvent.Country">
            <summary>
            The Country associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitRetreatGameEvent.Icon">
            <summary>
            The icon associated with this type (and instance) of GameEvent.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitRetreatGameEvent.AlertIcon">
            <summary>
            The icon associated with this type (and instance) of GameEvent to display
            in the pop-up alert window.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnitRetreatGameEvent.CleanUp">
            <summary>
            Remove any circular references to allow garbage collection.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.HCUnitRoutedGameEvent">
            <summary>
            Occurs when a HCUnit has been routed to off-map.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnitRoutedGameEvent.#ctor(System.DateTime,Xiperware.WiretapAPI.HCUnit,Xiperware.WiretapAPI.ChokePoint)">
            <summary>
            Create a new HCUnitRoutedGameEvent.
            </summary>
            <param name="eventTime">The time the event occurred.</param>
            <param name="hcunit">The HCUnit that was routed.</param>
            <param name="from">The ChokePoint the unit was moved from.</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitRoutedGameEvent.HCUnit">
            <summary>
            The HCUnit that was routed.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitRoutedGameEvent.MovedFrom">
            <summary>
            The ChokePoint the unit was moved from.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitRoutedGameEvent.Type">
            <summary>
            The event category this GameEvent belongs to.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitRoutedGameEvent.Title">
            <summary>
            The short event title to display to the user.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitRoutedGameEvent.Description">
            <summary>
            The long description of the event to display to the user. 
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitRoutedGameEvent.ChokePoints">
            <summary>
            One or more ChokePoints associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitRoutedGameEvent.Country">
            <summary>
            The Country associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitRoutedGameEvent.Icon">
            <summary>
            The icon associated with this type (and instance) of GameEvent.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.HCUnitRoutedGameEvent.AlertIcon">
            <summary>
            The icon associated with this type (and instance) of GameEvent to display
            in the pop-up alert window.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.HCUnitRoutedGameEvent.CleanUp">
            <summary>
            Remove any circular references to allow garbage collection.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.FactoryDamagedGameEvent">
            <summary>
            Occurs when a Factory has taken 20% or more damage within 15 minutes.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.FactoryDamagedGameEvent.#ctor(System.DateTime,Xiperware.WiretapAPI.Factory,System.Int32,System.Int32)">
            <summary>
            Create a new FactoryDamagedGameEvent.
            </summary>
            <param name="eventTime">The time the event occurred.</param>
            <param name="factory">The Factory that was damaged.</param>
            <param name="was">The previous damage percent.</param>
            <param name="now">The current damage percent.</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryDamagedGameEvent.Factory">
            <summary>
            The Factory that was damaged.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryDamagedGameEvent.DamageWas">
            <summary>
            The previous damage percent.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryDamagedGameEvent.DamageNow">
            <summary>
            The current damage percent.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryDamagedGameEvent.Type">
            <summary>
            The event category this GameEvent belongs to.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryDamagedGameEvent.Title">
            <summary>
            The short event title to display to the user.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryDamagedGameEvent.Description">
            <summary>
            The long description of the event to display to the user. 
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryDamagedGameEvent.ChokePoints">
            <summary>
            One or more ChokePoints associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryDamagedGameEvent.Country">
            <summary>
            The Country associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryDamagedGameEvent.Icon">
            <summary>
            The icon associated with this type (and instance) of GameEvent.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryDamagedGameEvent.AlertIcon">
            <summary>
            The icon associated with this type (and instance) of GameEvent to display
            in the pop-up alert window.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.FactoryDamagedGameEvent.CleanUp">
            <summary>
            Remove any circular references to allow garbage collection.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.FactoryHealthyGameEvent">
            <summary>
            Occurs when a Factory has been repaired to 100% health, after having been below 80%.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.FactoryHealthyGameEvent.#ctor(System.DateTime,Xiperware.WiretapAPI.Factory)">
            <summary>
            Create a new FactoryHealthyGameEvent.
            </summary>
            <param name="eventTime">The time the event occurred.</param>
            <param name="factory">The Factory that was repaired.</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryHealthyGameEvent.Factory">
            <summary>
            The Factory that was repaired.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryHealthyGameEvent.Type">
            <summary>
            The event category this GameEvent belongs to.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryHealthyGameEvent.Title">
            <summary>
            The short event title to display to the user.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryHealthyGameEvent.Description">
            <summary>
            The long description of the event to display to the user. 
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryHealthyGameEvent.ChokePoints">
            <summary>
            One or more ChokePoints associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryHealthyGameEvent.Country">
            <summary>
            The Country associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryHealthyGameEvent.Icon">
            <summary>
            The icon associated with this type (and instance) of GameEvent.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryHealthyGameEvent.AlertIcon">
            <summary>
            The icon associated with this type (and instance) of GameEvent to display
            in the pop-up alert window.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.FactoryHealthyGameEvent.CleanUp">
            <summary>
            Remove any circular references to allow garbage collection.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.FactoryDestroyedGameEvent">
            <summary>
            Occurs when a Factory has taken 100% damage.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.FactoryDestroyedGameEvent.#ctor(System.DateTime,Xiperware.WiretapAPI.Factory)">
            <summary>
            Create a new FactoryDestroyedGameEvent.
            </summary>
            <param name="eventTime">The time the event occurred.</param>
            <param name="factory">The Factory that was destroyed.</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryDestroyedGameEvent.Factory">
            <summary>
            The Factory that was destroyed.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryDestroyedGameEvent.Type">
            <summary>
            The event category this GameEvent belongs to.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryDestroyedGameEvent.Title">
            <summary>
            The short event title to display to the user.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryDestroyedGameEvent.Description">
            <summary>
            The long description of the event to display to the user. 
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryDestroyedGameEvent.ChokePoints">
            <summary>
            One or more ChokePoints associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryDestroyedGameEvent.Country">
            <summary>
            The Country associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryDestroyedGameEvent.Icon">
            <summary>
            The icon associated with this type (and instance) of GameEvent.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryDestroyedGameEvent.AlertIcon">
            <summary>
            The icon associated with this type (and instance) of GameEvent to display
            in the pop-up alert window.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.FactoryDestroyedGameEvent.CleanUp">
            <summary>
            Remove any circular references to allow garbage collection.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.FactoryRDPChangedGameEvent">
            <summary>
            Occurs when a Factory has started or stopped production.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.FactoryRDPChangedGameEvent.#ctor(System.DateTime,Xiperware.WiretapAPI.Factory,System.Int32)">
            <summary>
            Create a new FactoryRDPChangedGameEvent.
            </summary>
            <param name="eventTime">The time the event occurred.</param>
            <param name="factory">The Factory that has changed production.</param>
            <param name="rdp">True if started, false if stopped.</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryRDPChangedGameEvent.Factory">
            <summary>
            The Factory that has changed production.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryRDPChangedGameEvent.Resumed">
            <summary>
            True if RDP resumed, false if halted.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryRDPChangedGameEvent.Type">
            <summary>
            The event category this GameEvent belongs to.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryRDPChangedGameEvent.Title">
            <summary>
            The short event title to display to the user.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryRDPChangedGameEvent.Description">
            <summary>
            The long description of the event to display to the user. 
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryRDPChangedGameEvent.ChokePoints">
            <summary>
            One or more ChokePoints associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryRDPChangedGameEvent.Country">
            <summary>
            The Country associated with this event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryRDPChangedGameEvent.Icon">
            <summary>
            The icon associated with this type (and instance) of GameEvent.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.FactoryRDPChangedGameEvent.AlertIcon">
            <summary>
            The icon associated with this type (and instance) of GameEvent to display
            in the pop-up alert window.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.FactoryRDPChangedGameEvent.CleanUp">
            <summary>
            Remove any circular references to allow garbage collection.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.GameEventCollection">
            <summary>
            A static class that encapsulates a collection of the most recent two hours of GameEvent's.
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.GameEventCollection.MAX_AGE">
            <summary>
            The maximum age of the event list, in hours.
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.GameEventCollection.allEvents">
            <summary>
            A sorted list of all GameEvents, where index 0 = oldest.
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.GameEventCollection.newEvents">
            <summary>
            A sorted list of new GameEvents from the most recent poll, where index 0 = oldest.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameEventCollection.List">
            <summary>
            An list of all current GameEvents.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.GameEventCollection.New">
            <summary>
            An list of all GameEvents from the most recent poll.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.GameEventCollection.#ctor">
            <summary>
            Create a new GameEventCollection object.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.GameEventCollection.Add(Xiperware.WiretapAPI.GameEvent)">
            <summary>
            Add a new GameEvent to the list, if it's within the past two hours.
            </summary>
            <remarks>Also ages the list.</remarks>
            <param name="gameEvent">The new GameEvent to add.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.GameEventCollection.ResetNewEvents">
            <summary>
            Reset the new events list.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.GameEventCollection.Prune">
            <summary>
            Age the list to remove any entries that are now older than two hours.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.GameEventCollection.Cleanup">
            <summary>
            Delete all entries and remove any circular references to allow garbage collection.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.GameEventCollection.UpdateSkewCorrection">
            <summary>
            Repopulates the allEvents/newEvents sorted lists with the current skew correction.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.GameEventCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through all game events in the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.GameEventCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through all game events in the collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:Xiperware.WiretapAPI.Language">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.About_LogTabTitle">
            <summary>
              Looks up a localized string similar to Log.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.BrigadeStatus_CommandingOfficer">
            <summary>
              Looks up a localized string similar to Commanding Officer:.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.BrigadeStatus_DeployedAt1">
            <summary>
              Looks up a localized string similar to Deployed at.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.BrigadeStatus_DeployedAt2">
            <summary>
              Looks up a localized string similar to {0} for {1}.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.BrigadeStatus_LastMoved">
            <summary>
              Looks up a localized string similar to Last moved {0} by {1}.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.BrigadeStatus_NotDeployed">
            <summary>
              Looks up a localized string similar to Not deployed.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.BrigadeStatus_OfficerInCharge">
            <summary>
              Looks up a localized string similar to Acting Officer in Charge:.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.BrigadeStatus_Section_Command">
            <summary>
              Looks up a localized string similar to Command.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.BrigadeStatus_Section_Deployment">
            <summary>
              Looks up a localized string similar to Deployment.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.BrigadeStatus_Section_DivisionMembers">
            <summary>
              Looks up a localized string similar to Division Members.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.BrigadeStatus_Section_StackedWith">
            <summary>
              Looks up a localized string similar to Stacked with.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.BrigadeStatus_Undeployed">
            <summary>
              Looks up a localized string similar to Currently undeployed.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.BrigadeStatus_UndeployedFor">
            <summary>
              Looks up a localized string similar to Undeployed for {0}.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Common_DivisionHQ">
            <summary>
              Looks up a localized string similar to Division HQ.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Common_Tooltip_CollapseAll">
            <summary>
              Looks up a localized string similar to Collapse all levels.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Common_Tooltip_DivisionDeployed">
            <summary>
              Looks up a localized string similar to Division HQ currently deployed in {0}.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Common_Tooltip_DivisionNotDeployed">
            <summary>
              Looks up a localized string similar to Division HQ not currently deployed.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Common_Tooltip_ExpandAll">
            <summary>
              Looks up a localized string similar to Expand all levels.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Common_Tooltip_ExpandTop">
            <summary>
              Looks up a localized string similar to Expand only top levels.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Common_Tooltip_GoToBrigade">
            <summary>
              Looks up a localized string similar to Go to Brigade.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Common_Tooltip_GoToEquipment">
            <summary>
              Looks up a localized string similar to Go to Equipment.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Common_Tooltip_GoToMap">
            <summary>
              Looks up a localized string similar to Go to {0} on map.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Common_Tooltip_GoToStatus">
            <summary>
              Looks up a localized string similar to View status of {0}.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Country_Demonym_Commonwealth">
            <summary>
              Looks up a localized string similar to Commonwealth.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Country_Demonym_England">
            <summary>
              Looks up a localized string similar to British.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Country_Demonym_France">
            <summary>
              Looks up a localized string similar to French.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Country_Demonym_Germany">
            <summary>
              Looks up a localized string similar to German,Germans.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Country_Demonym_Italy">
            <summary>
              Looks up a localized string similar to Italian,Italians.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Country_Demonym_Japan">
            <summary>
              Looks up a localized string similar to Japanese.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Country_Demonym_Russia">
            <summary>
              Looks up a localized string similar to Russian,Russians.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Country_Demonym_USA">
            <summary>
              Looks up a localized string similar to US.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Country_Name_Commonwealth">
            <summary>
              Looks up a localized string similar to Commonwealth.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Country_Name_England">
            <summary>
              Looks up a localized string similar to England.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Country_Name_France">
            <summary>
              Looks up a localized string similar to France.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Country_Name_Germany">
            <summary>
              Looks up a localized string similar to Germany.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Country_Name_Italy">
            <summary>
              Looks up a localized string similar to Italy.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Country_Name_Japan">
            <summary>
              Looks up a localized string similar to Japan.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Country_Name_Neutral">
            <summary>
              Looks up a localized string similar to Neutral.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Country_Name_NeutralFriendly">
            <summary>
              Looks up a localized string similar to Neutral Friendly.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Country_Name_NeutralHostile">
            <summary>
              Looks up a localized string similar to Neutral Hostile.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Country_Name_NoCountry">
            <summary>
              Looks up a localized string similar to No Country.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Country_Name_Russia">
            <summary>
              Looks up a localized string similar to Russia.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Country_Name_USA">
            <summary>
              Looks up a localized string similar to USA.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.CurrentAttacks_ShowAlerts">
            <summary>
              Looks up a localized string similar to Show alerts.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.CurrentAttacks_Tooltip_CollapseAll">
            <summary>
              Looks up a localized string similar to Collapse all towns.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.CurrentAttacks_Tooltip_ExpandAll">
            <summary>
              Looks up a localized string similar to Expand all towns with events.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.CurrentAttacks_Tooltip_ExpandContested">
            <summary>
              Looks up a localized string similar to Expand only contested towns.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.CurrentAttacks_Tooltip_NoEvents">
            <summary>
              Looks up a localized string similar to {0} has an AO but no events in the past two hours.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.CurrentAttacks_TownStatus">
            <summary>
              Looks up a localized string similar to Town status.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_ActivityLevel_Heavy">
            <summary>
              Looks up a localized string similar to Heavy.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_ActivityLevel_Light">
            <summary>
              Looks up a localized string similar to Light.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_ActivityLevel_Low">
            <summary>
              Looks up a localized string similar to Low.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_ActivityLevel_Moderate">
            <summary>
              Looks up a localized string similar to Moderate.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_ActivityLevel_None">
            <summary>
              Looks up a localized string similar to None.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_Branch_Airforce">
            <summary>
              Looks up a localized string similar to Airforce.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_Branch_Army">
            <summary>
              Looks up a localized string similar to Army.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_Branch_Navy">
            <summary>
              Looks up a localized string similar to Navy.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_Branch_None">
            <summary>
              Looks up a localized string similar to None.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_CountryName_Belgium">
            <summary>
              Looks up a localized string similar to BELGIUM.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_CountryName_England">
            <summary>
              Looks up a localized string similar to ENGLAND.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_CountryName_France">
            <summary>
              Looks up a localized string similar to FRANCE.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_CountryName_Germany">
            <summary>
              Looks up a localized string similar to GERMANY.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_CountryName_Luxembourg">
            <summary>
              Looks up a localized string similar to LUXEMBOURG.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_CountryName_Netherlands">
            <summary>
              Looks up a localized string similar to NETHERLANDS.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_FirebaseState_Brigade">
            <summary>
              Looks up a localized string similar to Brigade.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_FirebaseState_Defensive">
            <summary>
              Looks up a localized string similar to Defensive.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_FirebaseState_Inactive">
            <summary>
              Looks up a localized string similar to Inactive.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_FirebaseState_Offensive">
            <summary>
              Looks up a localized string similar to Offensive.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_HCMoveResult_001">
            <summary>
              Looks up a localized string similar to No such brigade.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_HCMoveResult_002">
            <summary>
              Looks up a localized string similar to Invalid destination.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_HCMoveResult_003">
            <summary>
              Looks up a localized string similar to Enemy owns destination.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_HCMoveResult_004">
            <summary>
              Looks up a localized string similar to Player not an active HC member.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_HCMoveResult_005">
            <summary>
              Looks up a localized string similar to Can&apos;t move brigade yet.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_HCMoveResult_006">
            <summary>
              Looks up a localized string similar to No direct link to destination.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_HCMoveResult_007">
            <summary>
              Looks up a localized string similar to No division members in range of destination.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_HCMoveResult_008">
            <summary>
              Looks up a localized string similar to No armybases at destination.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_HCMoveResult_009">
            <summary>
              Looks up a localized string similar to No airfields at destination.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_HCMoveResult_010">
            <summary>
              Looks up a localized string similar to No naval bases at destination.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_HCMoveResult_011">
            <summary>
              Looks up a localized string similar to Can&apos;t deploy to a frontline town.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_HCMoveResult_012">
            <summary>
              Looks up a localized string similar to Enemy controls destination.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_HCMoveResult_013">
            <summary>
              Looks up a localized string similar to Destination has no factory link.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_HCMoveResult_014">
            <summary>
              Looks up a localized string similar to Cannot manually route.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_HCMoveResult_015">
            <summary>
              Looks up a localized string similar to Cannot manually route from non-pocket.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_HCMoveResult_016">
            <summary>
              Looks up a localized string similar to Too much equipment to manually route.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_HCMoveResult_017">
            <summary>
              Looks up a localized string similar to Enemy depot blocking move.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_HCMoveResult_018">
            <summary>
              Looks up a localized string similar to Enemy firebase blocking move.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_HCMoveResult_101">
            <summary>
              Looks up a localized string similar to Movement veto&apos;d.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_HCMoveResult_102">
            <summary>
              Looks up a localized string similar to Server shutdown.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_HCMoveResult_103">
            <summary>
              Looks up a localized string similar to OIC replaced.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_HCMoveResult_104">
            <summary>
              Looks up a localized string similar to OIC removed.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_HCMoveResult_105">
            <summary>
              Looks up a localized string similar to OIC left game/changed brigade.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_HCMoveResult_106">
            <summary>
              Looks up a localized string similar to Expired.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_HCUnitLevel_Branch">
            <summary>
              Looks up a localized string similar to Branch.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_HCUnitLevel_Brigade">
            <summary>
              Looks up a localized string similar to Brigade.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_HCUnitLevel_Corps">
            <summary>
              Looks up a localized string similar to Corps.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_HCUnitLevel_Division">
            <summary>
              Looks up a localized string similar to Division.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_HCUnitLevel_Top">
            <summary>
              Looks up a localized string similar to Top.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_HCUnitMoveState_Cancelled">
            <summary>
              Looks up a localized string similar to Cancelled.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_HCUnitMoveState_CompletionFailed">
            <summary>
              Looks up a localized string similar to Completion Failed.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_HCUnitMoveState_Pending">
            <summary>
              Looks up a localized string similar to Pending.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_HCUnitMoveState_RequestFailed">
            <summary>
              Looks up a localized string similar to Request Failed.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_HCUnitMoveState_Success">
            <summary>
              Looks up a localized string similar to Success.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_HCUnitMoveState_Unknown">
            <summary>
              Looks up a localized string similar to Unknown.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_ServerPopulation_Average">
            <summary>
              Looks up a localized string similar to Average.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_ServerPopulation_Empty">
            <summary>
              Looks up a localized string similar to Empty.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_ServerPopulation_Good">
            <summary>
              Looks up a localized string similar to Good.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_ServerPopulation_High">
            <summary>
              Looks up a localized string similar to High.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_ServerPopulation_Low">
            <summary>
              Looks up a localized string similar to Light.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_ServerPopulation_Unknown">
            <summary>
              Looks up a localized string similar to Unknown.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_ServerPopulation_VeryHigh">
            <summary>
              Looks up a localized string similar to Very High.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_ServerPopulation_VeryLight">
            <summary>
              Looks up a localized string similar to Very Light.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_ServerState_Closed">
            <summary>
              Looks up a localized string similar to Closed.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_ServerState_Info_NoCap">
            <summary>
              Looks up a localized string similar to No capture.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_ServerState_Info_NoKill">
            <summary>
              Looks up a localized string similar to No kill.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_ServerState_Info_NoSpawn">
            <summary>
              Looks up a localized string similar to No spawn.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_ServerState_Locked">
            <summary>
              Looks up a localized string similar to Locked.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_ServerState_Offline">
            <summary>
              Looks up a localized string similar to Offline.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_ServerState_Online">
            <summary>
              Looks up a localized string similar to Online.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_ServerState_Starting">
            <summary>
              Looks up a localized string similar to Starting.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_ServerState_Syncing">
            <summary>
              Looks up a localized string similar to Syncing.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_ServerState_Unknown">
            <summary>
              Looks up a localized string similar to Unknown.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_Side_Allied">
            <summary>
              Looks up a localized string similar to Allied.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_Side_Axis">
            <summary>
              Looks up a localized string similar to Axis.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_Side_Neutral">
            <summary>
              Looks up a localized string similar to Neutral.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_Side_None">
            <summary>
              Looks up a localized string similar to None.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_VehicleCategory_Aircraft">
            <summary>
              Looks up a localized string similar to Aircraft.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_VehicleCategory_GroundVehicle">
            <summary>
              Looks up a localized string similar to Ground Vehicle.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_VehicleCategory_Infantry">
            <summary>
              Looks up a localized string similar to Infantry.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_VehicleCategory_Munitions">
            <summary>
              Looks up a localized string similar to Munitions.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_VehicleCategory_SeaVehicle">
            <summary>
              Looks up a localized string similar to Sea Vehicle.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_VehicleClass_AirBomb">
            <summary>
              Looks up a localized string similar to Air Bomb.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_VehicleClass_Artillery">
            <summary>
              Looks up a localized string similar to Artillery.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_VehicleClass_Bomber">
            <summary>
              Looks up a localized string similar to Bomber.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_VehicleClass_Crew">
            <summary>
              Looks up a localized string similar to Crew.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_VehicleClass_Fighter">
            <summary>
              Looks up a localized string similar to Fighter.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_VehicleClass_Gm">
            <summary>
              Looks up a localized string similar to GM.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_VehicleClass_Gun">
            <summary>
              Looks up a localized string similar to Gun.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_VehicleClass_HeavyInfantry">
            <summary>
              Looks up a localized string similar to Heavy Infantry.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_VehicleClass_Para">
            <summary>
              Looks up a localized string similar to Para.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_VehicleClass_Riverine">
            <summary>
              Looks up a localized string similar to Riverine.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_VehicleClass_Sea">
            <summary>
              Looks up a localized string similar to Sea.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_VehicleClass_Tank">
            <summary>
              Looks up a localized string similar to Tank.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_VehicleClass_Troop">
            <summary>
              Looks up a localized string similar to Troop.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Enum_VehicleClass_Truck">
            <summary>
              Looks up a localized string similar to Truck.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Equipment_NoImageAvailable">
            <summary>
              Looks up a localized string similar to No image available.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Equipment_NotAvailable">
            <summary>
              Looks up a localized string similar to Not available in cycle {0}.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Equipment_RankRequired">
            <summary>
              Looks up a localized string similar to RANK REQUIRED.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Equipment_RankRequiredNextCycle">
            <summary>
              Looks up a localized string similar to NEXT CYCLE.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Equipment_Tooltip_NextCycle">
            <summary>
              Looks up a localized string similar to Next cycle.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Equipment_Tooltip_PrevCycle">
            <summary>
              Looks up a localized string similar to Prev cycle.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Error_AlreadyRunning">
            <summary>
              Looks up a localized string similar to Battleground Europe Game Monitor is already running..
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Error_AnErrorOccuredParsing">
            <summary>
              Looks up a localized string similar to An error occurred parsing {0}.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Error_ApplyNetworkSettings">
            <summary>
              Looks up a localized string similar to An error occurred applying your network settings.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Error_CheckNetworkSettings">
            <summary>
              Looks up a localized string similar to Do you want to check your network settings and retry?.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Error_ClockSkew">
             <summary>
               Looks up a localized string similar to Warning: Excessive clock skew detected: {0}
            
            The times being sent by Wiretap are different to your local time. This may mean your
            computers clock or time zone settings are incorrect. Please check your time zone and
            make sure your clock is within 15 minutes of www.timeanddate.com for your time zone.
            
            Local clock:	{1}
            Wiretap clock:	{2} (±1 min).
             </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Error_CrashLogfile">
             <summary>
               Looks up a localized string similar to Congratulations, you&apos;ve made Battleground Europe Game Monitor crash! :)
            
            Could you please send the logfile below in an email to xiperware@gmail.com along with a brief description
            of what you were doing at the time. This will help the developer to identify and fix the problem.
            
            Logfile: {0}.
             </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Error_CrashNoLogfile">
             <summary>
               Looks up a localized string similar to Congratulations, you&apos;ve made Battleground Europe Game Monitor crash! :)
            
            Could you please press &lt;Ctrl&gt;+C to copy this information and paste it in an email to xiperware@gmail.com
            along with what you were doing at the time. This will help the developer to identify and fix the problem..
             </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Error_CrashTitle">
            <summary>
              Looks up a localized string similar to Unhandled Exception (BEGM {0}).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Error_DownloadError">
            <summary>
              Looks up a localized string similar to An error occurred downloading {0}.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Error_Error">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Error_EventLoopBusy">
            <summary>
              Looks up a localized string similar to Currently checking for new events in the background, please try again in a second..
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Error_HeaderError">
            <summary>
              Looks up a localized string similar to An error occurred getting the headers for {0}.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Error_HeaderErrorLastMod">
            <summary>
              Looks up a localized string similar to An error occurred getting the Last-Modified header.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Error_InvalidPort">
            <summary>
              Looks up a localized string similar to Not a valid port number.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Error_LoadNetworkSettings">
            <summary>
              Looks up a localized string similar to An error occurred loading your network settings, they have been reset to defaults..
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Error_NetworkSettingsUntested">
             <summary>
               Looks up a localized string similar to Your network settings haven&apos;t been tested.
            Would you like to test them now?.
             </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Error_NonDefaultDPI">
             <summary>
               Looks up a localized string similar to Battleground Europe Game Monitor doesn&apos;t currently support your screen DPI setting ({0} dpi).
            
            Windows XP:
            Control Panel =&gt; Display =&gt; Settings =&gt; Advanced =&gt; General =&gt; 96 dpi..
             </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Error_ParseDatetime">
            <summary>
              Looks up a localized string similar to Failed to parse datetime string: &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Error_Question">
            <summary>
              Looks up a localized string similar to Question.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Error_Restart">
            <summary>
              Looks up a localized string similar to Failed to restart BEGM.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Error_SaveAlert">
            <summary>
              Looks up a localized string similar to Failed to save Alert settings.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Error_SaveLanguage">
            <summary>
              Looks up a localized string similar to Failed to save Language settings.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Error_SaveMap">
            <summary>
              Looks up a localized string similar to Failed to save Map settings.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Error_SaveMisc">
            <summary>
              Looks up a localized string similar to Failed to save Misc settings.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Error_SaveNetwork">
            <summary>
              Looks up a localized string similar to Failed to save Network settings.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Error_SaveStartup">
            <summary>
              Looks up a localized string similar to Failed to save Startup settings.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Error_Sleep">
            <summary>
              Looks up a localized string similar to Failed to start sleep process.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Error_TryAgain">
            <summary>
              Looks up a localized string similar to {0} will now try again..
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Error_Wakeup">
            <summary>
              Looks up a localized string similar to Failed to launch Battleground Europe Game Monitor.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Error_WindowsVersion">
            <summary>
              Looks up a localized string similar to Battleground Europe Game Monitor requires Windows 2000 or greater..
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Desc_AOPlaced">
            <summary>
              Looks up a localized string similar to The {0} {1} have ordered an attack on {2}..
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Desc_AOPlacedDeployed">
            <summary>
              Looks up a localized string similar to The {0} {1} deployed in {2} have ordered an attack on {3}..
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Desc_AORecalled">
            <summary>
              Looks up a localized string similar to The {0} attack on {1} has been recalled..
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Desc_ChokePointCaptured">
            <summary>
              Looks up a localized string similar to {0} has been captured by {1}!.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Desc_ChokePointCapturedAfter">
            <summary>
              Looks up a localized string similar to {0} has been captured by {1} after {2}!.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Desc_ChokePointControlGained">
            <summary>
              Looks up a localized string similar to {0} forces have gained control of {1}..
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Desc_ChokePointControlRegained">
            <summary>
              Looks up a localized string similar to {0} forces have regained control of {1}..
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Desc_ChokePointRegained">
            <summary>
              Looks up a localized string similar to {0} has been regained by {1} forces..
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Desc_ChokePointRegainedAfter">
            <summary>
              Looks up a localized string similar to {0} has been regained by {1} forces after {2}..
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Desc_ChokePointUnderAttack">
            <summary>
              Looks up a localized string similar to {0} is under attack by {1} forces!.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Desc_ChokePointUnderAttackAgain">
            <summary>
              Looks up a localized string similar to {0} is under attack again by {1} forces..
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Desc_FacilityCaptured">
            <summary>
              Looks up a localized string similar to {0} has been captured {1} by {2}..
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Desc_FacilityRecaptured">
            <summary>
              Looks up a localized string similar to {0} has been recaptured {1} by {2}..
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Desc_FactoryDamaged">
            <summary>
              Looks up a localized string similar to {0} at {1} has received {2}% damage, currently at {3}% health..
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Desc_FactoryDestroyed">
            <summary>
              Looks up a localized string similar to {0} at {1} has been destroyed!.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Desc_FactoryHealthy">
            <summary>
              Looks up a localized string similar to {0} at {1} has reached 100% health..
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Desc_FactoryRDPStart">
            <summary>
              Looks up a localized string similar to {0} at {1} has resumed production following repairs..
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Desc_FactoryRDPStopCaptured">
            <summary>
              Looks up a localized string similar to {0} at {1} has halted production due to being captured..
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Desc_FactoryRDPStopDamaged">
            <summary>
              Looks up a localized string similar to {0} at {1} has halted production due to excessive damage..
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Desc_FirebaseBlownBrigade">
            <summary>
              Looks up a localized string similar to The {0} has been blown, the {1:v2} now have a brigade FB to {2}..
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Desc_FirebaseBlownBrigadeNonspawnable">
            <summary>
              Looks up a localized string similar to The {0} has been blown, the {1:v2} now have a (non-spawnable) brigade FB to {2}..
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Desc_FirebaseBlownDefensive">
            <summary>
              Looks up a localized string similar to The {0} has been blown, the {1:v2} now have a defensive FB to {2}..
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Desc_FirebaseBlownOffensive">
            <summary>
              Looks up a localized string similar to The {0} has been blown, the {1:v2} now have an offensive FB to {2}..
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Desc_HCUnitDeployed">
            <summary>
              Looks up a localized string similar to {0} has been deployed at {1}..
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Desc_HCUnitMoved">
            <summary>
              Looks up a localized string similar to {0} has been redeployed from {1} to {2} by {3}..
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Desc_HCUnitRetreat">
            <summary>
              Looks up a localized string similar to {0} has retreated from {1} to {2} after being overrun..
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Desc_HCUnitRouted">
            <summary>
              Looks up a localized string similar to {0} has been routed from {1}!.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Desc_NewBrigadeFirebase">
            <summary>
              Looks up a localized string similar to {0} has a new brigade FB from {1} to {2}..
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Desc_SpawnableCaptured">
            <summary>
              Looks up a localized string similar to The {0} spawnable in {1} has been captured {2} by {3}..
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Desc_SpawnableRecaptured">
            <summary>
              Looks up a localized string similar to The {0} spawnable in {1} has been recaptured {2} by {3}..
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Misc_DivisionHQ">
            <summary>
              Looks up a localized string similar to Division HQ.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Misc_InChokePoint">
            <summary>
              Looks up a localized string similar to in {0}.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Title_AOPlaced">
            <summary>
              Looks up a localized string similar to AO placed on {0}.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Title_AORecalled">
            <summary>
              Looks up a localized string similar to AO recalled on {0}.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Title_ChokePointCaptured">
            <summary>
              Looks up a localized string similar to {0} captured!.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Title_ChokePointControlChanged">
            <summary>
              Looks up a localized string similar to {0} control changed.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Title_ChokePointRegained">
            <summary>
              Looks up a localized string similar to {0} regained.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Title_ChokePointUnderAttack">
            <summary>
              Looks up a localized string similar to {0} under attack.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Title_FacilityCaptured">
            <summary>
              Looks up a localized string similar to {0} captured.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Title_FacilityRecaptured">
            <summary>
              Looks up a localized string similar to {0} recaptured.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Title_FactoryDamaged">
            <summary>
              Looks up a localized string similar to {0} factory damaged.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Title_FactoryDestroyed">
            <summary>
              Looks up a localized string similar to {0} factory destroyed!.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Title_FactoryHealthy">
            <summary>
              Looks up a localized string similar to {0} factory repaired.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Title_FactoryRDPStart">
            <summary>
              Looks up a localized string similar to {0} factory resumed production.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Title_FactoryRDPStop">
            <summary>
              Looks up a localized string similar to {0} factory halted production.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Title_FirebaseBlown">
            <summary>
              Looks up a localized string similar to {0} blown.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Title_HCUnitDeployed">
            <summary>
              Looks up a localized string similar to {0} deployed.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Title_HCUnitMoved">
            <summary>
              Looks up a localized string similar to {0} redeployed.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Title_HCUnitRetreat">
            <summary>
              Looks up a localized string similar to {0} has retreated.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Title_HCUnitRouted">
            <summary>
              Looks up a localized string similar to {0} routed!.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Title_NewBrigadeFirebase">
            <summary>
              Looks up a localized string similar to New brigade FB to {0}.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Title_SpawnableCaptured">
            <summary>
              Looks up a localized string similar to {0} captured!.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Event_Title_SpawnableRecaptured">
            <summary>
              Looks up a localized string similar to {0} recaptured!.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.FactoryStatus_Health">
            <summary>
              Looks up a localized string similar to {0}% health.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.FactoryStatus_Output">
            <summary>
              Looks up a localized string similar to OUTPUT.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.FactoryStatus_OutputPercent">
            <summary>
              Looks up a localized string similar to {0}% today, {1}% campaign.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.FactoryStatus_RDPCycle">
            <summary>
              Looks up a localized string similar to RDP cycle {0}       {1}% complete       (eta {2}).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.FactoryStatus_RDPCycleNoEta">
            <summary>
              Looks up a localized string similar to RDP cycle {0}       {1}% complete       (eta unknown).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.FactoryStatus_Tooltip_AllFactoriesCaptured">
            <summary>
              Looks up a localized string similar to All factories have been captured.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.FactoryStatus_Tooltip_CurrentHealth">
            <summary>
              Looks up a localized string similar to Current health: {0}%.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.FactoryStatus_Tooltip_EstimatedCompletion">
            <summary>
              Looks up a localized string similar to Estimated completion: {0}.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.FactoryStatus_Tooltip_GraphDamage">
            <summary>
              Looks up a localized string similar to Damage for past 24 hours.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.FactoryStatus_Tooltip_GraphOutput">
            <summary>
              Looks up a localized string similar to Output for past 24 hours.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.FactoryStatus_Tooltip_OutputCampaign">
            <summary>
              Looks up a localized string similar to {0}% production output for current campaign.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.FactoryStatus_Tooltip_OutputDay">
            <summary>
              Looks up a localized string similar to {0}% production output for past 24 hours.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.FactoryStatus_Tooltip_RdpOff">
            <summary>
              Looks up a localized string similar to Not currently contributing to RDP.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.FactoryStatus_Tooltip_RdpOn">
            <summary>
              Looks up a localized string similar to Currently contributing to RDP.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.FactoryStatus_Tooltip_RdpPoints">
            <summary>
              Looks up a localized string similar to {0} of {1} points.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.GameMap_AltitudeFeet">
            <summary>
              Looks up a localized string similar to {0}ft.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.GameMap_AltitudeMeters">
            <summary>
              Looks up a localized string similar to {0}m.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.GameMap_Facility_AB">
            <summary>
              Looks up a localized string similar to AB.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.GameMap_Facility_ABs">
            <summary>
              Looks up a localized string similar to ABs.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.GameMap_Facility_AF">
            <summary>
              Looks up a localized string similar to AF.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.GameMap_Facility_AFs">
            <summary>
              Looks up a localized string similar to AFs.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.GameMap_Facility_Depot">
            <summary>
              Looks up a localized string similar to depot.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.GameMap_Facility_Depots">
            <summary>
              Looks up a localized string similar to depots.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.GameMap_Facility_Other">
            <summary>
              Looks up a localized string similar to other.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.GameMap_Facility_Others">
            <summary>
              Looks up a localized string similar to others.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.GameMap_Links_AllAvailable">
            <summary>
              Looks up a localized string similar to all available.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.GameMap_Links_SomeAvailable">
            <summary>
              Looks up a localized string similar to {0} available.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.GameMap_None">
            <summary>
              Looks up a localized string similar to (none).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.GameMap_Tooltip_GoogleMaps">
            <summary>
              Looks up a localized string similar to Go to Google Maps.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.GameMap_Tooltip_ViewTownStatus">
            <summary>
              Looks up a localized string similar to View town status.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.GameMap_Unit">
            <summary>
              Looks up a localized string similar to unit.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.GameMap_Units">
            <summary>
              Looks up a localized string similar to units.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.GameStatus_HeaderCampaign">
            <summary>
              Looks up a localized string similar to Campaign {0}, Day {1}.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.GameStatus_HeaderIntermission">
            <summary>
              Looks up a localized string similar to Intermission {0}.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.GameStatus_Hide">
            <summary>
              Looks up a localized string similar to Hide Game Status.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.GameStatus_NoUpdateAvailable">
            <summary>
              Looks up a localized string similar to Latest version.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.GameStatus_Reinitialising">
            <summary>
              Looks up a localized string similar to REINITIALISING, PLEASE WAIT....
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.GameStatus_Show">
            <summary>
              Looks up a localized string similar to Show Game Status.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.GameStatus_Tooltip_LaunchGame">
            <summary>
              Looks up a localized string similar to The {0} server is currently {1}, player population: {2}.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.GameStatus_UpdateAvailable">
            <summary>
              Looks up a localized string similar to Update available.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.GameStatus_UpdateAvailablePlugin">
            <summary>
              Looks up a localized string similar to Plugin update available.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Misc_AtChokePoint">
            <summary>
              Looks up a localized string similar to at {0}.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Misc_Contested">
            <summary>
              Looks up a localized string similar to Contested.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Misc_ControlledBy">
            <summary>
              Looks up a localized string similar to Controlled by:.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Misc_OwnedBy">
            <summary>
              Looks up a localized string similar to Owned by:.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Misc_Uncontested">
            <summary>
              Looks up a localized string similar to Uncontested.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.NetManager_ConnectTo">
            <summary>
              Looks up a localized string similar to Connect to {0}.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.NetManager_ConnectToProxy">
            <summary>
              Looks up a localized string similar to Connect to proxy server.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.NetManager_PleaseEnterCredentials">
            <summary>
              Looks up a localized string similar to Please enter your Proxy Server credentials.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Options_Display">
            <summary>
              Looks up a localized string similar to Display {0}.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Options_NetworkTestSuccess">
            <summary>
              Looks up a localized string similar to Success.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Options_NewLanguage">
             <summary>
               Looks up a localized string similar to The new language setting will not take effect until next time BEGM is run.
            
            Do you want to restart BEGM now?.
             </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Options_SleepMode">
             <summary>
               Looks up a localized string similar to When in sleep mode, Battleground Europe Game Monitor will &quot;hibernate&quot;, using as little memory/cpu as possible and no network bandwidth.
            
            Waking up again will require an approx {0}kb download of data to re-establish game state..
             </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.OrderOfBattle_DeployTooltip_DeployedMoved">
            <summary>
              Looks up a localized string similar to {0} moved to {1} by {2} {3} ago.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.OrderOfBattle_DeployTooltip_NotDeployed">
            <summary>
              Looks up a localized string similar to {0} is not currently deployed.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.OrderOfBattle_DeployTooltip_NotDeployedRouted">
            <summary>
              Looks up a localized string similar to {0} routed {1} ago.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.OrderOfBattle_DeployTooltip_NotDeployedRoutedFrom">
            <summary>
              Looks up a localized string similar to {0} routed from {1} {2} ago.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.OrderOfBattle_RedeployTooltip_DeployedCanMove">
            <summary>
              Looks up a localized string similar to {0} is available to be moved.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.OrderOfBattle_RedeployTooltip_DeployedCanMoveIn">
            <summary>
              Looks up a localized string similar to {0} can be moved in {1}.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.OrderOfBattle_RedeployTooltip_MovePending">
            <summary>
              Looks up a localized string similar to A request to move to {0} is pending.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.OrderOfBattle_RedeployTooltip_UndeployedCanDeploy">
            <summary>
              Looks up a localized string similar to {0} is available to be deployed.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.OrderOfBattle_RedeployTooltip_UndeployedCanDeployIn">
            <summary>
              Looks up a localized string similar to {0} can be deployed in {1}.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.RecentEvents_Tooltip_FactoryDataNotLoaded">
            <summary>
              Looks up a localized string similar to Factory data not loaded.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.ServerName_Beta">
            <summary>
              Looks up a localized string similar to Beta.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.ServerName_Live">
            <summary>
              Looks up a localized string similar to Live.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.ServerName_Training">
            <summary>
              Looks up a localized string similar to Training.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.ServerStatus_Tooltip_Captures">
            <summary>
              Looks up a localized string similar to Captures over past hour.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.ServerStatus_Tooltip_Kills">
            <summary>
              Looks up a localized string similar to Player kills over past hour.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.ServerStatus_Tooltip_Population">
            <summary>
              Looks up a localized string similar to Current live server player population.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.ServerStatus_Tooltip_TrackingChangesSince">
            <summary>
              Looks up a localized string similar to Tracking changes since {0}.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.ServerStatus_Tooltip_UsedToBe">
            <summary>
              Looks up a localized string similar to Used to be: {0}.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Sleep_TrayIcon_DisableAutoWakeup">
            <summary>
              Looks up a localized string similar to Disable auto-wakeup.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Sleep_TrayIcon_EnableAutoWakeup">
            <summary>
              Looks up a localized string similar to Enable auto-wakeup.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Sleep_TrayIcon_Exit">
            <summary>
              Looks up a localized string similar to Exit.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Sleep_TrayIcon_Tooltip">
            <summary>
              Looks up a localized string similar to {0} (sleeping).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Sleep_TrayIcon_WakeUpNow">
            <summary>
              Looks up a localized string similar to Wake up now.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Time_CapturedMinsAgo">
            <summary>
              Looks up a localized string similar to captured {0} ago.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Time_Day">
            <summary>
              Looks up a localized string similar to day.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Time_Days">
            <summary>
              Looks up a localized string similar to days.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Time_DaysLetter">
            <summary>
              Looks up a localized string similar to d.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Time_ForMins">
            <summary>
              Looks up a localized string similar to for {0}.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Time_GainedMinsAgo">
            <summary>
              Looks up a localized string similar to gained {0} ago.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Time_Hour">
            <summary>
              Looks up a localized string similar to hour.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Time_Hours">
            <summary>
              Looks up a localized string similar to hours.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Time_HoursLetter">
            <summary>
              Looks up a localized string similar to h.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Time_Min">
            <summary>
              Looks up a localized string similar to min.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Time_Mins">
            <summary>
              Looks up a localized string similar to mins.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Time_MinsAgo">
            <summary>
              Looks up a localized string similar to {0} ago.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Time_MinsLetter">
            <summary>
              Looks up a localized string similar to m.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Time_PlacedMinsAgo">
            <summary>
              Looks up a localized string similar to placed {0} ago.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Time_ReceivedMinsAgo">
            <summary>
              Looks up a localized string similar to received {0} ago.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Time_RegainedMinsAgo">
            <summary>
              Looks up a localized string similar to regained {0} ago.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Time_RemovedMinsAgo">
            <summary>
              Looks up a localized string similar to removed {0} ago.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Time_Sec">
            <summary>
              Looks up a localized string similar to sec.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Time_Secs">
            <summary>
              Looks up a localized string similar to secs.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Time_Today">
            <summary>
              Looks up a localized string similar to today.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.Time_Yesterday">
            <summary>
              Looks up a localized string similar to yesterday.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TownStatus_Activity">
            <summary>
              Looks up a localized string similar to Activity:.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TownStatus_AttackObjective">
            <summary>
              Looks up a localized string similar to Attack Objective.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TownStatus_Event">
            <summary>
              Looks up a localized string similar to {0} event.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TownStatus_Events">
            <summary>
              Looks up a localized string similar to {0} events.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TownStatus_HeldFor">
            <summary>
              Looks up a localized string similar to Held for.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TownStatus_NoAttackObjective">
            <summary>
              Looks up a localized string similar to No Attack Objective.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TownStatus_Section_Bridges">
            <summary>
              Looks up a localized string similar to Nearby Bridges.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TownStatus_Section_Facilities">
            <summary>
              Looks up a localized string similar to Facilities.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TownStatus_Section_HCUnits">
            <summary>
              Looks up a localized string similar to Deployed HC Units.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TownStatus_Section_LinkedTowns">
            <summary>
              Looks up a localized string similar to Linked Towns.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TownStatus_Spawn">
            <summary>
              Looks up a localized string similar to Spawn.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TownStatus_Tables">
            <summary>
              Looks up a localized string similar to Capture.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TownStatus_Tooltip_AOPlacedBy">
            <summary>
              Looks up a localized string similar to Placed by OIC of {0}.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TownStatus_Tooltip_CapturedBy">
            <summary>
              Looks up a localized string similar to Captured by {0}.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TownStatus_Tooltip_FirebaseDown">
            <summary>
              Looks up a localized string similar to The {0}-{1} {2} firebase is down ({3}).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TownStatus_Tooltip_FirebaseInactive">
            <summary>
              Looks up a localized string similar to The firebases between {0} and {1} are not currently active.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TownStatus_Tooltip_FirebaseNone">
            <summary>
              Looks up a localized string similar to There are no firebases between {0} and {1}.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TownStatus_Tooltip_FirebaseUp">
            <summary>
              Looks up a localized string similar to The {0}-{1} {2} firebase is up ({3}).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TownStatus_Tooltip_SpawnClosed">
            <summary>
              Looks up a localized string similar to Not currently spawnable.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TownStatus_Tooltip_SpawnEnemy">
            <summary>
              Looks up a localized string similar to Enemy spawnable.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TownStatus_Tooltip_SpawnFriendly">
            <summary>
              Looks up a localized string similar to Friendly spawnable.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TownStatus_Tooltip_SpawnSpawnable">
            <summary>
              Looks up a localized string similar to Enemy spawnable (if capped).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TownStatus_UnderAttackFrom">
            <summary>
              Looks up a localized string similar to Under attack from:.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterCountry_nodeEngland">
            <summary>
              Looks up a localized string similar to England.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterCountry_nodeFrance">
            <summary>
              Looks up a localized string similar to France.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterCountry_nodeGermany">
            <summary>
              Looks up a localized string similar to Germany.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterEventType_nodeAttackObjective">
            <summary>
              Looks up a localized string similar to Attack Objective.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterEventType_nodeAttackObjectivePlaced">
            <summary>
              Looks up a localized string similar to Placed.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterEventType_nodeAttackObjectiveWithdrawn">
            <summary>
              Looks up a localized string similar to Withdrawn.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterEventType_nodeCaptures">
            <summary>
              Looks up a localized string similar to Captures.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterEventType_nodeCapturesChokepoint">
            <summary>
              Looks up a localized string similar to Town.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterEventType_nodeCapturesChokepointCaptured">
            <summary>
              Looks up a localized string similar to Captured.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterEventType_nodeCapturesChokepointContested">
            <summary>
              Looks up a localized string similar to Contested.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterEventType_nodeCapturesChokepointContestedRegained">
            <summary>
              Looks up a localized string similar to Regained.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterEventType_nodeCapturesChokepointContestedUnderAttack">
            <summary>
              Looks up a localized string similar to Under attack.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterEventType_nodeCapturesChokepointControlChanged">
            <summary>
              Looks up a localized string similar to Control changed.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterEventType_nodeCapturesFacility">
            <summary>
              Looks up a localized string similar to Facility.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterEventType_nodeCapturesFacilityCaptured">
            <summary>
              Looks up a localized string similar to Captured.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterEventType_nodeCapturesFacilityRecaptured">
            <summary>
              Looks up a localized string similar to Recaptured.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterEventType_nodeCapturesFacilitySpawnable">
            <summary>
              Looks up a localized string similar to Spawnable Depot.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterEventType_nodeCapturesFacilitySpawnableCaptured">
            <summary>
              Looks up a localized string similar to Captured.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterEventType_nodeCapturesFacilitySpawnableRecaptured">
            <summary>
              Looks up a localized string similar to Recaptured.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterEventType_nodeFactory">
            <summary>
              Looks up a localized string similar to Factory.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterEventType_nodeFactoryHealth">
            <summary>
              Looks up a localized string similar to Health.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterEventType_nodeFactoryHealthDamaged">
            <summary>
              Looks up a localized string similar to Damaged.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterEventType_nodeFactoryHealthDestroyed">
            <summary>
              Looks up a localized string similar to Destroyed.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterEventType_nodeFactoryHealthRepaired">
            <summary>
              Looks up a localized string similar to Repaired.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterEventType_nodeFactoryRdp">
            <summary>
              Looks up a localized string similar to RDP.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterEventType_nodeFactoryRdpHalted">
            <summary>
              Looks up a localized string similar to Halted.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterEventType_nodeFactoryRdpResumed">
            <summary>
              Looks up a localized string similar to Resumed.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterEventType_nodeFirebase">
            <summary>
              Looks up a localized string similar to Firebase.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterEventType_nodeFirebaseAlliedBlown">
            <summary>
              Looks up a localized string similar to Allied fb blown.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterEventType_nodeFirebaseAxisBlown">
            <summary>
              Looks up a localized string similar to Axis fb blown.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterEventType_nodeFirebaseNewBrigade">
            <summary>
              Looks up a localized string similar to New brigade fb.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterEventType_nodeHCUnit">
            <summary>
              Looks up a localized string similar to HC Unit.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterEventType_nodeHCUnitDeployed">
            <summary>
              Looks up a localized string similar to Deployed.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterEventType_nodeHCUnitMoved">
            <summary>
              Looks up a localized string similar to Moved.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterEventType_nodeHCUnitRetreat">
            <summary>
              Looks up a localized string similar to Retreat.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwFilterEventType_nodeHCUnitRouted">
            <summary>
              Looks up a localized string similar to Routed.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwMapOptions_nodeAirfields">
            <summary>
              Looks up a localized string similar to Airfields.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwMapOptions_nodeAirGrid">
            <summary>
              Looks up a localized string similar to Air Grid.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwMapOptions_nodeAttackArrows">
            <summary>
              Looks up a localized string similar to Attack Arrows.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwMapOptions_nodeAttackArrowsLinked">
            <summary>
              Looks up a localized string similar to Only Linked Towns.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwMapOptions_nodeAttackObjectiveNames">
            <summary>
              Looks up a localized string similar to Town Names.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwMapOptions_nodeAttackObjectives">
            <summary>
              Looks up a localized string similar to Attack Objectives.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwMapOptions_nodeBrigadeLinks">
            <summary>
              Looks up a localized string similar to Brigade Links.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwMapOptions_nodeBrigadeLinksArmy">
            <summary>
              Looks up a localized string similar to Only Army Brigades.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwMapOptions_nodeBrigadeLinksSelected">
            <summary>
              Looks up a localized string similar to Only Selected Town.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwMapOptions_nodeCountryBorders">
            <summary>
              Looks up a localized string similar to Country Borders.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwMapOptions_nodeCountryBordersNames">
            <summary>
              Looks up a localized string similar to Names.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwMapOptions_nodeFirebases">
            <summary>
              Looks up a localized string similar to Firebases.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwMapOptions_nodeFrontlines">
            <summary>
              Looks up a localized string similar to Frontlines.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwMapOptions_nodePlayerActivity">
            <summary>
              Looks up a localized string similar to Player Activity.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Language.TreeView_tvwMapOptions_nodeSupplyLinks">
            <summary>
              Looks up a localized string similar to Supply Links.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.Log">
            <summary>
            A static logger class, used for adding log entries throughout the program.
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.Log.logfile">
            <summary>
            File handle to log file, if using WriteToFile.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Log.LogFileName">
            <summary>
            The name of the current log file.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Log.MainThread">
            <summary>
            A reference to the parent Control, used to detect which thread we are in
            (and invoke correct thread if necessary).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Log.FileOpen">
            <summary>
            True if a logfile is currently open.
            </summary>
        </member>
        <member name="E:Xiperware.WiretapAPI.Log.OnNewLogEntry">
            <summary>
            Called when a new log entry is made.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Log.AddEntry(System.String)">
            <summary>
            Add a normal entry to the log.
            </summary>
            <param name="entry">The text of the log entry.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.Log.AddEntry(System.String,System.Object[])">
            <summary>
            Add a normal entry to the log.
            </summary>
            <param name="format">A System.String containing zero or more format items.</param>
            <param name="args">An System.Object array containing zero or more objects to format.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.Log.AddError(System.String)">
            <summary>
            Add an error entry to the log.
            </summary>
            <param name="entry">The text of the log entry.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.Log.AddError(System.String,System.Object[])">
            <summary>
            Add an error entry to the log.
            </summary>
            <param name="format">A System.String containing zero or more format items.</param>
            <param name="args">An System.Object array containing zero or more objects to format.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.Log.AddException(System.Exception)">
            <summary>
            Add an exception error entry to the log.
            </summary>
            <param name="ex">The exception to log.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.Log.Error">
            <summary>
            Add the text "ERROR" to the log, without prepending a newline.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Log.Okay">
            <summary>
            Add the text "OK" to the log, without prepending a newline.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Log.ThreadSafeAddEntry(System.String,System.Boolean)">
            <summary>
            Add a log entry in a thread-safe manner by calling self from main thread if necessary.
            </summary>
            <param name="entry">The text of the log entry.</param>
            <param name="error">True if the text should appear highlighted red.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.Log.WriteToFile(System.String)">
            <summary>
            Initialises a log file writer and returns the delegate to use.
            </summary>
            <param name="filename">The filename to write to (not including path).</param>
            <returns>An AddEntryDelegate that can be added to Log.OnNewLogEntry.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Log.AppendToLogFile(System.String,System.Object[])">
            <summary>
            Append a log entry directly to the log file, without invoking the other AddEntryDelegate's.
            </summary>
            <param name="format">A System.String containing zero or more format items.</param>
            <param name="args">An System.Object array containing zero or more objects to format.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.Log.AppendToLogFile(System.String)">
            <summary>
            Append a log entry directly to the log file, without invoking the other AddEntryDelegate's.
            </summary>
            <param name="entry">The text of the log entry.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.Log.AppendToLogFile(System.String,System.Boolean)">
            <summary>
            The internal AddEntryDelegate used to write to the logfile.
            </summary>
            <param name="entry">The text of the log entry.</param>
            <param name="error">True if the text should appear highlighted red (unused).</param>
        </member>
        <member name="T:Xiperware.WiretapAPI.MapMetrics">
            <summary>
            Encapsulates all the map size and conversion calculations based on a specific map size.
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.MapMetrics.GridMeters">
            <summary>
            The AWS grid dimensions in meters.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.MapMetrics.Pixels">
            <summary>
            The map dimensions in pixels.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.MapMetrics.Meters">
            <summary>
            The map dimensions in meters.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.MapMetrics.ScaleCode">
            <summary>
            The scale code used by this map size.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.MapMetrics.Degrees">
            <summary>
            The map dimensions in degrees.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.MapMetrics.GridPixels">
            <summary>
            The AWS grid dimensions in pixels.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.MapMetrics.#ctor(System.Drawing.Size,System.Drawing.RectangleF,System.Int32)">
            <summary>
            Create a new MapMetrics object.
            </summary>
            <param name="pixels">The size of the map in pixels.</param>
            <param name="meters">The size and location of the map in meters (relative to lat/long 0/0).</param>
            <param name="scaleCode">The map scale size (40, 60, 80, 100).</param>
            <remarks>
            meters.X  + = right, - = left
            meters.Y  + = down , - = up
            </remarks>
        </member>
        <member name="M:Xiperware.WiretapAPI.MapMetrics.OctetToMeters(System.Drawing.Point)">
            <summary>
            Convert game world octet coordinates (800x800m) to game world meters.
            </summary>
            <param name="octets">A Point in game world octets.</param>
            <returns>A Point in game world meters.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.MapMetrics.OctetToMeters(System.Drawing.PointF)">
            <summary>
            Convert game world octet coordinates (800x800m) to game world meters.
            </summary>
            <param name="octets">A Point in game world octets.</param>
            <returns>A Point in game world meters.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.MapMetrics.OctetToMap(System.Drawing.Point)">
            <summary>
            Convert game world octet coordinates (800x800m) to map pixel coordinates.
            </summary>
            <param name="octets">A Point in game world octets.</param>
            <returns>A Point in map pixels.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.MapMetrics.OctetToMap(System.Drawing.PointF)">
            <summary>
            Convert game world octet coordinates (800x800m) to map pixel coordinates.
            </summary>
            <param name="octets">A PointF in game world octets.</param>
            <returns>A Point in map pixels.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.MapMetrics.MetersToMap(System.Drawing.Point)">
            <summary>
            Convert game world meters coordinates to map pixels coordinates.
            </summary>
            <param name="meters">A Point in game world meters.</param>
            <returns>A Point in map pixels.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.MapMetrics.MetersToMap(System.Drawing.SizeF)">
            <summary>
            Convert game world meters coordinates to map pixels coordinates.
            </summary>
            <param name="meters">A SizeF in game world meters.</param>
            <returns>A Size in map pixels.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.MapMetrics.MetersToMap(System.Drawing.Rectangle)">
            <summary>
            Convert game world meters coordinates to map pixels coordinates.
            </summary>
            <param name="meters">A Rectangle in game world meters.</param>
            <returns>A Rectangle in map pixels.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.MapMetrics.MetersToMapF(System.Drawing.PointF)">
            <summary>
            Convert game world meters coordinates to map pixels coordinates.
            </summary>
            <param name="meters">A Point in game world meters.</param>
            <returns>A PointF in map pixels.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.MapMetrics.MetersToMapF(System.Drawing.SizeF)">
            <summary>
            Convert game world meters coordinates to map pixels coordinates.
            </summary>
            <param name="meters">A SizeF in game world meters.</param>
            <returns>A SizeF in map pixels.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.MapMetrics.MetersToMapF(System.Drawing.RectangleF)">
            <summary>
            Convert game world meters coordinates to map pixels coordinates.
            </summary>
            <param name="meters">A Rectangle in game world meters.</param>
            <returns>A Rectangle in map pixels.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.MapMetrics.MapToMeters(System.Drawing.Point)">
            <summary>
            Convert map pixels coordinates to game world meters coordinates.
            </summary>
            <param name="map">A Point in map pixels.</param>
            <returns>A Point in game world meters.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.MapMetrics.MapToCell(System.Drawing.Point)">
            <summary>
            Convert map pixels coordinates to AWS grid-style cell reference.
            </summary>
            <param name="map">A Point in map pixels.</param>
            <returns>Cell name, eg "AG13"</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.MapMetrics.MapToLatLong(System.Drawing.Point)">
            <summary>
            Convert map pixels coordinates to lat/long coordinate string.
            </summary>
            <param name="map">A Point in map pixels.</param>
            <returns>A formatted Lat/Long string.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.MapMetrics.OctetToDecimalLatLong(System.Drawing.Point,System.Double@,System.Double@)">
            <summary>
            Convert game world octet coordinates to decimal lat/long coordinates.
            </summary>
            <param name="octets">A Point in game world octets.</param>
            <param name="x">The decimal latitude.</param>
            <param name="y">The decimal longitude.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.MapMetrics.DecimalLatLongToMap(System.Drawing.PointF)">
            <summary>
            Convert decimal lat/long coordinates to map pixels.
            </summary>
            <param name="degrees">A PointF in decimal degrees.</param>
            <returns>A Point in map pixels.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.MapMetrics.MapScaleUp(System.Single)">
            <summary>
            Scales a number up based on the size of the loaded map.
            </summary>
            <param name="value40">The value to use at 40%.</param>
            <returns>The value to use at the current map size.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.MapMetrics.MapScaleUp(System.Single,System.Single)">
            <summary>
            Scales a number up based on the size of the loaded map.
            </summary>
            <param name="value40">The value to use at 40%.</param>
            <param name="value100">The value to use at 100%.</param>
            <returns>The value to use at the current map size.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.MapMetrics.MapScaleUp(System.Drawing.Size,System.Single,System.Single)">
            <summary>
            Scales a rectangle up based on the size of the loaded map.
            </summary>
            <param name="size">The original size of the rectangle.</param>
            <param name="w40">The width to use at 40%.</param>
            <param name="w100">The width to use at 100%.</param>
            <returns>The rectangle to use at the current map size.</returns>
        </member>
        <member name="T:Xiperware.WiretapAPI.RectangleGrid">
            <summary>
            Stores the bounds, cell size and cell count of a grid.
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.RectangleGrid.Cell">
            <summary>
            The size of a cell.
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.RectangleGrid.Bounds">
            <summary>
            The location and size of the grid.
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.RectangleGrid.CellCount">
            <summary>
            The number of rows and columns.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.RectangleGrid.#ctor(System.Drawing.SizeF,System.Drawing.RectangleF,System.Drawing.Point)">
            <summary>
            Create a new RectangleGrid.
            </summary>
            <param name="cell"></param>
            <param name="bounds"></param>
            <param name="cellCount"></param>
        </member>
        <member name="M:Xiperware.WiretapAPI.RectangleGrid.#ctor(System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32)">
            <summary>
            Create a new RectangleGrid.
            </summary>
            <param name="x">The grid x coord of the top left corner.</param>
            <param name="y">The grid y coord of the top left corner.</param>
            <param name="width">The grid cell width.</param>
            <param name="height">The grid cell height.</param>
            <param name="cols">The number of columns in the grid.</param>
            <param name="rows">The number of rows in the grid.</param>
        </member>
        <member name="T:Xiperware.WiretapAPI.MultiExceptionHandler">
            <summary>
            Utility class for catching multiple exceptions and throwing the first.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.MultiExceptionHandler.Add(System.Exception)">
            <summary>
            Add a new exception to the collection.
            </summary>
            <param name="ex">The exception to add.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.MultiExceptionHandler.Throw">
            <summary>
            If any exceptions have occurred, throw the first.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.InvalidAttributeException">
            <summary>
            An exception thrown when an attribute has an invalid value.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.DuplicateAttributeException">
            <summary>
            An exception thrown when an attribute has a duplicate value.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.Misc">
            <summary>
            Miscellaneous static methods used throughout the library.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.GetFadedYellow(System.DateTime,System.Int32,System.Int32)">
            <summary>
            Generates a colour between white and yellow based on date where DateTime.Now is
            yellow, fading out to white after maxMinutes old.
            </summary>
            <param name="date">The reference DateTime.</param>
            <param name="maxMinutes">The age in minutes at which the colour fully fades to white.</param>
            <param name="white">The colour white to use.</param>
            <returns>The resulting Color.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.BlendColour(System.Drawing.Color,System.Drawing.Color,System.Single)">
            <summary>
            Blend two colours together. 
            </summary>
            <param name="c1">The first colour.</param>
            <param name="c2">The second colour.</param>
            <param name="percent">The percentage of the second colour to mix with the first
            (0.0 = all first colour, 1.0 = all second colour).</param>
            <returns>A combination of the given colours according to percent.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.AdjustBrightness(System.Drawing.Bitmap,System.Int32)">
            <summary>
            Applies a basic brightness filter to the given image while preserving the alpha channel.
            </summary>
            <param name="image">The image to adjust.</param>
            <param name="brightness">-255 - 255</param>
            <returns>The new modified image with the brightness adjusted.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.ParseTimestamp(System.String)">
            <summary>
            Parse a timestamp in unix seconds format.
            </summary>
            <param name="epochSeconds">Seconds since epoch.</param>
            <returns>A DateTime in UTC.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.ParseTimestamp(System.Int32)">
            <summary>
            Parse a timestamp in unix seconds format.
            </summary>
            <param name="epochSeconds">Seconds since epoch.</param>
            <returns>A DateTime in UTC.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.DateToSeconds(System.DateTime)">
            <summary>
            Convert a DateTime to epoch seconds.
            </summary>
            <param name="date">The reference DateTime.</param>
            <returns>Seconds since epoch.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.Timestamp(System.DateTime)">
            <summary>
            Format a DateTime into a simple 12 or 24 hour timestamp.
            </summary>
            <param name="date">The reference DateTime.</param>
            <returns>A string in the format "[hh:mm]".</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.FormatDateLong(System.DateTime)">
            <summary>
            Formats a date into a user-friendly string.
            </summary>
            <param name="date">The reference DateTime.</param>
            <returns>A string in the format "(today|yesterday|wed, 1 may), hh:mm [am|pm]".</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.MinsAgoShort(System.DateTime)">
            <summary>
            Generate a string based on how old a date is (short format).
            </summary>
            <param name="date">The DateTime in the past to calculate mins since.</param>
            <returns>A string in the format "XdXh" or "XhXm" or "X mins".</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.MinsAgoShort(System.DateTime,System.DateTime)">
            <summary>
            Generate a string based on how old a date is (short format).
            </summary>
            <param name="date">The DateTime in the past to calculate mins since.</param>
            <param name="reference">The reference DateTime (default Now).</param>
            <returns>A string in the format "XdXh" or "XhXm" or "X mins".</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.MinsAgoLong(System.DateTime)">
            <summary>
            Generate a string based on how old a date is (long format).
            </summary>
            <param name="date">The DateTime in the past to calculate mins since.</param>
            <returns>A string in the format "x days, x hours, x mins" or "x hours, x mins" or "x mins".</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.MinsUntilShort(System.DateTime)">
            <summary>
            Generate a string based on how long until a date is.
            </summary>
            <param name="date">The DateTime in the past to calculate mins until.</param>
            <returns>A string in the format "XdXhXm" or "XhXm".</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.MinsUntilLong(System.DateTime)">
            <summary>
            Generate a string based on how long until a date is.
            </summary>
            <param name="date">The DateTime in the past to calculate mins until.</param>
            <returns>A string in the format "x days, x hours, x mins" or "x hours, x mins" or "x mins".</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.DistanceBetween(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Calculate the distance between two 2D points.
            </summary>
            <param name="pt1">The first coordinate.</param>
            <param name="pt2">The second coordinate.</param>
            <returns>The distance in a straight line.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.AngleBetween(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Returns the angle of the vector (pt1,pt2) relative to 12oclock.
            </summary>
            <remarks>N = 0, E = 90, S = 180, W = 270</remarks>
            <param name="pt1">The first (center) point.</param>
            <param name="pt2">The second (outer) point.</param>
            <returns>The angle in degrees.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.AngleBetween(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Returns the angle made by the three points.
            </summary>
            <param name="pt1">The first point.</param>
            <param name="pt2">The middle point.</param>
            <param name="pt3">The last point.</param>
            <returns>The angle in degrees.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.AngleOffset(System.Drawing.Point,System.Double,System.Double)">
            <summary>
            Calculate a new Point given a starting point, and an angle &amp; distance to travel.
            </summary>
            <param name="start">The starting point.</param>
            <param name="angle">The angle to travel (in degrees relative to 12oclock).</param>
            <param name="distance">The distance to travel.</param>
            <returns>The destination Point.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.AngleOffset(System.Drawing.PointF,System.Double,System.Double)">
            <summary>
            Calculate a new Point given a starting point, and an angle &amp; distance to travel.
            </summary>
            <param name="start">The starting point.</param>
            <param name="angle">The angle to travel (in degrees relative to 12oclock).</param>
            <param name="distance">The distance to travel.</param>
            <returns>The destination Point.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.MidPoint(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Returns a point between the given two Points.
            </summary>
            <param name="pt1">The first point.</param>
            <param name="pt2">The second point.</param>
            <returns>The 50% midpoint.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.MidPoint(System.Drawing.PointF,System.Drawing.PointF,System.Single)">
            <summary>
            Returns a point between the given two Points.
            </summary>
            <param name="pt1">The first point.</param>
            <param name="pt2">The second point.</param>
            <param name="percent">The percent distance between the two points.</param>
            <returns>The midpoint according to percent.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.LineIntersect(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Tests whether two finite line segments intersect.
            </summary>
            <param name="ptLine1a">The start point of the first line.</param>
            <param name="ptLine1b">The end point of the first line.</param>
            <param name="ptLine2a">The start point of the second line.</param>
            <param name="ptLine2b">The end point of the second line.</param>
            <returns>True if the lines touch or cross.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.IsPointWithinPoly(System.Drawing.Point,System.Drawing.Point[])">
            <summary>
            Tests whether a Point lies within an irregular polygon.
            </summary>
            <param name="ptTest">The point to test.</param>
            <param name="poly">A list of Points that make up the polygon.</param>
            <returns>True if the point is inside.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.VersionToString(System.Version)">
            <summary>
            Custom stringification of a Version object.
            </summary>
            <param name="version">The reference Version</param>
            <returns>eg, "v1.2" (no trailing zeros)</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.ParseToType``1(System.String)">
            <summary>
            Generic method to parse a string into a supported type.
            </summary>
            <typeparam name="T">The type to parse to.</typeparam>
            <param name="value">The string to parse.</param>
            <returns>A value in the specific type, or an exception.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.ParseBool(System.String)">
            <summary>
            Parse a boolean string using perl/tcl-ish boolean rules.
            </summary>
            <param name="value">The value to parse.</param>
            <returns>True/False/Exception</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.ParsePoint(System.String)">
            <summary>
            Parse a '-123x456' string into a Point.
            </summary>
            <param name="value">The value to parse.</param>
            <returns>A new Point, or Exception</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.SubstringBefore(System.String,System.String)">
            <summary>
            Get the substring before a separator character.
            </summary>
            <param name="value">The string to parse.</param>
            <param name="separator">The split char or string.</param>
            <returns>The string before the specified separator, or the original string if it is not present.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.SubstringAfter(System.String,System.String)">
            <summary>
            Get the substring after a separator character.
            </summary>
            <param name="value">The string to parse.</param>
            <param name="separator">The split char or string.</param>
            <returns>The string after the specified separator, or null if it is not present.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.GetFlags``1(System.Enum)">
            <summary>
            Gets all flags contained in the specified Enum value.
            </summary>
            <typeparam name="T">The Enum type (must have [Flags] attribute).</typeparam>
            <param name="value">The Enum value (may include several bitwise-or flags).</param>
            <returns>A lazy collection of individual Enum flag values.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.EnumString(System.Enum)">
            <summary>
            Get the localised name of the enum value.
            </summary>
            <param name="e">The enum value.</param>
            <returns>A localised string for the given value.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.EnumString(Xiperware.WiretapAPI.Side)">
            <summary>
            Get the localised name of the Side value, with MString support.
            </summary>
            <param name="e">The enum value.</param>
            <returns>A localised string for the given value.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.OtherSide(Xiperware.WiretapAPI.Side)">
            <summary>
            Get the opposite side.
            </summary>
            <param name="side">A side.</param>
            <returns>Axis or Allied.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.AreFriendly(Xiperware.WiretapAPI.Country,Xiperware.WiretapAPI.Country)">
            <summary>
            Gets whether the two countries are on friendly terms.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.AreEnemy(Xiperware.WiretapAPI.Country,Xiperware.WiretapAPI.Country)">
            <summary>
            Gets whether the two countries are enemies.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.AreFriendly(Xiperware.WiretapAPI.Side,Xiperware.WiretapAPI.Country)">
            <summary>
            Gets whether a country is friendly to a side.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.AreEnemy(Xiperware.WiretapAPI.Side,Xiperware.WiretapAPI.Country)">
            <summary>
            Gets whether a country is enemy of a side.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.Misc.ClockSkew">
            <summary>
            As some game events are generated when data changes (eg, AO's), their event time
            is based on the users local clock (DateTime.Now). Because most other events are
            based on the times sent from Wiretap, this introduces clock skew issues if the two
            are out of sync.
            We work around this by calculating an approximate offset, accurate to near 1 minute,
            and apply this to Wiretaps time to convert everything to the users view of the
            time.
            This is done based on the fact that, when polling for new captures every minute,
            any new capture times must have occurred in the past minute. We narrow this down
            over time to get the latest capture time in that 1 minute time window.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.ClockSkew.Reset">
            <summary>
            Reset internal data and start calculations again from the beginning.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.ClockSkew.AddDataPoint(System.DateTime)">
            <summary>
            Add a reference date/time data point to further refine the clock skew calculation.
            </summary>
            <param name="date">A UTC timestamp from Wiretap that is known to be less than a minute old.</param>
            <returns>True if clock skew has been updated.</returns>
        </member>
        <member name="T:Xiperware.WiretapAPI.Misc.LatLongFormatter">
            <summary>
            A FormatProvider that formats a decimal degrees value into degrees, minutes, seconds.
            Format should be X for longitude (E/W) or Y for latitude (N/S).
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.Misc.MString">
            <summary>
            A collection of strings with custom format string support.
            </summary>
            <remarks>
            Sometimes when translating there can be multiple forms of the same word, which
            are treated differently between languages. This class provides a way for several
            versions to be supplied. One of these versions can then be specified via the
            format string:
            
            MString demonym = new MString( "german,germans" );
            String.Format( "... has been captured {0:v1}.", demonym );
            String.Format( "... has been captured by the {0:v2}.", demonym );
            </remarks>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.MString.#ctor(System.String)">
            <summary>
            Create a new MString list.
            </summary>
            <param name="values">A comma sperated list of values (no spaces).</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.Misc.MString.Item(System.Int32)">
            <summary>
            Indexer to get a specific value from the string collection.
            </summary>
            <param name="num">The version to get (first index = [1])</param>
            <returns>The specified value if it exists, otherwise the first.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.MString.op_Implicit(Xiperware.WiretapAPI.Misc.MString)~System.String">
            <summary>
            Support for implicit conversion to String.
            </summary>
            <returns>The default value.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.MString.ToString">
            <summary>
            Provides a string representation of this object.
            </summary>
            <returns>The default value.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Misc.MString.ToString(System.String,System.IFormatProvider)">
            <summary>
            Provides a string representation of this object.
            </summary>
            <returns>The value specified by the given format.</returns>
        </member>
        <member name="T:Xiperware.WiretapAPI.Etensions">
            <summary>
            A collection of extension methods.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Etensions.NotNull``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Filters a sequence of values to exclude nulls.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.SymmetricHash`2">
            <summary>
            A generic two-dimensional hash with symmetrical keys (eg, hash[1,2] == hash[2,1]).
            </summary>
            <typeparam name="TKey">The type of both keys.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="M:Xiperware.WiretapAPI.SymmetricHash`2.#ctor">
            <summary>
            Create a new SymmetricHash.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.SymmetricHash`2.Add(`0,`0,`1)">
            <summary>
            Add or replace an element in the hash.
            </summary>
            <param name="key1">The first key.</param>
            <param name="key2">The second key.</param>
            <param name="value">The value to store.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.SymmetricHash`2.Get(`0,`0)">
            <summary>
            Gets an element in the hash.
            </summary>
            <param name="key1">The first key.</param>
            <param name="key2">The second key.</param>
            <returns>The stored value, or a IndexOutOfRangeException.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.SymmetricHash`2.Clear">
            <summary>
            Clear all elements from the hash.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.SymmetricHash`2.Item(`0,`0)">
            <summary>
            Gets or adds an element in the hash.
            </summary>
            <param name="key1">The first key.</param>
            <param name="key2">The second key.</param>
            <returns>The stored value, or a IndexOutOfRangeException.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.SymmetricHash`2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through all values in the hash.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.SymmetricHash`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through all values in the hash.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:Xiperware.WiretapAPI.NotifyObject">
            <summary>
            An object that supports notifying when a property has changed.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.NotifyObject.VerifyPropertyName(System.String)">
            <summary>
            Warns the developer if this object does not have
            a public property with the specified name. This 
            method does not exist in a Release build.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.NotifyObject.ThrowOnInvalidPropertyName">
            <summary>
            Returns whether an exception is thrown, or if a Debug.Fail() is used
            when an invalid property name is passed to the VerifyPropertyName method.
            The default value is false, but subclasses used by unit tests might 
            override this property's getter to return true.
            </summary>
        </member>
        <member name="E:Xiperware.WiretapAPI.NotifyObject.PropertyChanged">
            <summary>
            Raised when a property on this object has a new value.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.NotifyObject.OnPropertyChanged(System.String)">
            <summary>
            Raises this object's PropertyChanged event.
            </summary>
            <param name="propertyName">The property that has a new value.</param>
        </member>
        <member name="T:Xiperware.WiretapAPI.NetManager">
            <summary>
            The NetManager class handles all network operations, proxy authentication, timeouts,
            automatic retry on error, statistic tracking, etc
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.NetManager.#ctor">
            <summary>
            Create a new NetManager object.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.NetManager.BytesDownloaded">
            <summary>
            Approximate number of bytes downloaded this session.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.NetManager.WebRequestFunction">
            <summary>
            A generic delegate to encapsulate a web request.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.NetManager.LoadSettings(Xiperware.WiretapAPI.NetworkSettings)">
            <summary>
            Apply the given network settings for use from now on.
            </summary>
            <remarks>Throws an exception if any settings are invalid.</remarks>
            <param name="settings">The NetworkSettings to use.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.NetManager.CurrentSettings">
            <summary>
            Creates a new NetworkSettings objects from the currently used settings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.NetManager.DownloadMetaFile(Xiperware.WiretapAPI.MetaXmlFile)">
            <summary>
            Download a meta xmlfile to a local cache.
            </summary>
            <param name="metafile">The MetaXmlFile to download.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.NetManager.WebRequest_DownloadMetaFile(System.Object)">
            <summary>
            The WebRequestFunction used by DownloadMetaFile().
            </summary>
            <param name="arg">MetaXmlFile</param>
            <returns>null</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.NetManager.GetXmlDocument(Xiperware.WiretapAPI.XmlFile)">
            <summary>
            Download and parse an xmlfile into memory and return it.
            </summary>
            <param name="xmlfile">The InitXmlFile or PollXmlFile to download.</param>
            <returns>The parsed XmlDocument structure.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.NetManager.DownloadString(System.Uri)">
            <summary>
            Download a uri and return it as a string.
            </summary>
            <param name="uri">The Uri to download.</param>
            <returns>The response body.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.NetManager.WebRequest_DownloadString(System.Object)">
            <summary>
            A WebRequestFunction used to download a Uri to a string.
            </summary>
            <param name="arg">Uri</param>
            <returns>string</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.NetManager.GetLastModified(Xiperware.WiretapAPI.XmlFile)">
            <summary>
            Gets the date the meta xmlfile was last modified on the server.
            </summary>
            <param name="xmlfile">The XmlFile to check.</param>
            <returns>A DateTime object.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.NetManager.GetHeaders(Xiperware.WiretapAPI.XmlFile)">
            <summary>
            Performs a HEAD request to get the response headers for a meta xmlfile.
            </summary>
            <param name="xmlfile">The XmlFile to check.</param>
            <returns>A collection of web headers, can be indexed by the HttpResponseHeader enum.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.NetManager.WebRequest_GetHeaders(System.Object)">
            <summary>
            The WebRequestFunction used by GetHeaders().
            </summary>
            <param name="arg">MetaXmlFile</param>
            <returns>WebHeaderCollection</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.NetManager.TestConnection(Xiperware.WiretapAPI.NetworkSettings)">
            <summary>
            Uses the supplied network settings to perform a HEAD request on the wiretap server
            home page. Doesn't affect the currently applied network settings.
            </summary>
            <param name="settings">The NetworkSettings to test.</param>
            <returns>The error message if any setting or network error occurs, or String.Empty on success.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.NetManager.WebRequest_TestConnection(System.Object)">
            <summary>
            The WebRequestFunction used by TestConnection().
            </summary>
            <param name="arg">null</param>
            <returns>null</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.NetManager.PerformWebRequest(Xiperware.WiretapAPI.NetManager.WebRequestFunction,System.Object)">
            <summary>
            Performs the given WebRequestFunction, retrying if an error occurs, and handling
            proxy authentication.
            </summary>
            <param name="func">The WebRequestFunction to execute.</param>
            <param name="arg">The WebRequestFunction argument.</param>
            <returns>The WebRequestFunction return value.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.NetManager.ProxyAuthHandler(Xiperware.WiretapAPI.NetManager.WebRequestFunction,System.Object,System.Object@,System.Net.WebException@)">
            <summary>
            If proxy auth is required then the proxy password is retrieved from saved credentials
            or requested from the user. This is repeated until the WebRequestFunction succeeds
            (upon which the credentials are saved), or the user cancels.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.NetManager.IsProxyAuthRequired(Xiperware.WiretapAPI.NetManager.WebRequestFunction,System.Object,System.Object@,System.Net.WebException@)">
            <summary>
            Performs the actual WebRequestFunction and returns whether or not we require proxy auth.
            </summary>
            <returns>True if we received HTTP 407: Proxy Authentication Required.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.NetManager.GetProxyCredentials(System.String)">
            <summary>
            Prompt the user for Proxy Credentials.
            </summary>
            <param name="message">The message to display to the user, usually containing the proxy realm.</param>
            <returns>A new NetworkCredential object with the values the user entered, or null if cancelled.</returns>
        </member>
        <member name="T:Xiperware.WiretapAPI.MyWebClient">
            <summary>
            A custom WebClient with shorter timeouts, no cache, and compression support.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.MyWebClient.ServerVersion">
            <summary>
            The current server time (as at the last web request).
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.MyWebClient.GetWebRequest(System.Uri)">
            <summary>
            Get the WebRequest object to use for this WebClient.
            </summary>
            <param name="address">A Uri for the address to request.</param>
            <returns>A new WebRequest object for the given address.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.MyWebClient.CreateWebRequest(System.Uri)">
            <summary>
            Create a new HttpWebRequest object.
            </summary>
            <remarks>Also used directly by GetHeaders() and TestConnection().</remarks>
            <param name="address">A Uri for the address to request.</param>
            <returns>A new HttpWebRequest object for the given address.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.MyWebClient.GetWebResponse(System.Net.WebRequest)">
            <summary>
            Returns the WebResponse for the specified WebRequest.
            </summary>
            <param name="request">A WebRequest that is used to obtain the response.</param>
            <returns>A WebResponse containing the response for the specified WebRequest.</returns>
        </member>
        <member name="T:Xiperware.WiretapAPI.NetworkException">
            <summary>
            A custom exception that indicates a network error has occurred during an NetManager 
            operation.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.NetworkException.#ctor(System.String,System.Exception)">
            <summary>
            Create a new NetworkException.
            </summary>
            <param name="message">The general error message.</param>
            <param name="inner">The actual exception that caused this one to be thrown.</param>
        </member>
        <member name="T:Xiperware.WiretapAPI.NetworkSettings">
            <summary>
            Contains network-related settings.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.NetworkSettings.#ctor">
            <summary>
            Create a new NetworkSettings object with default values.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.NetworkSettings.#ctor(System.String,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Create a new NetworkSettings object with the given values.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.NetworkSettings.WiretapPortInt">
            <summary>
            The Wiretap server port number, as an int (default 80).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.NetworkSettings.ProxyPortInt">
            <summary>
            The custom proxy port number, as an int (default 8080).
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.border_belgium">
             <summary>
               Looks up a localized string similar to Belgium
            1
                 0.4840000E+01     0.5069000E+02
                 0.5477649E+01     0.4949361E+02
                 0.5467231E+01     0.4950081E+02
                 0.5464556E+01     0.4950832E+02
                 0.5437978E+01     0.4951804E+02
                 0.5443867E+01     0.4952040E+02
                 0.5451906E+01     0.4952119E+02
                 0.5461178E+01     0.4952770E+02
                 0.5469846E+01     0.4953101E+02
                 0.5469151E+01     0.4953625E+02
                 0.5459969E+01     0.4954389E+02
                 0.5444859E+01     0.4955016E+02
                 0.5456327E+01     0.4956519E+02
                 0 [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.border_france">
             <summary>
               Looks up a localized string similar to France
            42
                 0.3480000E+01     0.4981000E+02
                 0.2546947E+01     0.5109281E+02
                 0.2554190E+01     0.5108006E+02
                 0.2554190E+01     0.5108006E+02
                 0.2562225E+01     0.5106775E+02
                 0.2574418E+01     0.5102285E+02
                 0.2570873E+01     0.5101425E+02
                 0.2577935E+01     0.5100077E+02
                 0.2586647E+01     0.5099674E+02
                 0.2608061E+01     0.5099249E+02
                 0.2610502E+01     0.5098960E+02
                 0.2609269E+01     0.5098338E+02
                 0.2614596E+01     0.5097281E+02
                 0 [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.border_germany">
             <summary>
               Looks up a localized string similar to Germany
            49
                 0.7400000E+01     0.5078000E+02
                 0.8020221E+01     0.4876530E+02
                 0.8023747E+01     0.4876847E+02
                 0.8029333E+01     0.4878531E+02
                 0.8036753E+01     0.4879231E+02
                 0.8041635E+01     0.4879432E+02
                 0.8049239E+01     0.4879469E+02
                 0.8060232E+01     0.4879251E+02
                 0.8067849E+01     0.4879334E+02
                 0.8077945E+01     0.4879665E+02
                 0.8090241E+01     0.4880497E+02
                 0.8100858E+01     0.4881490E+02
                 0.8108732E+01     0.4882555E+02
                  [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.border_luxembourg">
             <summary>
               Looks up a localized string similar to Luxembourg
            1
                 0.6163000E+01     0.4981000E+02
                 0.5967428E+01     0.5015868E+02
                 0.5964563E+01     0.5015981E+02
                 0.5962637E+01     0.5017207E+02
                 0.5974896E+01     0.5017703E+02
                 0.5996220E+01     0.5017719E+02
                 0.6020256E+01     0.5018468E+02
                 0.6025583E+01     0.5018495E+02
                 0.6029886E+01     0.5018293E+02
                 0.6032246E+01     0.5017014E+02
                 0.6037641E+01     0.5016652E+02
                 0.6055127E+01     0.5016230E+02
                 0.6062666E+01     0.5015778E+02
                [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.border_netherlands">
             <summary>
               Looks up a localized string similar to Netherlands
            13
                 0.5020000E+01     0.5200000E+02
                 0.7185874E+01     0.5294425E+02
                 0.7165218E+01     0.5292334E+02
                 0.7115944E+01     0.5287334E+02
                 0.7089423E+01     0.5285077E+02
                 0.7094264E+01     0.5283956E+02
                 0.7076054E+01     0.5281536E+02
                 0.7075584E+01     0.5281382E+02
                 0.7071462E+01     0.5280029E+02
                 0.7073296E+01     0.5279023E+02
                 0.7070054E+01     0.5274131E+02
                 0.7062733E+01     0.5268870E+02
                 0.7056458E+01     0.5264350E+02
              [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.border_uk">
             <summary>
               Looks up a localized string similar to England
            1
                 0.0200000E+01     0.5115000E+02
            .
             </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.contested">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_ao_placed">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_ao_placed_small">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_ao_withdrawn">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_ao_withdrawn_small">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_chokepointcapture_british">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_chokepointcapture_french">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_chokepointcapture_german">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_chokepointcapture_usa">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_controlchanged">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_controlchanged_british">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_controlchanged_french">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_controlchanged_german">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_controlchanged_usa">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_facilitycapture_british">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_facilitycapture_french">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_facilitycapture_german">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_facilitycapture_usa">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_factory_damaged">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_factory_destroyed">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_factory_healthy">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_factory_rdpoff">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_factory_rdpon">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_firebase_blown">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_hcunit_deployed_british">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_hcunit_deployed_french">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_hcunit_deployed_german">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_hcunit_deployed_usa">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_hcunit_moved_british">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_hcunit_moved_french">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_hcunit_moved_german">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_hcunit_moved_usa">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_hcunit_routed_british">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_hcunit_routed_french">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_hcunit_routed_german">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_hcunit_routed_usa">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_regained">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_regained_british">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_regained_french">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_regained_german">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_regained_usa">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_spawnablecapture">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_spawnablecapture_british">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_spawnablecapture_french">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_spawnablecapture_german">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_spawnablecapture_usa">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_underattack">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_underattack_british">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_underattack_french">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_underattack_german">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.event_underattack_usa">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.facility_airbase">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.facility_armybase">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.facility_city">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.facility_depot">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.facility_factory">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.facility_firebase">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.facility_navalbase">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.flag_brigade_british">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.flag_brigade_french">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.flag_brigade_german">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.flag_brigade_usa">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.flag_country_british">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.flag_country_french">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.flag_country_german">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.flag_country_nf">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.flag_country_nh">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.flag_country_usa">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.ledgraph0">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.ledgraph1">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.ledgraph2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.ledgraph3">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.ledgraph4">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.ranklist">
             <summary>
               Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
            &lt;!-- Downloaded from http://ww2.kfs.org/ranklist.xml at Wed May 14 15:26:35 2008 --&gt;
            &lt;ranklist version=&quot;1.1&quot;&gt;
            	&lt;rank level=&quot;1&quot; type=&quot;enlisted&quot;&gt;
            		&lt;british country=&quot;1&quot;&gt;
            			&lt;ground branch=&quot;1&quot;&gt;Recruit&lt;/ground&gt;
            			&lt;air branch=&quot;2&quot;&gt;Aircraftsman&lt;/air&gt;
            			&lt;navy branch=&quot;3&quot;&gt;Recruit&lt;/navy&gt;
            		&lt;/british&gt;
            		&lt;french country=&quot;3&quot;&gt;
            			&lt;ground branch=&quot;1&quot;&gt;Recrue&lt;/ground&gt;
            			&lt;air branch=&quot;2&quot;&gt;Aviateur&lt;/air&gt;
            			&lt;navy branch=&quot;3&quot;&gt;Matelot&lt;/navy&gt;
            		&lt;/french&gt;
            		&lt;german country=&quot;4&quot;&gt;
            			&lt;ground branch [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Properties.Resources.spawnable">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.Metadata">
            <summary>
            Data from Wiretap that changes infrequently and can be cached.
            </summary>
            <remarks>When subscribed will create MetaXmlFile objects.</remarks>
        </member>
        <member name="F:Xiperware.WiretapAPI.Metadata.None">
            <summary>
            No subscribed meta data.
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.Metadata.MapChokePoint">
            <summary>
            Chokepoint metadata (/xml/cplist.xml).
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.Metadata.MapFacility">
            <summary>
            Facility metadata (/xml/facilitylist.xml).
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.Metadata.MapLinks">
            <summary>
            Link metadata (/xml/links.xml).
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.Metadata.Map">
            <summary>
            All map metadata (cps, facilities, links).
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.Metadata.VehicleCategory">
            <summary>
            Vehicle category metadata (/xml/vehcat.xml).
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.Metadata.VehicleClass">
            <summary>
            Vehicle class metadata (/xml/vehclass.xml).
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.Metadata.VehicleInfo">
            <summary>
            Vehicle info metadata (/xml/vehicles.xml).
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.Metadata.Vehicle">
            <summary>
            All vehicle metadata (category, class, info).
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.Metadata.ToesInfo">
            <summary>
            Toe info metadata (/xml/toes.list.xml).
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.Metadata.ToesContent">
            <summary>
            Toe content metadata (/xml/toes.sheet.xml).
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.Metadata.Toes">
            <summary>
            All toe metadata (info, content).
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.Metadata.HCUnitList">
            <summary>
            HCUnit info metadata (/xml/hcunitlist.xml).
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.Metadata.HCUnitMoveResults">
            <summary>
            HCUnit move results metadata (/xml/moveresults.xml).
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.Metadata.HCUnit">
            <summary>
            All hcunit metadata (info, move results).
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.Metadata.Squad">
            <summary>
            Squad info metadata (/xml/squadlist.xml).
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.Metadata.Config">
            <summary>
            Server config metadata (/xml/config.xml).
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.Metadata.All">
            <summary>
            All available meta data.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.Livedata">
            <summary>
            Data from Wiretap that changes frequently and needs to be kept up-to-date.
            </summary>
            <remarks>When subscribed will create InitXmlFile and PollXmlFile objects.</remarks>
        </member>
        <member name="F:Xiperware.WiretapAPI.Livedata.None">
            <summary>
            No subscribed live data.
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.Livedata.ChokePoint">
            <summary>
            Current CP owners and AO state (/xmlquery/cps.xml).
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.Livedata.Capture">
            <summary>
            Past and future flag captures and AO changes (/xmlquery/captures.xml, /xmlquery/cps.xml?aos=true).
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.Livedata.HCUnit">
            <summary>
            Current HCUnit deployments (/xmlquery/hclocationsext.xml).
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.Livedata.Movement">
            <summary>
            Past and future brigade movements and requests (/xmlquery/hcmovereq.xml, /xmlquery/hcmoves.xml).
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.Livedata.Firebase">
            <summary>
            Current and future fb ownerships (/xml/openfbs.xml).
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.Livedata.Deathmap">
            <summary>
            Past and future player deaths (/xml/deathmap.1h.xml, /xml/deathmap.5m.xml, /xml/deathmap.1m.xml).
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.Livedata.Servers">
            <summary>
            Current and future server status (/xml/servers.xml).
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.Livedata.Factory">
            <summary>
            Past and future factory and rdp data (/xml/factorystats.xml, /xmlquery/factorylog.xml, /xml/rdp.xml).
            </summary>
        </member>
        <member name="F:Xiperware.WiretapAPI.Livedata.All">
            <summary>
            All available live data.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.Wiretap">
            <summary>
            The Wiretap class is used to populate a GameState by downloading xml data from Wiretap,
            a service provided (currently unofficially) by CRS.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.#ctor">
            <summary>
            Create a new Wiretap object.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.#ctor(Xiperware.WiretapAPI.NetManager)">
            <summary>
            Create a new Wiretap object with the given NetManager.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Wiretap.Net">
            <summary>
            The current NetManager object being used for web access. 
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Wiretap.GameState">
            <summary>
            The current GameState object being used to store data, if any.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Wiretap.CachePath">
            <summary>
            The local filesystem path where xml files are cached.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Wiretap.NewCaptureData">
            <summary>
            True if we have received any new Capture, AO or Firebase events in the last
            round of polling.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Wiretap.NewMapData">
            <summary>
            True if we have received any map-related events in the last round of polling.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Wiretap.NewHCUnitData">
            <summary>
            True if we have received any new HCUnit events in the last round of polling.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Wiretap.NewFactoryData">
            <summary>
            True if factory data is loaded and we have received any new Factory events in the last round of polling.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Wiretap.NewCapturesCount">
            <summary>
            The number of new captures received in the last round of polling.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Wiretap.NewAOsCount">
            <summary>
            The number of ao changes received in the last round of polling.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Wiretap.NewFirebaseCount">
            <summary>
            The number of firebase changes received in the last round of polling.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Wiretap.NewHCMovesCount">
            <summary>
            The number of hcunit moves received in the last round of polling.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.Wiretap.NewFactoryTickCount">
            <summary>
            The number of new factory ticks received in the last round of polling.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.Subscribe(Xiperware.WiretapAPI.Metadata)">
            <summary>
            Subscribe to one or more wiretap meta data feeds.
            </summary>
            <param name="flags">One or more Metadata enum values.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.Subscribe(Xiperware.WiretapAPI.Livedata)">
            <summary>
            Subscribe to one or more wiretap live data feeds.
            </summary>
            <param name="flags">One or more Livedata enum values.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.IsSubscribed(Xiperware.WiretapAPI.Metadata)">
            <summary>
            Check if currently subscribed to the given data.
            </summary>
            <param name="flag">The data to check.</param>
            <returns>True if currently subscribed.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.IsSubscribed(Xiperware.WiretapAPI.Livedata)">
            <summary>
            Check if currently subscribed to the given data.
            </summary>
            <param name="flag">The data to check.</param>
            <returns>True if currently subscribed.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.CheckUpdatedMetadata">
            <summary>
            Checks all metadata on the wiretap server for updated versions.
            </summary>
            <returns>True if any files need re-downloading via GetMetaData().</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.CheckUpdatedMetadata(Xiperware.WiretapAPI.Metadata)">
            <summary>
            Checks the specified metadata on the wiretap server for updated versions.
            </summary>
            <returns>True if any files need re-downloading via GetMetaData().</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.GetMetaData(System.Action{System.String})">
            <summary>
            Make sure all cached metadata is up to date and load into memory.
            </summary>
            <param name="firstErrorAction">A delegate to run for the first error encountered.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.GetMetaData(Xiperware.WiretapAPI.Metadata,System.Action{System.String})">
            <summary>
            Make sure the specified cached metadata is up to date and load into memory.
            </summary>
            <param name="flags">The flag(s) to process (default: all subscribed).</param>
            <param name="firstErrorAction">A delegate to run for the first error encountered.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.GetInitState(System.Action{System.String})">
            <summary>
            Establish initial game state by downloading and parsing all subscribed init files.
            </summary>
            <param name="firstErrorAction">A delegate to run for the first error encountered.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.GetInitState(Xiperware.WiretapAPI.Livedata,System.Action{System.String})">
            <summary>
            Establish initial game state by downloading and parsing the specified subscribed init files.
            </summary>
            <param name="flags">The flag(s) to process (default: all subscribed).</param>
            <param name="firstErrorAction">A delegate to run for the first error encountered.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.GetPollData">
            <summary>
            Poll any xml files that need checking, and parse them for new events.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.GetPollData(Xiperware.WiretapAPI.Livedata)">
            <summary>
            Poll any of the specified xml files that need checking, and parse them for new events.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.FlushCache">
            <summary>
            Deletes the cached copies of all the xml metadata.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.ResetPollTimes">
            <summary>
            Reset the NextUpdate times on all the pollxmlfiles to that next poll they all get checked.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.MetaXmlFile_ChokePoint_PostParse(System.Object,Xiperware.WiretapAPI.PostParseEventArgs)">
            <summary>
            Parses the chokepoint metadata and create new ChokePoint and Bridge objects.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.MetaXmlFile_Facility_PostParse(System.Object,Xiperware.WiretapAPI.PostParseEventArgs)">
            <summary>
            Parses the facility list metadata and create new Facilitys, MilitaryFacilitys, Factorys, Depots &amp; Firebases.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.MetaXmlFile_Links_PostParse(System.Object,Xiperware.WiretapAPI.PostParseEventArgs)">
            <summary>
            Parses the links metadata and add the Depot - Firebase - Depot links.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.MetaXmlFile_VehCategory_PostParse(System.Object,Xiperware.WiretapAPI.PostParseEventArgs)">
            <summary>
            Parses the vehcat metadata and create an array of VehicleCategory objects.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.MetaXmlFile_VehClass_PostParse(System.Object,Xiperware.WiretapAPI.PostParseEventArgs)">
            <summary>
            Parses the vehcat metadata and create an array of VehicleClass objects.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.MetaXmlFile_Vehicles_PostParse(System.Object,Xiperware.WiretapAPI.PostParseEventArgs)">
            <summary>
            Parses the vehicle metadata and create an array of Vehicle objects.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.MetaXmlFile_Toes_PostParse(System.Object,Xiperware.WiretapAPI.PostParseEventArgs)">
            <summary>
            Parses the toe list metadata and create a list of Toe objects.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.MetaXmlFile_Supply_PostParse(System.Object,Xiperware.WiretapAPI.PostParseEventArgs)">
            <summary>
            Parses the toe sheet metadata and add SupplyLevel objects to each Toe.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.MetaXmlFile_HCUnit_PostParse(System.Object,Xiperware.WiretapAPI.PostParseEventArgs)">
            <summary>
            Parses the hcunits metadata and create new HCUnits, then link them together into a tree.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.MetaXmlFile_Squad_PostParse(System.Object,Xiperware.WiretapAPI.PostParseEventArgs)">
            <summary>
            Parses the squadlist metadata and create new Squads.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.MetaXmlFile_MoveResults_PostParse(System.Object,Xiperware.WiretapAPI.PostParseEventArgs)">
            <summary>
            Parses the moveresults metadata and create an array of HCUnitMoveResult objects.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.MetaXmlFile_Config_PostParse(System.Object,Xiperware.WiretapAPI.PostParseEventArgs)">
            <summary>
            Parses the server config metadata and create a list of ServerParam objects.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.InitXmlFile_CPOwner_PostParse(System.Object,Xiperware.WiretapAPI.PostParseEventArgs)">
            <summary>
            Parses the cp state data to set any non-default owner/controllers, and the
            initial AOs.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.InitXmlFile_HCLocations_PostParse(System.Object,Xiperware.WiretapAPI.PostParseEventArgs)">
            <summary>
            Parses the hcunit location data to set their initial location and last moved state.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.InitXmlFile_HCMoveReq_PreParse(System.Object,System.EventArgs)">
            <summary>
            Parses the last 12 hours of hcmove requests, populating each
            units move history and generating historical events.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.InitXmlFile_HCMoves_PreParse(System.Object,System.EventArgs)">
            <summary>
            Parses the last 12 hours of hcmoves by SYSTEM, populating each
            units move history and generating historical events.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.InitXmlFile_Captures_PostParse(System.Object,Xiperware.WiretapAPI.PostParseEventArgs)">
            <summary>
            Parses the last 2 hours of capture data to generate historical events
            and establish current state.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.InitXmlFile_Firebases_PostParse(System.Object,Xiperware.WiretapAPI.PostParseEventArgs)">
            <summary>
            Parses the current list of open firebases, and sets their initial state.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.InitXmlFile_DeathMap_PostParse(System.Object,Xiperware.WiretapAPI.PostParseEventArgs)">
            <summary>
            Parses the past hour of deathmap data.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.InitXmlFile_Servers_PostParse(System.Object,Xiperware.WiretapAPI.PostParseEventArgs)">
            <summary>
            Parses the initial server list and state.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.InitXmlFile_FactoryStats_PostParse(System.Object,Xiperware.WiretapAPI.PostParseEventArgs)">
            <summary>
            Parses the current summary stats for each factory.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.InitXmlFile_FactoryLog_PostParse(System.Object,Xiperware.WiretapAPI.PostParseEventArgs)">
            <summary>
            Parses the last 24 hours of factory tick data, generating historical events.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.PollXmlFile_Captures_PostParse(System.Object,Xiperware.WiretapAPI.PostParseEventArgs)">
            <summary>
            Called every minute, parses any new captures since last poll, generating
            new events.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.PollXmlFile_AOs_PostParse(System.Object,Xiperware.WiretapAPI.PostParseEventArgs)">
            <summary>
            Called every minute, parses the current AO list, generating new events if
            any have changed.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.PollXmlFile_HCMoveReq_PostParse(System.Object,Xiperware.WiretapAPI.PostParseEventArgs)">
            <summary>
            Called every minute, parses any moves requests/attempts since
            last poll, generating new events.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.PollXmlFile_HCMoves_PostParse(System.Object,Xiperware.WiretapAPI.PostParseEventArgs)">
            <summary>
            Called every minute, parses any SYSTEM moves since last poll,
            generating new events.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.PollXmlFile_Firebases_PostParse(System.Object,Xiperware.WiretapAPI.PostParseEventArgs)">
            <summary>
            Called every minute, parses the current open firebase list, generating new
            events if any have changed.
            </summary>
            <remarks>Should be called after PollParser_HCMoves due to brigade fbs.</remarks>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.PollXmlFile_DeathMap_PostParse(System.Object,Xiperware.WiretapAPI.PostParseEventArgs)">
            <summary>
            Called every minute, parses the last minute of deathmap data.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.PollXmlFile_Servers_PostParse(System.Object,Xiperware.WiretapAPI.PostParseEventArgs)">
            <summary>
            Called on every 5 minutes, updates the state/population for each server.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.PollXmlFile_FactoryLog_PostParse(System.Object,Xiperware.WiretapAPI.PostParseEventArgs)">
            <summary>
            If factory data is loaded, called every 15 minutes to parse the latest
            factory tick(s). Uses the "from" query param to only download new data. Is initially
            called every minute until it receives the first tick.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.Wiretap.PollXmlFile_RDP_PostParse(System.Object,Xiperware.WiretapAPI.PostParseEventArgs)">
            <summary>
            Parses the current rdp cycle info. (Used for init AND poll.)
            </summary>
            <remarks>Must run after InitParser_FactoryStats and InitParser_FactoryLog.</remarks>
        </member>
        <member name="T:Xiperware.WiretapAPI.XmlFile">
            <summary>
            The base class that represents an xml data file on the wiretap server. This class isn't
            used directly; all xmlfiles fall into one of the below three types.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.XmlFile.#ctor(System.String,System.String)">
            <summary>
            Create a new XmlFile (used by child classes).
            </summary>
            <param name="uri">The xmlfile's relative url.</param>
            <param name="xpath">The xpath referencing the xml data.</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.XmlFile.Uri">
            <summary>
            The relative url that refers to the xml file, including the current query param (if any).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.XmlFile.QueryParam">
            <summary>
            Sets or gets the query parameter to append to the url. Will be used next request.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.XmlFile.Name">
            <summary>
            Gets the filename of the xmlfile without any path components, eg, "displaycps.xml".
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.XmlFile.AttrNames">
            <summary>
            A list of all attribute names to process.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.XmlFile.AttrDefaults">
            <summary>
            A list of default values for attributes if an error occurs (null if attribute is required).
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.XmlFile.DataFlag">
            <summary>
            The Livedata flag value this file belongs to.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.XmlFile.Parse(Xiperware.WiretapAPI.NetManager)">
            <summary>
            Parse the xmlfile and process the data it contains.
            </summary>
            <param name="net">NetManager object to use when downloading xml files
            (null if parsing a MetaXmlFile).</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.XmlFile.ToString">
            <summary>
            Provides a string representation of this object.
            </summary>
            <returns>The filename.</returns>
        </member>
        <member name="T:Xiperware.WiretapAPI.InitXmlFile">
            <summary>
            Init xmlfiles are downloaded and parsed into memory on startup (and wakeup) to establish
            the base game state. These can't be cached because they contain dynamic game information.
            </summary>
        </member>
        <member name="T:Xiperware.WiretapAPI.PollXmlFile">
            <summary>
            Poll xmlfiles are downloaded are parsed into memory every so often, depending on how
            frequently the data changes, to maintain the current game state. Where possible,
            query parameters are used to specify we only want any new data since last poll.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.PollXmlFile.#ctor">
            <summary>
            Create a new empty PollXmlFile.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.PollXmlFile.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Create a new PollXmlFile with a custom update frequency.
            </summary>
            <param name="uri">The xmlfile's relative url.</param>
            <param name="xpath">The xpath referencing the xml data.</param>
            <param name="updateFreq">How often to check for new data in minutes.</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.PollXmlFile.UpdateFreq">
            <summary>
            How often to poll for new data.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.PollXmlFile.NextUpdate">
            <summary>
            The DateTime the next poll is due.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.PollXmlFile.NeedsChecking">
            <summary>
            True if this xmlfile is due to be checked for updates.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.PollXmlFile.NewDataCount">
            <summary>
            The number of new records found last poll.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.PollXmlFile.NewData">
            <summary>
            True if new data was found last poll.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.PollXmlFile.FlagAsChecked(System.Int32)">
            <summary>
            Flag this PollXmlFile as having been checked.
            </summary>
            <param name="newDataCount">The number of new records found.</param>
        </member>
        <member name="T:Xiperware.WiretapAPI.MetaXmlFile">
            <summary>
            Meta xmlfiles contain relatively static game information that can be cached locally.
            On load, and every hour, a HEAD request is made to check the Last-Modified header.
            If any have been updated, they are re-downloaded and the entire set re-parsed.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.MetaXmlFile.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Create a new server-side MetaXmlFile.
            </summary>
            <param name="uri">The xmlfile's relative url.</param>
            <param name="xpath">The xpath referencing the xml data.</param>
            <param name="reloadOnChange">True if all data should be reloaded when this file changes.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.MetaXmlFile.#ctor(System.String,System.String)">
            <summary>
            Create a new client-side MetaXmlFile.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.MetaXmlFile.LocalFile">
            <summary>
            The full path to the local cache file.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.MetaXmlFile.LocalFileInfo">
            <summary>
            A FileInfo object for the local cache file.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.MetaXmlFile.ReloadOnChange">
            <summary>
            True if all data should be reloaded when this file changes.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.MetaXmlFile.DataFlag">
            <summary>
            The Metadata flag value this file belongs to.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.MetaXmlFile.IsValid">
            <summary>
            Gets whether the cached xml file is valid (ie, not empty or truncated).
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.MetaXmlFile.Parse">
            <summary>
            Parse the xmlfile and process the data it contains.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.MetaXmlFile.FlagAsChecked">
            <summary>
            Flag this MetaXmlFile as having been checked.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.MetaXmlFile.Touch">
            <summary>
            Update the local cache file's mtime.
            </summary>
            <remarks>Used to avoid checking for updates more often than once an hour,
            including spanning program launches.</remarks>
        </member>
        <member name="T:Xiperware.WiretapAPI.XmlDataRows">
            <summary>
            A collection of the data parsed from an xml file. Handles parsing values into the
            required type, and provides fail-safe default values if an attribute is missing.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.XmlDataRows.#ctor(Xiperware.WiretapAPI.XmlFile)">
            <summary>
            Create a new xml data collection.
            </summary>
            <param name="xmlfile">The xmlfile this collection belongs to.</param>
        </member>
        <member name="P:Xiperware.WiretapAPI.XmlDataRows.XmlName">
            <summary>
            The name of the parent xmlfile.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.XmlDataRows.Count">
            <summary>
            The number of rows in the collection.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.XmlDataRows.Offset">
            <summary>
            The current row offset used by GetValue().
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.XmlDataRows.Add(System.String[])">
            <summary>
            Add a data row to the collection.
            </summary>
            <param name="row">The array of values to add.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.XmlDataRows.GetValue``1(System.String)">
            <summary>
            Gets the value of an attribute at the current row offset.
            </summary>
            <typeparam name="T">The type to parse the value to.</typeparam>
            <param name="attr">The name of the attribute to retrieve.</param>
            <returns>The attribute value as the given type.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.XmlDataRows.GetValue``1(System.String,``0)">
            <summary>
            Gets the value of an attribute at the current row offset.
            </summary>
            <typeparam name="T">The type to parse the value to.</typeparam>
            <param name="attr">The name of the attribute to retrieve.</param>
            <param name="defaultValue">The default value to use if the attribute is missing.</param>
            <returns>The attribute value as the given type, or defaultValue if missing.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.XmlDataRows.GetValue``1(System.String,System.Boolean,``0)">
            <summary>
            Gets the value of an attribute at the current row offset.
            </summary>
            <typeparam name="T">The type to parse the value to.</typeparam>
            <param name="attr">The name of the attribute to retrieve.</param>
            <param name="useDefaultValue">True if defaultValue should be used.</param>
            <param name="defaultValue">The default value to use if the attribute is missing.</param>
            <returns>The attribute value as the given type.</returns>
        </member>
        <member name="M:Xiperware.WiretapAPI.XmlDataRows.GetMaxValue(System.String)">
            <summary>
            Gets the maximum value of an int attribute.
            </summary>
            <param name="attr">The name of the attribute (must parse to int).</param>
            <returns>The largest number found.</returns>
        </member>
        <member name="T:Xiperware.WiretapAPI.PostParseEventArgs">
            <summary>
            EventArgs for the PostParse event handler.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.PostParseEventArgs.Data">
            <summary>
            The data parsed from the xml file.
            </summary>
        </member>
        <member name="P:Xiperware.WiretapAPI.PostParseEventArgs.Xml">
            <summary>
            The xml document object.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.PostParseEventArgs.#ctor(Xiperware.WiretapAPI.XmlDataRows,System.Xml.XmlDocument)">
            <summary>
            Create a new PostParseEventArgs object.
            </summary>
        </member>
        <member name="M:Xiperware.WiretapAPI.PostParseEventArgs.CheckAttribute(System.String,System.Int32,System.Collections.IList)">
            <summary>
            Checks whether the given index exists in the list.
            </summary>
            <param name="attr">The attribute name.</param>
            <param name="index">The attribute value.</param>
            <param name="list">The list to test against.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.PostParseEventArgs.CheckAttribute``2(System.String,``0,System.Collections.Generic.IDictionary{``0,``1})">
            <summary>
            Checks whether the given key exists in the Dictionary.
            </summary>
            <typeparam name="TKey">The type of the dictionary key.</typeparam>
            <typeparam name="TValue">The type of the dictionary value.</typeparam>
            <param name="attr">The attribute name.</param>
            <param name="key">The attribute value.</param>
            <param name="dictionary">The dictionary to test against.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.PostParseEventArgs.CheckAttribute(System.String,System.Int32,System.Type)">
            <summary>
            Checks whether the given value is defined in the Enum.
            </summary>
            <param name="attr">The attribute name.</param>
            <param name="value">The attribute value.</param>
            <param name="enumtype">The enum type to test against.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.PostParseEventArgs.CheckAttributeDupe(System.String,System.Int32,System.Collections.IList)">
            <summary>
            Checks whether the given index already exists in the list.
            </summary>
            <param name="attr">The attribute name.</param>
            <param name="index">The attribute value.</param>
            <param name="list">The list to test against.</param>
        </member>
        <member name="M:Xiperware.WiretapAPI.PostParseEventArgs.CheckAttributeDupe``2(System.String,``0,System.Collections.Generic.IDictionary{``0,``1})">
            <summary>
            Checks whether the given key already exists in the Dictionary.
            </summary>
            <typeparam name="TKey">The type of the dictionary key.</typeparam>
            <typeparam name="TValue">The type of the dictionary value.</typeparam>
            <param name="attr">The attribute name.</param>
            <param name="key">The attribute value.</param>
            <param name="dictionary">The dictionary to test against.</param>
        </member>
        <member name="M:XLib.Extensions.StringExt.Join``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Join a list of items into a delimited string.
            </summary>
            <param name="values">The list of items.</param>
            <param name="sep">The item separator to use (default ", ").</param>
            <returns>The concatenated string.</returns>
        </member>
        <member name="M:XLib.Extensions.StringExt.SplitRegex``1(System.String,System.String)">
            <summary>
            Convert a delimited string into a list.
            </summary>
            <typeparam name="T">The type of list to return.</typeparam>
            <param name="input">The delimited string.</param>
            <param name="sep">The separator string or regex pattern.</param>
            <returns>A list of T.</returns>
        </member>
        <member name="M:XLib.Extensions.StringExt.ParseTo``1(System.String)">
            <summary>
            Generic method to parse a string into a common type.
            </summary>
            <typeparam name="T">The type to parse to.</typeparam>
            <param name="value">The string to parse.</param>
            <returns>A value in the specific type, or an exception.</returns>
        </member>
        <member name="M:XLib.Extensions.StringExt.Pluralise(System.String)">
            <summary>
            Modifies a string in the format "there are 123 item(s) in the list" to have the correct plurality.
            </summary>
            <param name="text">The text to process.</param>
            <returns>The same text with 's' added or removed.</returns>
        </member>
        <member name="M:XLib.Extensions.StringExt.ToTitleCase(System.String,System.Boolean)">
            <summary>
            Convert a string to title case.
            </summary>
        </member>
        <member name="T:SecureCredentialsLibrary.CredentialsDialog">
            <summary>Encapsulates dialog functionality from the Credential Management API.</summary>
        </member>
        <member name="F:SecureCredentialsLibrary.CredentialsDialog.ValidBannerHeight">
            <summary>The only valid bitmap height (in pixels) of a user-defined banner.</summary>
        </member>
        <member name="F:SecureCredentialsLibrary.CredentialsDialog.ValidBannerWidth">
            <summary>The only valid bitmap width (in pixels) of a user-defined banner.</summary>
        </member>
        <member name="M:SecureCredentialsLibrary.CredentialsDialog.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:SecureCredentialsLibrary.CredentialsDialog"/> class
            with the specified target.</summary>
            <param name="target">The name of the target for the credentials, typically a server name.</param>
        </member>
        <member name="M:SecureCredentialsLibrary.CredentialsDialog.#ctor(System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:SecureCredentialsLibrary.CredentialsDialog"/> class
            with the specified target and caption.</summary>
            <param name="target">The name of the target for the credentials, typically a server name.</param>
            <param name="caption">The caption of the dialog (null will cause a system default title to be used).</param>
        </member>
        <member name="M:SecureCredentialsLibrary.CredentialsDialog.#ctor(System.String,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:SecureCredentialsLibrary.CredentialsDialog"/> class
            with the specified target, caption and message.</summary>
            <param name="target">The name of the target for the credentials, typically a server name.</param>
            <param name="caption">The caption of the dialog (null will cause a system default title to be used).</param>
            <param name="message">The message of the dialog (null will cause a system default message to be used).</param>
        </member>
        <member name="M:SecureCredentialsLibrary.CredentialsDialog.#ctor(System.String,System.String,System.String,System.Drawing.Image)">
            <summary>Initializes a new instance of the <see cref="T:SecureCredentialsLibrary.CredentialsDialog"/> class
            with the specified target, caption, message and banner.</summary>
            <param name="target">The name of the target for the credentials, typically a server name.</param>
            <param name="caption">The caption of the dialog (null will cause a system default title to be used).</param>
            <param name="message">The message of the dialog (null will cause a system default message to be used).</param>
            <param name="banner">The image to display on the dialog (null will cause a system default image to be used).</param>
        </member>
        <member name="P:SecureCredentialsLibrary.CredentialsDialog.AlwaysDisplay">
            <summary>
            Gets or sets if the dialog will be shown even if the credentials
            can be returned from an existing credential in the credential manager.
            </summary>
        </member>
        <member name="P:SecureCredentialsLibrary.CredentialsDialog.ExcludeCertificates">
            <summary>Gets or sets if the dialog is populated with name/password only.</summary>
        </member>
        <member name="P:SecureCredentialsLibrary.CredentialsDialog.Persist">
            <summary>Gets or sets if the credentials are to be persisted in the credential manager.</summary>
        </member>
        <member name="P:SecureCredentialsLibrary.CredentialsDialog.KeepName">
            <summary>Gets or sets if the name is read-only.</summary>
        </member>
        <member name="P:SecureCredentialsLibrary.CredentialsDialog.Name">
            <summary>Gets or sets the name for the credentials.</summary>
        </member>
        <member name="P:SecureCredentialsLibrary.CredentialsDialog.Password">
            <summary>Gets or sets the password for the credentials.</summary>
        </member>
        <member name="P:SecureCredentialsLibrary.CredentialsDialog.SaveChecked">
            <summary>Gets or sets if the save checkbox status.</summary>
        </member>
        <member name="P:SecureCredentialsLibrary.CredentialsDialog.SaveDisplayed">
            <summary>Gets or sets if the save checkbox is displayed.</summary>
            <remarks>This value only has effect if Persist is true.</remarks>
        </member>
        <member name="P:SecureCredentialsLibrary.CredentialsDialog.Target">
            <summary>Gets or sets the name of the target for the credentials, typically a server name.</summary>
        </member>
        <member name="P:SecureCredentialsLibrary.CredentialsDialog.Caption">
            <summary>Gets or sets the caption of the dialog.</summary>
            <remarks>A null value will cause a system default caption to be used.</remarks>
        </member>
        <member name="P:SecureCredentialsLibrary.CredentialsDialog.Message">
            <summary>Gets or sets the message of the dialog.</summary>
            <remarks>A null value will cause a system default message to be used.</remarks>
        </member>
        <member name="P:SecureCredentialsLibrary.CredentialsDialog.Banner">
            <summary>Gets or sets the image to display on the dialog.</summary>
            <remarks>A null value will cause a system default image to be used.</remarks>
        </member>
        <member name="M:SecureCredentialsLibrary.CredentialsDialog.Show">
            <summary>Shows the credentials dialog.</summary>
            <returns>Returns a DialogResult indicating the user action.</returns>
        </member>
        <member name="M:SecureCredentialsLibrary.CredentialsDialog.Show(System.Boolean)">
            <summary>Shows the credentials dialog with the specified save checkbox status.</summary>
            <param name="saveChecked">True if the save checkbox is checked.</param>
            <returns>Returns a DialogResult indicating the user action.</returns>
        </member>
        <member name="M:SecureCredentialsLibrary.CredentialsDialog.Show(System.String)">
            <summary>Shows the credentials dialog with the specified name.</summary>
            <param name="name">The name for the credentials.</param>
            <returns>Returns a DialogResult indicating the user action.</returns>
        </member>
        <member name="M:SecureCredentialsLibrary.CredentialsDialog.Show(System.String,System.String)">
            <summary>Shows the credentials dialog with the specified name and password.</summary>
            <param name="name">The name for the credentials.</param>
            <param name="password">The password for the credentials.</param>
            <returns>Returns a DialogResult indicating the user action.</returns>
        </member>
        <member name="M:SecureCredentialsLibrary.CredentialsDialog.Show(System.String,System.String,System.Boolean)">
            <summary>Shows the credentials dialog with the specified name, password and save checkbox status.</summary>
            <param name="name">The name for the credentials.</param>
            <param name="password">The password for the credentials.</param>
            <param name="saveChecked">True if the save checkbox is checked.</param>
            <returns>Returns a DialogResult indicating the user action.</returns>
        </member>
        <member name="M:SecureCredentialsLibrary.CredentialsDialog.Show(System.Windows.Forms.IWin32Window)">
            <summary>Shows the credentials dialog with the specified owner.</summary>
            <param name="owner">The System.Windows.Forms.IWin32Window the dialog will display in front of.</param>
            <returns>Returns a DialogResult indicating the user action.</returns>
        </member>
        <member name="M:SecureCredentialsLibrary.CredentialsDialog.Show(System.Windows.Forms.IWin32Window,System.Boolean)">
            <summary>Shows the credentials dialog with the specified owner and save checkbox status.</summary>
            <param name="owner">The System.Windows.Forms.IWin32Window the dialog will display in front of.</param>
            <param name="saveChecked">True if the save checkbox is checked.</param>
            <returns>Returns a DialogResult indicating the user action.</returns>
        </member>
        <member name="M:SecureCredentialsLibrary.CredentialsDialog.Show(System.Windows.Forms.IWin32Window,System.String,System.String)">
            <summary>Shows the credentials dialog with the specified owner, name and password.</summary>
            <param name="owner">The System.Windows.Forms.IWin32Window the dialog will display in front of.</param>
            <param name="name">The name for the credentials.</param>
            <param name="password">The password for the credentials.</param>
            <returns>Returns a DialogResult indicating the user action.</returns>
        </member>
        <member name="M:SecureCredentialsLibrary.CredentialsDialog.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Boolean)">
            <summary>Shows the credentials dialog with the specified owner, name, password and save checkbox status.</summary>
            <param name="owner">The System.Windows.Forms.IWin32Window the dialog will display in front of.</param>
            <param name="name">The name for the credentials.</param>
            <param name="password">The password for the credentials.</param>
            <param name="saveChecked">True if the save checkbox is checked.</param>
            <returns>Returns a DialogResult indicating the user action.</returns>
        </member>
        <member name="M:SecureCredentialsLibrary.CredentialsDialog.Confirm(System.Boolean)">
            <summary>Confirmation action to be applied.</summary>
            <param name="value">True if the credentials should be persisted.</param>
        </member>
        <member name="M:SecureCredentialsLibrary.CredentialsDialog.ShowDialog(System.Windows.Forms.IWin32Window)">
            <summary>Returns a DialogResult indicating the user action.</summary>
            <param name="owner">The System.Windows.Forms.IWin32Window the dialog will display in front of.</param>
            <remarks>
            Sets the name, password and SaveChecked accessors to the state of the dialog as it was dismissed by the user.
            </remarks>
        </member>
        <member name="M:SecureCredentialsLibrary.CredentialsDialog.GetInfo(System.Windows.Forms.IWin32Window)">
            <summary>Returns the info structure for dialog display settings.</summary>
            <param name="owner">The System.Windows.Forms.IWin32Window the dialog will display in front of.</param>
        </member>
        <member name="M:SecureCredentialsLibrary.CredentialsDialog.GetFlags">
            <summary>Returns the flags for dialog display options.</summary>
        </member>
        <member name="M:SecureCredentialsLibrary.CredentialsDialog.GetDialogResult(SecureCredentialsLibrary.CREDUI.ReturnCodes)">
            <summary>Returns a DialogResult from the specified code.</summary>
            <param name="code">The credential return code.</param>
        </member>
        <member name="F:SecureCredentialsLibrary.CREDUI.MAX_MESSAGE_LENGTH">
            <summary>http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secauthn/security/authentication_constants.asp</summary>
        </member>
        <member name="T:SecureCredentialsLibrary.CREDUI.FLAGS">
            <summary>
            http://www.pinvoke.net/default.aspx/Enums.CREDUI_FLAGS
            http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnnetsec/html/dpapiusercredentials.asp
            http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secauthn/security/creduipromptforcredentials.asp
            </summary>
        </member>
        <member name="T:SecureCredentialsLibrary.CREDUI.ReturnCodes">
            <summary>http://www.pinvoke.net/default.aspx/Enums.CredUIReturnCodes</summary>
        </member>
        <member name="T:SecureCredentialsLibrary.CREDUI.INFO">
            <summary>
            http://www.pinvoke.net/default.aspx/Structures.CREDUI_INFO
            http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secauthn/security/credui_info.asp
            </summary>
        </member>
        <member name="M:SecureCredentialsLibrary.CREDUI.PromptForCredentials(SecureCredentialsLibrary.CREDUI.INFO@,System.String,System.IntPtr,System.Int32,System.Text.StringBuilder,System.Int32,System.Text.StringBuilder,System.Int32,System.Int32@,SecureCredentialsLibrary.CREDUI.FLAGS)">
            <summary>
            http://www.pinvoke.net/default.aspx/credui.CredUIPromptForCredentialsW
            http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secauthn/security/creduipromptforcredentials.asp
            </summary>
        </member>
        <member name="M:SecureCredentialsLibrary.CREDUI.ConfirmCredentials(System.String,System.Boolean)">
            <summary>
            http://www.pinvoke.net/default.aspx/credui.CredUIConfirmCredentials
            http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secauthn/security/creduiconfirmcredentials.asp
            </summary>
        </member>
        <member name="M:SecureCredentialsLibrary.CREDUI.CredUIParseUserName(System.String,System.Text.StringBuilder,System.Int32,System.Text.StringBuilder,System.Int32)">
            <summary>
            http://www.pinvoke.net/default.aspx/credui/CredUIParseUserName.html
            </summary>
        </member>
    </members>
</doc>
